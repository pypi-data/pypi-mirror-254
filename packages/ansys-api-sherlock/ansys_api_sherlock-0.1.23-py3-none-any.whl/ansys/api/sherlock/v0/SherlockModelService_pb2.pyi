"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class ExportFEAModelRequest(google.protobuf.message.Message):
    """*
    Request to export an FEA model.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class _ExportAnalysis:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ExportAnalysisEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ExportAnalysis.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        NaturalFreq: ExportFEAModelRequest.ExportAnalysis.ValueType = ...  # 0
        HarmonicVibe: ExportFEAModelRequest.ExportAnalysis.ValueType = ...  # 1
        ICTAnalysis: ExportFEAModelRequest.ExportAnalysis.ValueType = ...  # 2
        MechanicalShock: ExportFEAModelRequest.ExportAnalysis.ValueType = ...  # 3
        RandomVibe: ExportFEAModelRequest.ExportAnalysis.ValueType = ...  # 4
    class ExportAnalysis(_ExportAnalysis, metaclass=_ExportAnalysisEnumTypeWrapper):
        pass

    NaturalFreq: ExportFEAModelRequest.ExportAnalysis.ValueType = ...  # 0
    HarmonicVibe: ExportFEAModelRequest.ExportAnalysis.ValueType = ...  # 1
    ICTAnalysis: ExportFEAModelRequest.ExportAnalysis.ValueType = ...  # 2
    MechanicalShock: ExportFEAModelRequest.ExportAnalysis.ValueType = ...  # 3
    RandomVibe: ExportFEAModelRequest.ExportAnalysis.ValueType = ...  # 4

    class DrillHoleParam(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class MinHoleDiameter(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            VALUE_FIELD_NUMBER: builtins.int
            UNIT_FIELD_NUMBER: builtins.int
            value: builtins.float = ...
            """Minimum hole diameter value."""

            unit: typing.Text = ...
            """Minimum hole diameter unit."""

            def __init__(self,
                *,
                value : builtins.float = ...,
                unit : typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["unit",b"unit","value",b"value"]) -> None: ...

        class MaxEdgeLength(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            VALUE_FIELD_NUMBER: builtins.int
            UNIT_FIELD_NUMBER: builtins.int
            value: builtins.float = ...
            """Maximum edge length value."""

            unit: typing.Text = ...
            """Maximum edge length unit."""

            def __init__(self,
                *,
                value : builtins.float = ...,
                unit : typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["unit",b"unit","value",b"value"]) -> None: ...

        DRILLHOLEMODELING_FIELD_NUMBER: builtins.int
        MINHOLEDIAMETER_FIELD_NUMBER: builtins.int
        MAXEDGELENGTH_FIELD_NUMBER: builtins.int
        drillHoleModeling: typing.Text = ...
        """Enables or disables drill hole modeling, valid values are ENABLED/enabled or DISABLED/disabled."""

        @property
        def minHoleDiameter(self) -> global___ExportFEAModelRequest.DrillHoleParam.MinHoleDiameter: ...
        @property
        def maxEdgeLength(self) -> global___ExportFEAModelRequest.DrillHoleParam.MaxEdgeLength: ...
        def __init__(self,
            *,
            drillHoleModeling : typing.Text = ...,
            minHoleDiameter : typing.Optional[global___ExportFEAModelRequest.DrillHoleParam.MinHoleDiameter] = ...,
            maxEdgeLength : typing.Optional[global___ExportFEAModelRequest.DrillHoleParam.MaxEdgeLength] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["maxEdgeLength",b"maxEdgeLength","minHoleDiameter",b"minHoleDiameter"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["drillHoleModeling",b"drillHoleModeling","maxEdgeLength",b"maxEdgeLength","minHoleDiameter",b"minHoleDiameter"]) -> None: ...

    class LeadModelParam(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class MaxMeshSize(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            VALUE_FIELD_NUMBER: builtins.int
            UNIT_FIELD_NUMBER: builtins.int
            value: builtins.float = ...
            """Max mesh size value."""

            unit: typing.Text = ...
            """Max mesh size unit."""

            def __init__(self,
                *,
                value : builtins.float = ...,
                unit : typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["unit",b"unit","value",b"value"]) -> None: ...

        class VerticalMeshSize(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            VALUE_FIELD_NUMBER: builtins.int
            UNIT_FIELD_NUMBER: builtins.int
            value: builtins.float = ...
            """Vertical mesh size value."""

            unit: typing.Text = ...
            """Vertical mesh size unit."""

            def __init__(self,
                *,
                value : builtins.float = ...,
                unit : typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["unit",b"unit","value",b"value"]) -> None: ...

        LEADMODELING_FIELD_NUMBER: builtins.int
        LEADELEMORDER_FIELD_NUMBER: builtins.int
        MAXMESHSIZE_FIELD_NUMBER: builtins.int
        VERTICALMESHSIZE_FIELD_NUMBER: builtins.int
        leadModeling: typing.Text = ...
        """Enables or disables lead modeling, valid values are ENABLED/enabled or DISABLED/disabled."""

        leadElemOrder: typing.Text = ...
        """Element order, valid values are "First Order (Linear)", "Second Order (Quadratic)", or "Solid Shell"."""

        @property
        def maxMeshSize(self) -> global___ExportFEAModelRequest.LeadModelParam.MaxMeshSize: ...
        @property
        def verticalMeshSize(self) -> global___ExportFEAModelRequest.LeadModelParam.VerticalMeshSize: ...
        def __init__(self,
            *,
            leadModeling : typing.Text = ...,
            leadElemOrder : typing.Text = ...,
            maxMeshSize : typing.Optional[global___ExportFEAModelRequest.LeadModelParam.MaxMeshSize] = ...,
            verticalMeshSize : typing.Optional[global___ExportFEAModelRequest.LeadModelParam.VerticalMeshSize] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["maxMeshSize",b"maxMeshSize","verticalMeshSize",b"verticalMeshSize"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["leadElemOrder",b"leadElemOrder","leadModeling",b"leadModeling","maxMeshSize",b"maxMeshSize","verticalMeshSize",b"verticalMeshSize"]) -> None: ...

    PROJECT_FIELD_NUMBER: builtins.int
    CCANAME_FIELD_NUMBER: builtins.int
    EXPORTFILE_FIELD_NUMBER: builtins.int
    ANALYSIS_FIELD_NUMBER: builtins.int
    DRILLHOLEPARAM_FIELD_NUMBER: builtins.int
    DETECTLEADMODELING_FIELD_NUMBER: builtins.int
    LEADMODELPARAM_FIELD_NUMBER: builtins.int
    DISPLAYMODEL_FIELD_NUMBER: builtins.int
    CLEARFEADATABASE_FIELD_NUMBER: builtins.int
    USEFEAMODELID_FIELD_NUMBER: builtins.int
    COORDINATEUNITS_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    ccaName: typing.Text = ...
    """The CCA name."""

    exportFile: typing.Text = ...
    """Full file path to the export file."""

    analysis: global___ExportFEAModelRequest.ExportAnalysis.ValueType = ...
    @property
    def drillHoleParam(self) -> global___ExportFEAModelRequest.DrillHoleParam:
        """Drill Holes modeling parameters - Min Hole Diameter and Max. Edge Length. If any of this parameter is provided, drill hole modeling will be enabled."""
        pass
    detectLeadModeling: typing.Text = ...
    """If enabled, automatically enable lead modeling if any part has lead geometry defined, valid values are ENABLED/enabled or DISABLED/disabled."""

    @property
    def leadModelParam(self) -> global___ExportFEAModelRequest.LeadModelParam: ...
    displayModel: builtins.bool = ...
    """Display model after export."""

    clearFEADatabase: builtins.bool = ...
    """Clear FEA Database before defining model."""

    useFEAModelID: builtins.bool = ...
    """Use FEA Model ID."""

    coordinateUnits: typing.Text = ...
    """Units of exported model coordinates, valid values are "in", "mm", "m", "mil", "micron", "nm"."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        ccaName : typing.Text = ...,
        exportFile : typing.Text = ...,
        analysis : global___ExportFEAModelRequest.ExportAnalysis.ValueType = ...,
        drillHoleParam : typing.Optional[global___ExportFEAModelRequest.DrillHoleParam] = ...,
        detectLeadModeling : typing.Text = ...,
        leadModelParam : typing.Optional[global___ExportFEAModelRequest.LeadModelParam] = ...,
        displayModel : builtins.bool = ...,
        clearFEADatabase : builtins.bool = ...,
        useFEAModelID : builtins.bool = ...,
        coordinateUnits : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["drillHoleParam",b"drillHoleParam","leadModelParam",b"leadModelParam"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["analysis",b"analysis","ccaName",b"ccaName","clearFEADatabase",b"clearFEADatabase","coordinateUnits",b"coordinateUnits","detectLeadModeling",b"detectLeadModeling","displayModel",b"displayModel","drillHoleParam",b"drillHoleParam","exportFile",b"exportFile","leadModelParam",b"leadModelParam","project",b"project","useFEAModelID",b"useFEAModelID"]) -> None: ...
global___ExportFEAModelRequest = ExportFEAModelRequest

class ExportTraceReinforcementModelRequest(google.protobuf.message.Message):
    """*
    Request to export a trace reinforcement model.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class TraceParam(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class DiameterThreshold(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            VALUE_FIELD_NUMBER: builtins.int
            UNIT_FIELD_NUMBER: builtins.int
            value: builtins.float = ...
            """Diameter threshold value."""

            unit: typing.Text = ...
            """Diameter threshold unit."""

            def __init__(self,
                *,
                value : builtins.float = ...,
                unit : typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["unit",b"unit","value",b"value"]) -> None: ...

        class MinHoleDiameterForShellOrBeam(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            VALUE_FIELD_NUMBER: builtins.int
            UNIT_FIELD_NUMBER: builtins.int
            value: builtins.float = ...
            """Min. hole diameter value for Shell/Beam."""

            unit: typing.Text = ...
            """Min. hole diameter unit for Shell/Beam."""

            def __init__(self,
                *,
                value : builtins.float = ...,
                unit : typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["unit",b"unit","value",b"value"]) -> None: ...

        DIAMETERTHRESHOLD_FIELD_NUMBER: builtins.int
        MINHOLEDIAMETERFORSHELLORBEAM_FIELD_NUMBER: builtins.int
        @property
        def diameterThreshold(self) -> global___ExportTraceReinforcementModelRequest.TraceParam.DiameterThreshold: ...
        @property
        def minHoleDiameterForShellOrBeam(self) -> global___ExportTraceReinforcementModelRequest.TraceParam.MinHoleDiameterForShellOrBeam: ...
        def __init__(self,
            *,
            diameterThreshold : typing.Optional[global___ExportTraceReinforcementModelRequest.TraceParam.DiameterThreshold] = ...,
            minHoleDiameterForShellOrBeam : typing.Optional[global___ExportTraceReinforcementModelRequest.TraceParam.MinHoleDiameterForShellOrBeam] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["diameterThreshold",b"diameterThreshold","minHoleDiameterForShellOrBeam",b"minHoleDiameterForShellOrBeam"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["diameterThreshold",b"diameterThreshold","minHoleDiameterForShellOrBeam",b"minHoleDiameterForShellOrBeam"]) -> None: ...

    class TraceDrillHoleParam(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        class MinHoleDiameter(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            VALUE_FIELD_NUMBER: builtins.int
            UNIT_FIELD_NUMBER: builtins.int
            value: builtins.float = ...
            """Minimum hole diameter value."""

            unit: typing.Text = ...
            """Minimum hole diameter unit."""

            def __init__(self,
                *,
                value : builtins.float = ...,
                unit : typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["unit",b"unit","value",b"value"]) -> None: ...

        class MaxEdgeLength(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
            VALUE_FIELD_NUMBER: builtins.int
            UNIT_FIELD_NUMBER: builtins.int
            value: builtins.float = ...
            """Maximum edge length value."""

            unit: typing.Text = ...
            """Maximum edge length unit."""

            def __init__(self,
                *,
                value : builtins.float = ...,
                unit : typing.Text = ...,
                ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["unit",b"unit","value",b"value"]) -> None: ...

        DRILLHOLEMODELING_FIELD_NUMBER: builtins.int
        MINHOLEDIAMETER_FIELD_NUMBER: builtins.int
        MAXEDGELENGTH_FIELD_NUMBER: builtins.int
        drillHoleModeling: typing.Text = ...
        """Enables or disables drill hole modeling, valid values are ENABLED/enabled or DISABLED/disabled."""

        @property
        def minHoleDiameter(self) -> global___ExportTraceReinforcementModelRequest.TraceDrillHoleParam.MinHoleDiameter: ...
        @property
        def maxEdgeLength(self) -> global___ExportTraceReinforcementModelRequest.TraceDrillHoleParam.MaxEdgeLength: ...
        def __init__(self,
            *,
            drillHoleModeling : typing.Text = ...,
            minHoleDiameter : typing.Optional[global___ExportTraceReinforcementModelRequest.TraceDrillHoleParam.MinHoleDiameter] = ...,
            maxEdgeLength : typing.Optional[global___ExportTraceReinforcementModelRequest.TraceDrillHoleParam.MaxEdgeLength] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["maxEdgeLength",b"maxEdgeLength","minHoleDiameter",b"minHoleDiameter"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["drillHoleModeling",b"drillHoleModeling","maxEdgeLength",b"maxEdgeLength","minHoleDiameter",b"minHoleDiameter"]) -> None: ...

    PROJECT_FIELD_NUMBER: builtins.int
    CCANAME_FIELD_NUMBER: builtins.int
    EXPORTFILE_FIELD_NUMBER: builtins.int
    OVERWRITE_FIELD_NUMBER: builtins.int
    DISPLAYMODEL_FIELD_NUMBER: builtins.int
    CLEARFEADATABASE_FIELD_NUMBER: builtins.int
    GENERATEMODELSFORALLLAYERS_FIELD_NUMBER: builtins.int
    TRACEPARAM_FIELD_NUMBER: builtins.int
    TRACEDRILLHOLEPARAM_FIELD_NUMBER: builtins.int
    COORDINATEUNITS_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    ccaName: typing.Text = ...
    """The CCA name."""

    exportFile: typing.Text = ...
    """Full file path to the trace reinforcement export file."""

    overwrite: builtins.bool = ...
    """Overwrite existing file if true."""

    displayModel: builtins.bool = ...
    """Display model after export if true."""

    clearFEADatabase: builtins.bool = ...
    """Clear FEA Database before defining model if true."""

    generateModelsForAllLayers: builtins.bool = ...
    """Generate models for all layers."""

    @property
    def traceParam(self) -> global___ExportTraceReinforcementModelRequest.TraceParam:
        """Trace properties (Diameter Threshold and Minimum Hole Diameter for Shell/Beam)."""
        pass
    @property
    def traceDrillHoleParam(self) -> global___ExportTraceReinforcementModelRequest.TraceDrillHoleParam:
        """Drill Holes modeling parameters - Min Hole Diameter and Max. Edge Length. If any of this parameter is provided, drill hole modeling will be enabled."""
        pass
    coordinateUnits: typing.Text = ...
    """Units of exported model coordinates, valid values are "in", "mm", "m", "mil", "micron", "nm"."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        ccaName : typing.Text = ...,
        exportFile : typing.Text = ...,
        overwrite : builtins.bool = ...,
        displayModel : builtins.bool = ...,
        clearFEADatabase : builtins.bool = ...,
        generateModelsForAllLayers : builtins.bool = ...,
        traceParam : typing.Optional[global___ExportTraceReinforcementModelRequest.TraceParam] = ...,
        traceDrillHoleParam : typing.Optional[global___ExportTraceReinforcementModelRequest.TraceDrillHoleParam] = ...,
        coordinateUnits : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["traceDrillHoleParam",b"traceDrillHoleParam","traceParam",b"traceParam"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["ccaName",b"ccaName","clearFEADatabase",b"clearFEADatabase","coordinateUnits",b"coordinateUnits","displayModel",b"displayModel","exportFile",b"exportFile","generateModelsForAllLayers",b"generateModelsForAllLayers","overwrite",b"overwrite","project",b"project","traceDrillHoleParam",b"traceDrillHoleParam","traceParam",b"traceParam"]) -> None: ...
global___ExportTraceReinforcementModelRequest = ExportTraceReinforcementModelRequest

class GenerateTraceModelRequest(google.protobuf.message.Message):
    """*
    Request to generate a trace model.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PROJECT_FIELD_NUMBER: builtins.int
    CCANAME_FIELD_NUMBER: builtins.int
    COPPERLAYERNAME_FIELD_NUMBER: builtins.int
    MAXARCSEGMENT_FIELD_NUMBER: builtins.int
    MAXARCSEGMENTUNITS_FIELD_NUMBER: builtins.int
    MINTRACEAREA_FIELD_NUMBER: builtins.int
    MINTRACEAREAUNITS_FIELD_NUMBER: builtins.int
    MINHOLEAREA_FIELD_NUMBER: builtins.int
    MINHOLEAREAUNITS_FIELD_NUMBER: builtins.int
    USESNAPSHOTFORNONIMAGELAYER_FIELD_NUMBER: builtins.int
    project: typing.Text = ...
    """Sherlock project name."""

    ccaName: typing.Text = ...
    """The CCA name. If left empty, trace models will be generated for all CCAs and all of their copper layers."""

    copperLayerName: typing.Text = ...
    """Copper layer from which to generate the trace model. If left empty, trace models will be generated for all copper layers."""

    maxArcSegment: builtins.float = ...
    """Max arc segment."""

    maxArcSegmentUnits: typing.Text = ...
    """Max arc segment units."""

    minTraceArea: builtins.float = ...
    """Min trace area."""

    minTraceAreaUnits: typing.Text = ...
    """Min trace area units."""

    minHoleArea: builtins.float = ...
    """Min hole area."""

    minHoleAreaUnits: typing.Text = ...
    """Min hole area units."""

    useSnapshotForNonImageLayer: builtins.bool = ...
    """Use an image to generate the trace model for layers that are not image layers. If a snapshot image exists for the layer, that snapshot is used. Otherwise this creates an image that is identical to creating a snapshot."""

    def __init__(self,
        *,
        project : typing.Text = ...,
        ccaName : typing.Text = ...,
        copperLayerName : typing.Text = ...,
        maxArcSegment : builtins.float = ...,
        maxArcSegmentUnits : typing.Text = ...,
        minTraceArea : builtins.float = ...,
        minTraceAreaUnits : typing.Text = ...,
        minHoleArea : builtins.float = ...,
        minHoleAreaUnits : typing.Text = ...,
        useSnapshotForNonImageLayer : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ccaName",b"ccaName","copperLayerName",b"copperLayerName","maxArcSegment",b"maxArcSegment","maxArcSegmentUnits",b"maxArcSegmentUnits","minHoleArea",b"minHoleArea","minHoleAreaUnits",b"minHoleAreaUnits","minTraceArea",b"minTraceArea","minTraceAreaUnits",b"minTraceAreaUnits","project",b"project","useSnapshotForNonImageLayer",b"useSnapshotForNonImageLayer"]) -> None: ...
global___GenerateTraceModelRequest = GenerateTraceModelRequest
