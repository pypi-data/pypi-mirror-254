Metadata-Version: 2.1
Name: faeruniancalendar
Version: 1.0.0
Summary: A Python module for calculating Faerunian date information based on the Gregorian calendar.
Project-URL: Homepage, https://github.com/sebastianbingham/faeruniancalendar-python
Project-URL: Issues, https://github.com/sebastianbingham/faeruniancalendar-python/issues
Project-URL: Repository, https://github.com/sebastianbingham/faeruniancalendar-python.git
Author-email: Sebastian Bingham <sebastian@sebastianbingham.com>
License: ## MIT License
        Copyright (c) 2024 - Sebastian Bingham
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        **The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.**
        
        THE SOFTWARE IS PROVIDED "AS IS," WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
License-File: LICENSE
Keywords: date calculation,faerun,faerunian
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Python: >=3
Description-Content-Type: text/markdown

# Faerunian Date Calculator

A Python module for calculating Faerunian date information based on the Gregorian calendar.

![PyPI - Version](https://img.shields.io/pypi/v/faeruniancalendar)
![Development Status](https://img.shields.io/badge/Development%20Status-4%20Beta-brightgreen)
[![License: MIT](https://img.shields.io/badge/License-MIT-blue.svg)](https://opensource.org/licenses/MIT)

## Overview

This Python module provides a functionality to calculate various Faerunian date-related information based on a given
date or the current date in the Gregorian calendar. It includes information such as the Faerunian date, name,
description, and additional year differences.

## Installation

Use `pip` to install `faeruniancalendar`.

    pip install faeruniancalendar

## Usage

Once installed import the module and use `get_raw_farray`. This is currently the only active function. It will return a
data dictionary. See the examples below.

Usage

    import faeruniancalendar
    
    print(faeruniancalendar.get_raw_farray('1988-01-24'))

Output

    {'g_date': 24, 'f_special': None, 'f_month_name': 'Hammer', 'f_month_desc': 'Deepwinter', 'f_tenday': 3,'f_day_of_week': 4, 'f_day': 24, 'f_short_format': '24 Hammer', 'f_long_format': 'the 24th of Hammer', 'f_poetic_long': 'the 24th of Deepwinter', 'events': [], 'dr_year': 1730, 'cr_year': 1705, 'nr_year': 698, 'wy_year': 2818}

## License

This software is distributed under the MIT License. You are free to use, modify, and distribute it according to the
terms and conditions of the license.

## Development Status

This software is currently in development and is not yet ready for production use. Please be aware of potential changes
and updates as development progresses.



