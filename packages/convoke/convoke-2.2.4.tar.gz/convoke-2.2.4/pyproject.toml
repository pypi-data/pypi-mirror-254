[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = 'convoke'
description = 'A Python app configuration toolkit that tries to do things right.'
version = "2.2.4"
authors = [
  "David Eyk <david@worldsenoughstudios.com>"
]
homepage = "https://github.com/eykd/convoke/"
repository = "https://github.com/eykd/convoke"
documentation = "https://github.com/eykd/convoke"


packages = [
    { include = "convoke", from = "src" },
]
license = "BSD"
readme = "README.md"

classifiers = [
    "Development Status :: 4 - Beta",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Environment :: Plugins",
    "License :: OSI Approved :: BSD License",
]


[tool.poetry.dependencies]
python = "^3.11"
funcy = "^2.0"

[tool.poetry.group.test]
optional = true
[tool.poetry.group.test.dependencies]
coverage = "^7.4"
hypothesis = "^6.92"
moto = {extras = ["server"], version = "^4.2"}
mypy = "^1.8"
pytest = "^7.4"
pytest-asyncio = "^0.23"
pytest-cov = "^4.1"
pytest-profiling = "^1.7"
pytest-random-order = "^1.1"
pytest-vcr = "^1.0"
pytest-xdist = "^3.5"
ruff = "^0.1"
tox = "^4.12.1"

[tool.poetry.group.dev]
optional = true
[tool.poetry.group.dev.dependencies]
black = "^23.12"
fakemail = "^0.1"
nest-asyncio = "^1.5"
pre-commit = "^3.6"
ipython = "^8.19"
isort = "^5.13"
mkdocs = "^1.5"
pdbpp = "^0.10"
snakeviz = "^2.2"
tox = "^4.11"
watchfiles = "^0.21"
mkdocstrings = "^0.24.0"
mkdocstrings-python = "^1.8.0"
mkdocs-autorefs = "^0.5.0"
mkdocs-material = "^9.5.6"
mike = "^2.0.0"


[tool.ruff]
# Python linter & formatter
# https://docs.astral.sh/ruff/
line-length = 120
src = ["src"]
target-version = "py311"

[tool.ruff.lint]
select = [
       "E4",  # https://docs.astral.sh/ruff/rules/#error-e
       "E7",
       "E9",
       "F",  # https://docs.astral.sh/ruff/rules/#pyflakes-f
       "W",  # https://docs.astral.sh/ruff/rules/#warning-w
       "C901",  # https://docs.astral.sh/ruff/rules/#mccabe-c90
       "D",  # https://docs.astral.sh/ruff/rules/#pydocstyle-d
]
ignore = [
       "D105",  # https://docs.astral.sh/ruff/rules/undocumented-magic-method/
       "D106",  # https://docs.astral.sh/ruff/rules/undocumented-public-nested-class/
       "D107",  # https://docs.astral.sh/ruff/rules/undocumented-public-init/
       "D203",  # https://docs.astral.sh/ruff/rules/one-blank-line-before-class/
       "D213",  # https://docs.astral.sh/ruff/rules/multi-line-summary-second-line/
       "D400",  # https://docs.astral.sh/ruff/rules/ends-in-period/
       "D401",  # https://docs.astral.sh/ruff/rules/non-imperative-mood/
       "D404",  # https://docs.astral.sh/ruff/rules/docstring-starts-with-this/
       "D415",  # https://docs.astral.sh/ruff/rules/ends-in-punctuation/
       "E501",  # https://docs.astral.sh/ruff/rules/line-too-long/
]

[tool.black]
# Python style formatter
# https://black.readthedocs.io/en/stable/index.html
line-length = 120
target-version = ['py311']

[tool.isort]
# Python import sorter
# https://pycqa.github.io/isort/
profile = "black"

[tool.pytest.ini_options]
# The best Python test runner
# https://docs.pytest.org/en/latest/contents.html
markers = [
    # If you have slow tests that you want to exclude, mark them like so:
    #     @pytest.mark.slow
    #     def test_my_slow_test():
    #         # ...
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[tool.coverage.run]
# Python test coverage tool
# https://coverage.readthedocs.io/
branch = true
source = ['src']
omit = [
     '*/test*.py',
     '*/conftest.py',
]
[tool.coverage.report]
show_missing = true

[tool.mypy]
# Python type checking
# https://www.mypy-lang.org/
plugins = ["pydantic.mypy"]

[tool.pip-tools]
# Python dependency pinning
# https://github.com/jazzband/pip-tools
index-url = 'https://pypi.org/simple'
emit-options = true

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
version_scheme = "pep440"
version_provider = "poetry"
update_changelog_on_bump = true
