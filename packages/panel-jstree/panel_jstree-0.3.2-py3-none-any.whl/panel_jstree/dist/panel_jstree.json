{"version":4,"artifacts":[{"module":{"file":"/home/runner/work/panel-jstree/panel-jstree/src/panel_jstree/dist/lib/index.js","base":"/home/runner/work/panel-jstree/panel-jstree/src/panel_jstree/dist/lib","base_path":"index.js","canonical":"index","resolution":"ESM","id":"ecf49f9c64","hash":"ecf49f9c64208508db8dd2906850a0d3457930667d111e4a7b9931fdf24b2b0c","source":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PaneljsTree = void 0;\nconst tslib_1 = require(\"tslib\");\n// export {jsTreePlot} from \"./models/jstree\"\n// import {register_models} from \"@bokehjs/base\"\n// register_models(jsTreePlot as any)\nconst PaneljsTree = tslib_1.__importStar(require(\"./bokeh_extensions/\"));\nexports.PaneljsTree = PaneljsTree;\nconst base_1 = require(\"@bokehjs/base\");\n(0, base_1.register_models)(PaneljsTree);\n//# sourceMappingURL=index.js.map\n","type":"js","dependency_paths":[["./bokeh_extensions/","/home/runner/work/panel-jstree/panel-jstree/src/panel_jstree/dist/lib/bokeh_extensions/index.js"]],"dependency_map":[],"exported":[],"externals":[],"shims":[]},"code":{"source":"/* index.js */ function _(require, module, exports, __esModule, __esExport) {\n    __esModule();\n    const tslib_1 = require(\"tslib\");\n    // export {jsTreePlot} from \"./models/jstree\"\n    // import {register_models} from \"@bokehjs/base\"\n    // register_models(jsTreePlot as any)\n    const PaneljsTree = tslib_1.__importStar(require(\"ef403b5ad2\") /* ./bokeh_extensions/ */);\n    exports.PaneljsTree = PaneljsTree;\n    const base_1 = require(\"@bokehjs/base\");\n    (0, base_1.register_models)(PaneljsTree);\n}\n","min_source":"function _(e,s,t,o,r){o();const a=e(\"tslib\").__importStar(e(\"ef403b5ad2\"));t.PaneljsTree=a;(0,e(\"@bokehjs/base\").register_models)(a)}\n//# sourceMappingURL=index.min.js.map","min_map":"{\"version\":3,\"file\":\"index.min.js\",\"names\":[\"_\",\"require\",\"module\",\"exports\",\"__esModule\",\"__esExport\",\"PaneljsTree\",\"__importStar\",\"register_models\"],\"sources\":[\"0\"],\"mappings\":\"AAAe,SAASA,EAAEC,EAASC,EAAQC,EAASC,EAAYC,GAC5DD,IACA,MAIME,EAJUL,EAAQ,SAIIM,aAAaN,EAAQ,eACjDE,EAAQG,YAAcA,GAEtB,EADeL,EAAQ,iBACZO,iBAAiBF,EAChC\"}"}},{"module":{"file":"/home/runner/work/panel-jstree/panel-jstree/src/panel_jstree/dist/lib/bokeh_extensions/index.js","base":"/home/runner/work/panel-jstree/panel-jstree/src/panel_jstree/dist/lib","base_path":"bokeh_extensions/index.js","canonical":"bokeh_extensions/index","resolution":"ESM","id":"ef403b5ad2","hash":"ef403b5ad2ae2ff463f17aebd2c0750540ffbffad4e2956e5aeac3b4d101823c","source":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.jsTree = void 0;\nconst tslib_1 = require(\"tslib\");\nconst jsTree = tslib_1.__importStar(require(\"./jstree\"));\nexports.jsTree = jsTree;\nconst base_1 = require(\"@bokehjs/base\");\n(0, base_1.register_models)(jsTree);\n//# sourceMappingURL=index.js.map\n","type":"js","dependency_paths":[["./jstree","/home/runner/work/panel-jstree/panel-jstree/src/panel_jstree/dist/lib/bokeh_extensions/jstree.js"]],"dependency_map":[],"exported":[],"externals":[],"shims":[]},"code":{"source":"/* bokeh_extensions/index.js */ function _(require, module, exports, __esModule, __esExport) {\n    __esModule();\n    const tslib_1 = require(\"tslib\");\n    const jsTree = tslib_1.__importStar(require(\"15032009db\") /* ./jstree */);\n    exports.jsTree = jsTree;\n    const base_1 = require(\"@bokehjs/base\");\n    (0, base_1.register_models)(jsTree);\n}\n","min_source":"function _(e,s,t,o,r){o();const b=e(\"tslib\").__importStar(e(\"15032009db\"));t.jsTree=b;(0,e(\"@bokehjs/base\").register_models)(b)}\n//# sourceMappingURL=index.min.js.map","min_map":"{\"version\":3,\"file\":\"index.min.js\",\"names\":[\"_\",\"require\",\"module\",\"exports\",\"__esModule\",\"__esExport\",\"jsTree\",\"__importStar\",\"register_models\"],\"sources\":[\"0\"],\"mappings\":\"AAAgC,SAASA,EAAEC,EAASC,EAAQC,EAASC,EAAYC,GAC7ED,IACA,MACME,EADUL,EAAQ,SACDM,aAAaN,EAAQ,eAC5CE,EAAQG,OAASA,GAEjB,EADeL,EAAQ,iBACZO,iBAAiBF,EAChC\"}"}},{"module":{"file":"/home/runner/work/panel-jstree/panel-jstree/src/panel_jstree/dist/lib/bokeh_extensions/jstree.js","base":"/home/runner/work/panel-jstree/panel-jstree/src/panel_jstree/dist/lib","base_path":"bokeh_extensions/jstree.js","canonical":"bokeh_extensions/jstree","resolution":"ESM","id":"15032009db","hash":"15032009dbecbb7fcb3bc3d5d4d19e40fdb6ca0dc6b91e5645c49ab2bf762da1","source":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.jsTreePlot = exports.jsTreePlotView = void 0;\nvar _a;\nconst dom_1 = require(\"@bokehjs/core/dom\");\nconst layout_1 = require(\"./layout\");\nfunction ID() {\n    // Math.random should be unique because of its seeding algorithm.\n    // Convert it to base 36 (numbers + letters), and grab the first 9 characters\n    // after the decimal.\n    return '_' + Math.random().toString(36).substring(2, 11);\n}\nclass jsTreePlotView extends layout_1.HTMLBoxView {\n    initialize() {\n        super.initialize();\n        this._last_selected = [];\n    }\n    connect_signals() {\n        console.log(\"connect\");\n        super.connect_signals();\n        this.connect(this.model.properties._data.change, () => this._update_tree_from_data());\n        this.connect(this.model.properties.value.change, () => this._update_selection_from_value());\n        this.connect(this.model.properties._new_nodes.change, () => this._update_tree_from_new_nodes());\n        this.connect(this.model.properties.checkbox.change, () => this.setCheckboxes());\n        this.connect(this.model.properties.show_icons.change, () => this._setShowIcons());\n        this.connect(this.model.properties.show_dots.change, () => this._setShowDots());\n        this.connect(this.model.properties.multiple.change, () => this._setMultiple());\n        console.log(this.model.show_dots);\n        console.log(this.model.show_icons);\n    }\n    render() {\n        super.render();\n        this._id = ID();\n        console.log(this._id);\n        this._container = (0, dom_1.div)({ id: this._id, style: \"overflow: auto; minHeight: 200px; minWidth: 200px;\" });\n        (0, layout_1.set_size)(this._container, this.model);\n        this.shadow_el.appendChild(this._container);\n        console.log(this._container);\n        let kw = { \"checkbox\": {\n                \"three_state\": false,\n                \"cascade\": \"undetermined\"\n            } };\n        if (this.model.checkbox) {\n            this.model.plugins.push(\"checkbox\");\n        }\n        if (this.model.drag_and_drop) {\n            this.model.plugins.push(\"dnd\");\n            kw[\"check_callback\"] = true;\n        }\n        this._jstree = jQuery(this._container).jstree(Object.assign({ \"core\": { \"data\": this.model._data, \"check_callback\": true,\n                \"multiple\": this.model.multiple,\n                \"themes\": {\n                    \"dots\": this.model.show_dots,\n                    \"icons\": this.model.show_icons\n                }\n            }, \"plugins\": this.model.plugins }, kw));\n        this.init_callbacks();\n    }\n    init_callbacks() {\n        // Initialization\n        // Rendering callbacks\n        // TODO: do I need both of these?\n        this._jstree.on('refresh.jstree', ({}, {}) => this._update_selection_from_value());\n        // Sync state with model\n        this._jstree.on('model.jstree', ({}, {}) => this.onNewData());\n        this._jstree.on('activate_node.jstree', ({}, data) => this.selectNodeFromEditor({}, data));\n        this._jstree.on('before_open.jstree', (e, data) => this._listen_for_node_open(e, data));\n    }\n    onNewData() {\n        this.model._flat_tree = this._jstree.jstree(true).get_json(null, { \"flat\": true });\n        console.log(\"flat tree: \", this.model._flat_tree);\n    }\n    selectNodeFromEditor({}, data) {\n        console.log(\"select pre\", this.model.value);\n        this.model.value = data.instance.get_selected();\n        console.log(\"select post\", this.model.value);\n    }\n    _update_selection_from_value() {\n        console.log(\"update selection from value\");\n        this._jstree.jstree(true).select_node(this.model.value);\n        // We sometimes have to fire this function more than once per value change because of\n        // calling jstree.refresh, so we check to see if model.value has really changed\n        // by comparing to last_selected\n        if (this.model.value != this._last_selected) {\n            let deselected = this._last_selected.filter(x => !this.model.value.includes(x));\n            this._jstree.jstree(true).deselect_node(deselected);\n        }\n        // We choose get_selected\n        this._last_selected = this.model.value;\n    }\n    _update_tree_from_new_nodes() {\n        console.log(\"new nodes: \", this.model._new_nodes);\n        for (let node of this.model._new_nodes) {\n            this._jstree.jstree(true).create_node(node[\"parent\"], node, \"first\");\n        }\n        this._jstree.jstree(true).settings.core.data = this._jstree.jstree(true).get_json(null, { no_li_attr: true, no_a_attr: true, no_data: true });\n        this.model._data = this._jstree.jstree(true).settings.core.data;\n        // this._update_selection_from_value()\n    }\n    _update_tree_from_data() {\n        console.log(\"updating data\");\n        this._jstree.jstree(true).settings.core.data = this.model._data;\n        console.log(\"data: \", this._jstree.jstree(true).settings.core.data);\n        console.log(\"value after data\", this.model.value);\n        // This will redraw the tree if we swap out the data with new data\n        // we set forget_state to true, so the current state is not reapplied\n        // letting whatever state is set in the new data (open or closed, etc)\n        // be the new state\n        this._jstree.jstree(true).refresh({ \"skip_loading\": false,\n            \"forget_state\": true });\n        // selected state is not preserved correctly right now, so we then\n        // deselect everything because that is better than getting it wrong\n        this._jstree.jstree(true).deselect_all({ \"supress_event\": true });\n        console.log(\"value after refresh\", this.model.value);\n        console.log(\"data after refresh\", this._jstree.jstree(true).settings.core.data);\n    }\n    _setShowIcons() {\n        console.log(\"setShowIcons\");\n        if (this.model.show_icons) {\n            this._jstree.jstree(true).show_icons();\n        }\n        else {\n            this._jstree.jstree(true).hide_icons();\n        }\n    }\n    _setShowDots() {\n        console.log(\"setShowDots\");\n        if (this.model.show_dots) {\n            this._jstree.jstree(true).show_dots();\n        }\n        else {\n            this._jstree.jstree(true).hide_dots();\n        }\n    }\n    setCheckboxes() {\n        console.log(\"setCheckBoxes\");\n        if (this.model.checkbox) {\n            this._jstree.jstree(true).show_checkboxes();\n        }\n        else {\n            this._jstree.jstree(true).hide_checkboxes();\n        }\n    }\n    _setMultiple() {\n        console.log(\"setMultiple\");\n        this._jstree.jstree(true).settings.core.multiple = this.model.multiple;\n    }\n    _update_tree_theme_from_model() {\n        this._jstree.jstree(true).refresh(false, true);\n    }\n    _listen_for_node_open({}, data) {\n        console.log(\"listen for node open\");\n        data.node = this.add_node_children(data.node);\n        this.model._last_opened = data.node;\n    }\n    add_node_children(node) {\n        console.log(\"add node children\");\n        node[\"children_nodes\"] = [];\n        for (let child of node.children) {\n            node.children_nodes.push(this._jstree.jstree(true).get_node(child));\n        }\n        return node;\n    }\n}\nexports.jsTreePlotView = jsTreePlotView;\njsTreePlotView.__name__ = \"jsTreePlotView\";\nclass jsTreePlot extends layout_1.HTMLBox {\n    constructor(attrs) {\n        super(attrs);\n    }\n}\nexports.jsTreePlot = jsTreePlot;\n_a = jsTreePlot;\njsTreePlot.__name__ = \"jsTreePlot\";\njsTreePlot.__module__ = \"panel_jstree.bokeh_extensions.jstree\";\n(() => {\n    _a.prototype.default_view = jsTreePlotView;\n    _a.define(({ Array, Any, Boolean }) => ({\n        value: [Array(Any), []],\n        _data: [Array(Any), []],\n        plugins: [Array(Any), []],\n        checkbox: [Boolean, true],\n        multiple: [Boolean, true],\n        show_icons: [Boolean, true],\n        show_dots: [Boolean, true],\n        drag_and_drop: [Boolean, false],\n        _last_opened: [Any, {}],\n        _new_nodes: [Array(Any), []],\n        _flat_tree: [Array(Any), []],\n    }));\n})();\n//# sourceMappingURL=jstree.js.map\n","type":"js","dependency_paths":[["./layout","/home/runner/work/panel-jstree/panel-jstree/src/panel_jstree/dist/lib/bokeh_extensions/layout.js"]],"dependency_map":[],"exported":[{"type":"named","name":"jsTreePlotView"},{"type":"named","name":"jsTreePlot"}],"externals":[],"shims":[]},"code":{"source":"/* bokeh_extensions/jstree.js */ function _(require, module, exports, __esModule, __esExport) {\n    __esModule();\n    var _a;\n    const dom_1 = require(\"@bokehjs/core/dom\");\n    const layout_1 = require(\"bfe8e8c0eb\") /* ./layout */;\n    function ID() {\n        // Math.random should be unique because of its seeding algorithm.\n        // Convert it to base 36 (numbers + letters), and grab the first 9 characters\n        // after the decimal.\n        return '_' + Math.random().toString(36).substring(2, 11);\n    }\n    class jsTreePlotView extends layout_1.HTMLBoxView {\n        initialize() {\n            super.initialize();\n            this._last_selected = [];\n        }\n        connect_signals() {\n            console.log(\"connect\");\n            super.connect_signals();\n            this.connect(this.model.properties._data.change, () => this._update_tree_from_data());\n            this.connect(this.model.properties.value.change, () => this._update_selection_from_value());\n            this.connect(this.model.properties._new_nodes.change, () => this._update_tree_from_new_nodes());\n            this.connect(this.model.properties.checkbox.change, () => this.setCheckboxes());\n            this.connect(this.model.properties.show_icons.change, () => this._setShowIcons());\n            this.connect(this.model.properties.show_dots.change, () => this._setShowDots());\n            this.connect(this.model.properties.multiple.change, () => this._setMultiple());\n            console.log(this.model.show_dots);\n            console.log(this.model.show_icons);\n        }\n        render() {\n            super.render();\n            this._id = ID();\n            console.log(this._id);\n            this._container = (0, dom_1.div)({ id: this._id, style: \"overflow: auto; minHeight: 200px; minWidth: 200px;\" });\n            (0, layout_1.set_size)(this._container, this.model);\n            this.shadow_el.appendChild(this._container);\n            console.log(this._container);\n            let kw = { \"checkbox\": {\n                    \"three_state\": false,\n                    \"cascade\": \"undetermined\"\n                } };\n            if (this.model.checkbox) {\n                this.model.plugins.push(\"checkbox\");\n            }\n            if (this.model.drag_and_drop) {\n                this.model.plugins.push(\"dnd\");\n                kw[\"check_callback\"] = true;\n            }\n            this._jstree = jQuery(this._container).jstree(Object.assign({ \"core\": { \"data\": this.model._data, \"check_callback\": true,\n                    \"multiple\": this.model.multiple,\n                    \"themes\": {\n                        \"dots\": this.model.show_dots,\n                        \"icons\": this.model.show_icons\n                    }\n                }, \"plugins\": this.model.plugins }, kw));\n            this.init_callbacks();\n        }\n        init_callbacks() {\n            // Initialization\n            // Rendering callbacks\n            // TODO: do I need both of these?\n            this._jstree.on('refresh.jstree', ({}, {}) => this._update_selection_from_value());\n            // Sync state with model\n            this._jstree.on('model.jstree', ({}, {}) => this.onNewData());\n            this._jstree.on('activate_node.jstree', ({}, data) => this.selectNodeFromEditor({}, data));\n            this._jstree.on('before_open.jstree', (e, data) => this._listen_for_node_open(e, data));\n        }\n        onNewData() {\n            this.model._flat_tree = this._jstree.jstree(true).get_json(null, { \"flat\": true });\n            console.log(\"flat tree: \", this.model._flat_tree);\n        }\n        selectNodeFromEditor({}, data) {\n            console.log(\"select pre\", this.model.value);\n            this.model.value = data.instance.get_selected();\n            console.log(\"select post\", this.model.value);\n        }\n        _update_selection_from_value() {\n            console.log(\"update selection from value\");\n            this._jstree.jstree(true).select_node(this.model.value);\n            // We sometimes have to fire this function more than once per value change because of\n            // calling jstree.refresh, so we check to see if model.value has really changed\n            // by comparing to last_selected\n            if (this.model.value != this._last_selected) {\n                let deselected = this._last_selected.filter(x => !this.model.value.includes(x));\n                this._jstree.jstree(true).deselect_node(deselected);\n            }\n            // We choose get_selected\n            this._last_selected = this.model.value;\n        }\n        _update_tree_from_new_nodes() {\n            console.log(\"new nodes: \", this.model._new_nodes);\n            for (let node of this.model._new_nodes) {\n                this._jstree.jstree(true).create_node(node[\"parent\"], node, \"first\");\n            }\n            this._jstree.jstree(true).settings.core.data = this._jstree.jstree(true).get_json(null, { no_li_attr: true, no_a_attr: true, no_data: true });\n            this.model._data = this._jstree.jstree(true).settings.core.data;\n            // this._update_selection_from_value()\n        }\n        _update_tree_from_data() {\n            console.log(\"updating data\");\n            this._jstree.jstree(true).settings.core.data = this.model._data;\n            console.log(\"data: \", this._jstree.jstree(true).settings.core.data);\n            console.log(\"value after data\", this.model.value);\n            // This will redraw the tree if we swap out the data with new data\n            // we set forget_state to true, so the current state is not reapplied\n            // letting whatever state is set in the new data (open or closed, etc)\n            // be the new state\n            this._jstree.jstree(true).refresh({ \"skip_loading\": false,\n                \"forget_state\": true });\n            // selected state is not preserved correctly right now, so we then\n            // deselect everything because that is better than getting it wrong\n            this._jstree.jstree(true).deselect_all({ \"supress_event\": true });\n            console.log(\"value after refresh\", this.model.value);\n            console.log(\"data after refresh\", this._jstree.jstree(true).settings.core.data);\n        }\n        _setShowIcons() {\n            console.log(\"setShowIcons\");\n            if (this.model.show_icons) {\n                this._jstree.jstree(true).show_icons();\n            }\n            else {\n                this._jstree.jstree(true).hide_icons();\n            }\n        }\n        _setShowDots() {\n            console.log(\"setShowDots\");\n            if (this.model.show_dots) {\n                this._jstree.jstree(true).show_dots();\n            }\n            else {\n                this._jstree.jstree(true).hide_dots();\n            }\n        }\n        setCheckboxes() {\n            console.log(\"setCheckBoxes\");\n            if (this.model.checkbox) {\n                this._jstree.jstree(true).show_checkboxes();\n            }\n            else {\n                this._jstree.jstree(true).hide_checkboxes();\n            }\n        }\n        _setMultiple() {\n            console.log(\"setMultiple\");\n            this._jstree.jstree(true).settings.core.multiple = this.model.multiple;\n        }\n        _update_tree_theme_from_model() {\n            this._jstree.jstree(true).refresh(false, true);\n        }\n        _listen_for_node_open({}, data) {\n            console.log(\"listen for node open\");\n            data.node = this.add_node_children(data.node);\n            this.model._last_opened = data.node;\n        }\n        add_node_children(node) {\n            console.log(\"add node children\");\n            node[\"children_nodes\"] = [];\n            for (let child of node.children) {\n                node.children_nodes.push(this._jstree.jstree(true).get_node(child));\n            }\n            return node;\n        }\n    }\n    exports.jsTreePlotView = jsTreePlotView;\n    jsTreePlotView.__name__ = \"jsTreePlotView\";\n    class jsTreePlot extends layout_1.HTMLBox {\n        constructor(attrs) {\n            super(attrs);\n        }\n    }\n    exports.jsTreePlot = jsTreePlot;\n    _a = jsTreePlot;\n    jsTreePlot.__name__ = \"jsTreePlot\";\n    jsTreePlot.__module__ = \"panel_jstree.bokeh_extensions.jstree\";\n    (() => {\n        _a.prototype.default_view = jsTreePlotView;\n        _a.define(({ Array, Any, Boolean }) => ({\n            value: [Array(Any), []],\n            _data: [Array(Any), []],\n            plugins: [Array(Any), []],\n            checkbox: [Boolean, true],\n            multiple: [Boolean, true],\n            show_icons: [Boolean, true],\n            show_dots: [Boolean, true],\n            drag_and_drop: [Boolean, false],\n            _last_opened: [Any, {}],\n            _new_nodes: [Array(Any), []],\n            _flat_tree: [Array(Any), []],\n        }));\n    })();\n}\n","min_source":"function _(e,t,s,o,i){var l;o();const n=e(\"@bokehjs/core/dom\"),_=e(\"bfe8e8c0eb\");class r extends _.HTMLBoxView{initialize(){super.initialize(),this._last_selected=[]}connect_signals(){console.log(\"connect\"),super.connect_signals(),this.connect(this.model.properties._data.change,(()=>this._update_tree_from_data())),this.connect(this.model.properties.value.change,(()=>this._update_selection_from_value())),this.connect(this.model.properties._new_nodes.change,(()=>this._update_tree_from_new_nodes())),this.connect(this.model.properties.checkbox.change,(()=>this.setCheckboxes())),this.connect(this.model.properties.show_icons.change,(()=>this._setShowIcons())),this.connect(this.model.properties.show_dots.change,(()=>this._setShowDots())),this.connect(this.model.properties.multiple.change,(()=>this._setMultiple())),console.log(this.model.show_dots),console.log(this.model.show_icons)}render(){super.render(),this._id=\"_\"+Math.random().toString(36).substring(2,11),console.log(this._id),this._container=(0,n.div)({id:this._id,style:\"overflow: auto; minHeight: 200px; minWidth: 200px;\"}),(0,_.set_size)(this._container,this.model),this.shadow_el.appendChild(this._container),console.log(this._container);let e={checkbox:{three_state:!1,cascade:\"undetermined\"}};this.model.checkbox&&this.model.plugins.push(\"checkbox\"),this.model.drag_and_drop&&(this.model.plugins.push(\"dnd\"),e.check_callback=!0),this._jstree=jQuery(this._container).jstree(Object.assign({core:{data:this.model._data,check_callback:!0,multiple:this.model.multiple,themes:{dots:this.model.show_dots,icons:this.model.show_icons}},plugins:this.model.plugins},e)),this.init_callbacks()}init_callbacks(){this._jstree.on(\"refresh.jstree\",(({},{})=>this._update_selection_from_value())),this._jstree.on(\"model.jstree\",(({},{})=>this.onNewData())),this._jstree.on(\"activate_node.jstree\",(({},e)=>this.selectNodeFromEditor({},e))),this._jstree.on(\"before_open.jstree\",((e,t)=>this._listen_for_node_open(e,t)))}onNewData(){this.model._flat_tree=this._jstree.jstree(!0).get_json(null,{flat:!0}),console.log(\"flat tree: \",this.model._flat_tree)}selectNodeFromEditor({},e){console.log(\"select pre\",this.model.value),this.model.value=e.instance.get_selected(),console.log(\"select post\",this.model.value)}_update_selection_from_value(){if(console.log(\"update selection from value\"),this._jstree.jstree(!0).select_node(this.model.value),this.model.value!=this._last_selected){let e=this._last_selected.filter((e=>!this.model.value.includes(e)));this._jstree.jstree(!0).deselect_node(e)}this._last_selected=this.model.value}_update_tree_from_new_nodes(){console.log(\"new nodes: \",this.model._new_nodes);for(let e of this.model._new_nodes)this._jstree.jstree(!0).create_node(e.parent,e,\"first\");this._jstree.jstree(!0).settings.core.data=this._jstree.jstree(!0).get_json(null,{no_li_attr:!0,no_a_attr:!0,no_data:!0}),this.model._data=this._jstree.jstree(!0).settings.core.data}_update_tree_from_data(){console.log(\"updating data\"),this._jstree.jstree(!0).settings.core.data=this.model._data,console.log(\"data: \",this._jstree.jstree(!0).settings.core.data),console.log(\"value after data\",this.model.value),this._jstree.jstree(!0).refresh({skip_loading:!1,forget_state:!0}),this._jstree.jstree(!0).deselect_all({supress_event:!0}),console.log(\"value after refresh\",this.model.value),console.log(\"data after refresh\",this._jstree.jstree(!0).settings.core.data)}_setShowIcons(){console.log(\"setShowIcons\"),this.model.show_icons?this._jstree.jstree(!0).show_icons():this._jstree.jstree(!0).hide_icons()}_setShowDots(){console.log(\"setShowDots\"),this.model.show_dots?this._jstree.jstree(!0).show_dots():this._jstree.jstree(!0).hide_dots()}setCheckboxes(){console.log(\"setCheckBoxes\"),this.model.checkbox?this._jstree.jstree(!0).show_checkboxes():this._jstree.jstree(!0).hide_checkboxes()}_setMultiple(){console.log(\"setMultiple\"),this._jstree.jstree(!0).settings.core.multiple=this.model.multiple}_update_tree_theme_from_model(){this._jstree.jstree(!0).refresh(!1,!0)}_listen_for_node_open({},e){console.log(\"listen for node open\"),e.node=this.add_node_children(e.node),this.model._last_opened=e.node}add_node_children(e){console.log(\"add node children\"),e.children_nodes=[];for(let t of e.children)e.children_nodes.push(this._jstree.jstree(!0).get_node(t));return e}}s.jsTreePlotView=r,r.__name__=\"jsTreePlotView\";class h extends _.HTMLBox{constructor(e){super(e)}}s.jsTreePlot=h,l=h,h.__name__=\"jsTreePlot\",h.__module__=\"panel_jstree.bokeh_extensions.jstree\",l.prototype.default_view=r,l.define((({Array:e,Any:t,Boolean:s})=>({value:[e(t),[]],_data:[e(t),[]],plugins:[e(t),[]],checkbox:[s,!0],multiple:[s,!0],show_icons:[s,!0],show_dots:[s,!0],drag_and_drop:[s,!1],_last_opened:[t,{}],_new_nodes:[e(t),[]],_flat_tree:[e(t),[]]})))}\n//# sourceMappingURL=jstree.min.js.map","min_map":"{\"version\":3,\"file\":\"jstree.min.js\",\"names\":[\"_\",\"require\",\"module\",\"exports\",\"__esModule\",\"__esExport\",\"_a\",\"dom_1\",\"layout_1\",\"jsTreePlotView\",\"HTMLBoxView\",\"initialize\",\"super\",\"this\",\"_last_selected\",\"connect_signals\",\"console\",\"log\",\"connect\",\"model\",\"properties\",\"_data\",\"change\",\"_update_tree_from_data\",\"value\",\"_update_selection_from_value\",\"_new_nodes\",\"_update_tree_from_new_nodes\",\"checkbox\",\"setCheckboxes\",\"show_icons\",\"_setShowIcons\",\"show_dots\",\"_setShowDots\",\"multiple\",\"_setMultiple\",\"render\",\"_id\",\"Math\",\"random\",\"toString\",\"substring\",\"_container\",\"div\",\"id\",\"style\",\"set_size\",\"shadow_el\",\"appendChild\",\"kw\",\"three_state\",\"cascade\",\"plugins\",\"push\",\"drag_and_drop\",\"_jstree\",\"jQuery\",\"jstree\",\"Object\",\"assign\",\"core\",\"data\",\"check_callback\",\"themes\",\"dots\",\"icons\",\"init_callbacks\",\"on\",\"onNewData\",\"selectNodeFromEditor\",\"e\",\"_listen_for_node_open\",\"_flat_tree\",\"get_json\",\"flat\",\"instance\",\"get_selected\",\"select_node\",\"deselected\",\"filter\",\"x\",\"includes\",\"deselect_node\",\"node\",\"create_node\",\"settings\",\"no_li_attr\",\"no_a_attr\",\"no_data\",\"refresh\",\"skip_loading\",\"forget_state\",\"deselect_all\",\"supress_event\",\"hide_icons\",\"hide_dots\",\"show_checkboxes\",\"hide_checkboxes\",\"_update_tree_theme_from_model\",\"add_node_children\",\"_last_opened\",\"child\",\"children\",\"children_nodes\",\"get_node\",\"__name__\",\"jsTreePlot\",\"HTMLBox\",\"constructor\",\"attrs\",\"__module__\",\"prototype\",\"default_view\",\"define\",\"Array\",\"Any\",\"Boolean\"],\"sources\":[\"0\"],\"mappings\":\"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\"}"}},{"module":{"file":"/home/runner/work/panel-jstree/panel-jstree/src/panel_jstree/dist/lib/bokeh_extensions/layout.js","base":"/home/runner/work/panel-jstree/panel-jstree/src/panel_jstree/dist/lib","base_path":"bokeh_extensions/layout.js","canonical":"bokeh_extensions/layout","resolution":"ESM","id":"bfe8e8c0eb","hash":"bfe8e8c0ebb8ecb1a28c475138f6dfae38a4e67878682cd23f1746d6f239897f","source":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HTMLBox = exports.HTMLBoxView = exports.set_size = exports.PanelMarkupView = void 0;\nconst dom_1 = require(\"@bokehjs/core/dom\");\nconst types_1 = require(\"@bokehjs/core/util/types\");\nconst widget_1 = require(\"@bokehjs/models/widgets/widget\");\nconst layout_dom_1 = require(\"@bokehjs/models/layouts/layout_dom\");\nclass PanelMarkupView extends widget_1.WidgetView {\n    async lazy_initialize() {\n        await super.lazy_initialize();\n        if (this.provider.status == \"not_started\" || this.provider.status == \"loading\")\n            this.provider.ready.connect(() => {\n                if (this.contains_tex_string(this.model.text))\n                    this.render();\n            });\n    }\n    connect_signals() {\n        super.connect_signals();\n        this.connect(this.model.change, () => {\n            this.render();\n        });\n    }\n    has_math_disabled() {\n        return this.model.disable_math || !this.contains_tex_string(this.model.text);\n    }\n    render() {\n        super.render();\n        set_size(this.el, this.model);\n        this.container = (0, dom_1.div)();\n        set_size(this.container, this.model, false);\n        this.shadow_el.appendChild(this.container);\n        if (this.provider.status == \"failed\" || this.provider.status == \"loaded\")\n            this._has_finished = true;\n    }\n}\nexports.PanelMarkupView = PanelMarkupView;\nPanelMarkupView.__name__ = \"PanelMarkupView\";\nfunction set_size(el, model, adjustMargin = true) {\n    let width_policy = model.width != null ? \"fixed\" : \"fit\";\n    let height_policy = model.height != null ? \"fixed\" : \"fit\";\n    const { sizing_mode, margin } = model;\n    if (sizing_mode != null) {\n        if (sizing_mode == \"fixed\")\n            width_policy = height_policy = \"fixed\";\n        else if (sizing_mode == \"stretch_both\")\n            width_policy = height_policy = \"max\";\n        else if (sizing_mode == \"stretch_width\")\n            width_policy = \"max\";\n        else if (sizing_mode == \"stretch_height\")\n            height_policy = \"max\";\n        else {\n            switch (sizing_mode) {\n                case \"scale_width\":\n                    width_policy = \"max\";\n                    height_policy = \"min\";\n                    break;\n                case \"scale_height\":\n                    width_policy = \"min\";\n                    height_policy = \"max\";\n                    break;\n                case \"scale_both\":\n                    width_policy = \"max\";\n                    height_policy = \"max\";\n                    break;\n                default:\n                    throw new Error(\"unreachable\");\n            }\n        }\n    }\n    let wm, hm;\n    if (!adjustMargin) {\n        hm = wm = 0;\n    }\n    else if ((0, types_1.isArray)(margin)) {\n        if (margin.length === 4) {\n            hm = margin[0] + margin[2];\n            wm = margin[1] + margin[3];\n        }\n        else {\n            hm = margin[0] * 2;\n            wm = margin[1] * 2;\n        }\n    }\n    else if (margin == null) {\n        hm = wm = 0;\n    }\n    else {\n        wm = hm = margin * 2;\n    }\n    if (width_policy == \"fixed\" && model.width)\n        el.style.width = model.width + \"px\";\n    else if (width_policy == \"max\")\n        el.style.width = wm ? `calc(100% - ${wm}px)` : \"100%\";\n    if (model.min_width != null)\n        el.style.minWidth = model.min_width + \"px\";\n    if (model.max_width != null)\n        el.style.maxWidth = model.max_width + \"px\";\n    if (height_policy == \"fixed\" && model.height)\n        el.style.height = model.height + \"px\";\n    else if (height_policy == \"max\")\n        el.style.height = hm ? `calc(100% - ${hm}px)` : \"100%\";\n    if (model.min_height != null)\n        el.style.minHeight = model.min_height + \"px\";\n    if (model.max_width != null)\n        el.style.maxHeight = model.max_height + \"px\";\n}\nexports.set_size = set_size;\nclass HTMLBoxView extends layout_dom_1.LayoutDOMView {\n    render() {\n        super.render();\n        set_size(this.el, this.model);\n    }\n    watch_stylesheets() {\n        this._initialized_stylesheets = {};\n        for (const sts of this._applied_stylesheets) {\n            const style_el = sts.el;\n            if (style_el instanceof HTMLLinkElement) {\n                this._initialized_stylesheets[style_el.href] = false;\n                style_el.addEventListener(\"load\", () => {\n                    this._initialized_stylesheets[style_el.href] = true;\n                    if (Object.values(this._initialized_stylesheets).every(Boolean))\n                        this.style_redraw();\n                });\n            }\n        }\n    }\n    style_redraw() {\n    }\n    get child_models() {\n        return [];\n    }\n}\nexports.HTMLBoxView = HTMLBoxView;\nHTMLBoxView.__name__ = \"HTMLBoxView\";\nclass HTMLBox extends layout_dom_1.LayoutDOM {\n    constructor(attrs) {\n        super(attrs);\n    }\n}\nexports.HTMLBox = HTMLBox;\nHTMLBox.__name__ = \"HTMLBox\";\n//# sourceMappingURL=layout.js.map\n","type":"js","dependency_paths":[],"dependency_map":[],"exported":[{"type":"named","name":"PanelMarkupView"},{"type":"named","name":"set_size"},{"type":"named","name":"HTMLBoxView"},{"type":"named","name":"HTMLBox"}],"externals":[],"shims":[]},"code":{"source":"/* bokeh_extensions/layout.js */ function _(require, module, exports, __esModule, __esExport) {\n    __esModule();\n    const dom_1 = require(\"@bokehjs/core/dom\");\n    const types_1 = require(\"@bokehjs/core/util/types\");\n    const widget_1 = require(\"@bokehjs/models/widgets/widget\");\n    const layout_dom_1 = require(\"@bokehjs/models/layouts/layout_dom\");\n    class PanelMarkupView extends widget_1.WidgetView {\n        async lazy_initialize() {\n            await super.lazy_initialize();\n            if (this.provider.status == \"not_started\" || this.provider.status == \"loading\")\n                this.provider.ready.connect(() => {\n                    if (this.contains_tex_string(this.model.text))\n                        this.render();\n                });\n        }\n        connect_signals() {\n            super.connect_signals();\n            this.connect(this.model.change, () => {\n                this.render();\n            });\n        }\n        has_math_disabled() {\n            return this.model.disable_math || !this.contains_tex_string(this.model.text);\n        }\n        render() {\n            super.render();\n            set_size(this.el, this.model);\n            this.container = (0, dom_1.div)();\n            set_size(this.container, this.model, false);\n            this.shadow_el.appendChild(this.container);\n            if (this.provider.status == \"failed\" || this.provider.status == \"loaded\")\n                this._has_finished = true;\n        }\n    }\n    exports.PanelMarkupView = PanelMarkupView;\n    PanelMarkupView.__name__ = \"PanelMarkupView\";\n    function set_size(el, model, adjustMargin = true) {\n        let width_policy = model.width != null ? \"fixed\" : \"fit\";\n        let height_policy = model.height != null ? \"fixed\" : \"fit\";\n        const { sizing_mode, margin } = model;\n        if (sizing_mode != null) {\n            if (sizing_mode == \"fixed\")\n                width_policy = height_policy = \"fixed\";\n            else if (sizing_mode == \"stretch_both\")\n                width_policy = height_policy = \"max\";\n            else if (sizing_mode == \"stretch_width\")\n                width_policy = \"max\";\n            else if (sizing_mode == \"stretch_height\")\n                height_policy = \"max\";\n            else {\n                switch (sizing_mode) {\n                    case \"scale_width\":\n                        width_policy = \"max\";\n                        height_policy = \"min\";\n                        break;\n                    case \"scale_height\":\n                        width_policy = \"min\";\n                        height_policy = \"max\";\n                        break;\n                    case \"scale_both\":\n                        width_policy = \"max\";\n                        height_policy = \"max\";\n                        break;\n                    default:\n                        throw new Error(\"unreachable\");\n                }\n            }\n        }\n        let wm, hm;\n        if (!adjustMargin) {\n            hm = wm = 0;\n        }\n        else if ((0, types_1.isArray)(margin)) {\n            if (margin.length === 4) {\n                hm = margin[0] + margin[2];\n                wm = margin[1] + margin[3];\n            }\n            else {\n                hm = margin[0] * 2;\n                wm = margin[1] * 2;\n            }\n        }\n        else if (margin == null) {\n            hm = wm = 0;\n        }\n        else {\n            wm = hm = margin * 2;\n        }\n        if (width_policy == \"fixed\" && model.width)\n            el.style.width = model.width + \"px\";\n        else if (width_policy == \"max\")\n            el.style.width = wm ? `calc(100% - ${wm}px)` : \"100%\";\n        if (model.min_width != null)\n            el.style.minWidth = model.min_width + \"px\";\n        if (model.max_width != null)\n            el.style.maxWidth = model.max_width + \"px\";\n        if (height_policy == \"fixed\" && model.height)\n            el.style.height = model.height + \"px\";\n        else if (height_policy == \"max\")\n            el.style.height = hm ? `calc(100% - ${hm}px)` : \"100%\";\n        if (model.min_height != null)\n            el.style.minHeight = model.min_height + \"px\";\n        if (model.max_width != null)\n            el.style.maxHeight = model.max_height + \"px\";\n    }\n    exports.set_size = set_size;\n    class HTMLBoxView extends layout_dom_1.LayoutDOMView {\n        render() {\n            super.render();\n            set_size(this.el, this.model);\n        }\n        watch_stylesheets() {\n            this._initialized_stylesheets = {};\n            for (const sts of this._applied_stylesheets) {\n                const style_el = sts.el;\n                if (style_el instanceof HTMLLinkElement) {\n                    this._initialized_stylesheets[style_el.href] = false;\n                    style_el.addEventListener(\"load\", () => {\n                        this._initialized_stylesheets[style_el.href] = true;\n                        if (Object.values(this._initialized_stylesheets).every(Boolean))\n                            this.style_redraw();\n                    });\n                }\n            }\n        }\n        style_redraw() {\n        }\n        get child_models() {\n            return [];\n        }\n    }\n    exports.HTMLBoxView = HTMLBoxView;\n    HTMLBoxView.__name__ = \"HTMLBoxView\";\n    class HTMLBox extends layout_dom_1.LayoutDOM {\n        constructor(attrs) {\n            super(attrs);\n        }\n    }\n    exports.HTMLBox = HTMLBox;\n    HTMLBox.__name__ = \"HTMLBox\";\n}\n","min_source":"function _(e,t,i,s,h){s();const a=e(\"@bokehjs/core/dom\"),l=e(\"@bokehjs/core/util/types\"),n=e(\"@bokehjs/models/widgets/widget\"),d=e(\"@bokehjs/models/layouts/layout_dom\");class r extends n.WidgetView{async lazy_initialize(){await super.lazy_initialize(),\"not_started\"!=this.provider.status&&\"loading\"!=this.provider.status||this.provider.ready.connect((()=>{this.contains_tex_string(this.model.text)&&this.render()}))}connect_signals(){super.connect_signals(),this.connect(this.model.change,(()=>{this.render()}))}has_math_disabled(){return this.model.disable_math||!this.contains_tex_string(this.model.text)}render(){super.render(),o(this.el,this.model),this.container=(0,a.div)(),o(this.container,this.model,!1),this.shadow_el.appendChild(this.container),\"failed\"!=this.provider.status&&\"loaded\"!=this.provider.status||(this._has_finished=!0)}}function o(e,t,i=!0){let s=null!=t.width?\"fixed\":\"fit\",h=null!=t.height?\"fixed\":\"fit\";const{sizing_mode:a,margin:n}=t;if(null!=a)if(\"fixed\"==a)s=h=\"fixed\";else if(\"stretch_both\"==a)s=h=\"max\";else if(\"stretch_width\"==a)s=\"max\";else if(\"stretch_height\"==a)h=\"max\";else switch(a){case\"scale_width\":s=\"max\",h=\"min\";break;case\"scale_height\":s=\"min\",h=\"max\";break;case\"scale_both\":s=\"max\",h=\"max\";break;default:throw new Error(\"unreachable\")}let d,r;i?(0,l.isArray)(n)?4===n.length?(r=n[0]+n[2],d=n[1]+n[3]):(r=2*n[0],d=2*n[1]):null==n?r=d=0:d=r=2*n:r=d=0,\"fixed\"==s&&t.width?e.style.width=t.width+\"px\":\"max\"==s&&(e.style.width=d?`calc(100% - ${d}px)`:\"100%\"),null!=t.min_width&&(e.style.minWidth=t.min_width+\"px\"),null!=t.max_width&&(e.style.maxWidth=t.max_width+\"px\"),\"fixed\"==h&&t.height?e.style.height=t.height+\"px\":\"max\"==h&&(e.style.height=r?`calc(100% - ${r}px)`:\"100%\"),null!=t.min_height&&(e.style.minHeight=t.min_height+\"px\"),null!=t.max_width&&(e.style.maxHeight=t.max_height+\"px\")}i.PanelMarkupView=r,r.__name__=\"PanelMarkupView\",i.set_size=o;class _ extends d.LayoutDOMView{render(){super.render(),o(this.el,this.model)}watch_stylesheets(){this._initialized_stylesheets={};for(const e of this._applied_stylesheets){const t=e.el;t instanceof HTMLLinkElement&&(this._initialized_stylesheets[t.href]=!1,t.addEventListener(\"load\",(()=>{this._initialized_stylesheets[t.href]=!0,Object.values(this._initialized_stylesheets).every(Boolean)&&this.style_redraw()})))}}style_redraw(){}get child_models(){return[]}}i.HTMLBoxView=_,_.__name__=\"HTMLBoxView\";class c extends d.LayoutDOM{constructor(e){super(e)}}i.HTMLBox=c,c.__name__=\"HTMLBox\"}\n//# sourceMappingURL=layout.min.js.map","min_map":"{\"version\":3,\"file\":\"layout.min.js\",\"names\":[\"_\",\"require\",\"module\",\"exports\",\"__esModule\",\"__esExport\",\"dom_1\",\"types_1\",\"widget_1\",\"layout_dom_1\",\"PanelMarkupView\",\"WidgetView\",\"lazy_initialize\",\"super\",\"this\",\"provider\",\"status\",\"ready\",\"connect\",\"contains_tex_string\",\"model\",\"text\",\"render\",\"connect_signals\",\"change\",\"has_math_disabled\",\"disable_math\",\"set_size\",\"el\",\"container\",\"div\",\"shadow_el\",\"appendChild\",\"_has_finished\",\"adjustMargin\",\"width_policy\",\"width\",\"height_policy\",\"height\",\"sizing_mode\",\"margin\",\"Error\",\"wm\",\"hm\",\"isArray\",\"length\",\"style\",\"min_width\",\"minWidth\",\"max_width\",\"maxWidth\",\"min_height\",\"minHeight\",\"maxHeight\",\"max_height\",\"__name__\",\"HTMLBoxView\",\"LayoutDOMView\",\"watch_stylesheets\",\"_initialized_stylesheets\",\"sts\",\"_applied_stylesheets\",\"style_el\",\"HTMLLinkElement\",\"href\",\"addEventListener\",\"Object\",\"values\",\"every\",\"Boolean\",\"style_redraw\",\"child_models\",\"HTMLBox\",\"LayoutDOM\",\"constructor\",\"attrs\"],\"sources\":[\"0\"],\"mappings\":\"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\"}"}}]}