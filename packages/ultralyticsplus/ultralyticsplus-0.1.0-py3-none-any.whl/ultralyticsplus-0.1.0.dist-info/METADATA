Metadata-Version: 2.1
Name: ultralyticsplus
Version: 0.1.0
Summary: HuggingFace utilities for Ultralytics/YOLOv8.
Author: 
License: MIT
Keywords: machine-learning,deep-learning,ml,vision,yolov8,object-detection,huggingface,datasets
Classifier: Development Status :: 5 - Production/Stable
Classifier: Operating System :: OS Independent
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Education
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: huggingface-hub >=0.12.0
Requires-Dist: fire
Requires-Dist: ultralytics <8.1.0,>=8.0.225
Requires-Dist: sahi <0.12.0,>=0.11.11
Requires-Dist: pandas
Requires-Dist: roboflow >=0.2.32
Requires-Dist: protobuf <3.21,>=3.20
Provides-Extra: dev
Requires-Dist: black ==21.7b0 ; extra == 'dev'
Requires-Dist: flake8 ==3.9.2 ; extra == 'dev'
Requires-Dist: isort ==5.9.2 ; extra == 'dev'
Requires-Dist: click ==8.0.4 ; extra == 'dev'
Requires-Dist: importlib-metadata <4.3,>=1.1.0 ; (python_version < "3.8") and extra == 'dev'
Provides-Extra: tests
Requires-Dist: pytest ; extra == 'tests'
Requires-Dist: black ==21.7b0 ; extra == 'tests'
Requires-Dist: flake8 ==3.9.2 ; extra == 'tests'
Requires-Dist: isort ==5.9.2 ; extra == 'tests'
Requires-Dist: click ==8.0.4 ; extra == 'tests'
Requires-Dist: importlib-metadata <4.3,>=1.1.0 ; (python_version < "3.8") and extra == 'tests'

# ultralytics+

Extra features for [ultralytics/ultralytics](https://github.com/ultralytics/ultralytics).

## installation

```bash
pip install ultralyticsplus
```

## push to ðŸ¤— hub

```bash
ultralyticsplus --exp_dir runs/detect/train --hf_model_id HF_USERNAME/MODELNAME
```

## load from ðŸ¤— hub

```python
from ultralyticsplus import YOLO, render_result

# load model
model = YOLO('HF_USERNAME/MODELNAME')

# set model parameters
model.overrides['conf'] = 0.25  # NMS confidence threshold
model.overrides['iou'] = 0.45  # NMS IoU threshold
model.overrides['agnostic_nms'] = False  # NMS class-agnostic
model.overrides['max_det'] = 1000  # maximum number of detections per image

# set image
image = 'https://github.com/ultralytics/yolov5/raw/master/data/images/zidane.jpg'

# perform inference
results = model.predict(image, imgsz=640)

# parse results
result = results[0]
boxes = result.boxes.xyxy # x1, y1, x2, y2
scores = result.boxes.conf
categories = result.boxes.cls
scores = result.probs # for classification models
masks = result.masks # for segmentation models

# show results on image
render = render_result(model=model, image=image, result=result)
render.show()
```
