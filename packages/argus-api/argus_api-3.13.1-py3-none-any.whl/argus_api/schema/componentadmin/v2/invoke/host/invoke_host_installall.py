"""Autogenerated API schema"""
from argus_api import session


clear_persistent_component = {'tags': ['development'], 'summary': 'Clear persistent component (DEV)', 'description': '', 'operationId': 'clearPersistentComponent', 'produces': ['application/json'], 'parameters': [{'name': 'host', 'in': 'path', 'description': 'Host ID or name', 'required': True, 'type': 'str'}, {'name': 'component', 'in': 'query', 'description': 'Component name', 'required': False, 'type': 'str'}, {'name': 'container', 'in': 'query', 'description': 'Container name', 'required': False, 'type': 'str'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'requestID': {'type': 'str'}, 'state': {'type': 'str', 'enum': ['pending', 'executing', 'failed', 'finished', 'timeout']}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'exception': {'type': 'dict', 'properties': {'type': 'str', 'message': {'type': 'str', 'position': 0, 'description': 'The message of the exception'}}}, 'requestTimestamp': {'type': 'int'}, 'executingTimestamp': {'type': 'int'}, 'lastNotifiedTimestamp': {'type': 'int'}, 'completeTimestamp': {'type': 'int'}, 'response': {'allOf': [{'type': 'object'}, {'type': 'object'}]}, 'host': {'type': 'dict', 'properties': {'name': {'type': 'string'}, 'id': {'type': 'int'}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
compact_persistence = {'tags': ['development'], 'summary': 'Initiate persistence compaction on specified host (DEV)', 'description': '', 'operationId': 'persistenceCompaction', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'host', 'in': 'path', 'description': 'Host ID or name', 'required': True, 'type': 'str'}, {'in': 'body', 'name': 'body', 'description': 'Persistence compaction request', 'required': False, 'schema': {'type': 'object', 'properties': {'waitFor': {'type': 'int', 'position': 0, 'description': 'The max amount of millis to wait for a success or exception response (default 0)', 'maximum': 60000, 'default': 0}}, 'description': 'Request to initiate persistence compaction'}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'requestID': {'type': 'str'}, 'state': {'type': 'str', 'enum': ['pending', 'executing', 'failed', 'finished', 'timeout']}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'exception': {'type': 'dict', 'properties': {'type': 'str', 'message': {'type': 'str', 'position': 0, 'description': 'The message of the exception'}}}, 'requestTimestamp': {'type': 'int'}, 'executingTimestamp': {'type': 'int'}, 'lastNotifiedTimestamp': {'type': 'int'}, 'completeTimestamp': {'type': 'int'}, 'response': {'type': 'object'}, 'host': {'type': 'dict', 'properties': {'name': {'type': 'string'}, 'id': {'type': 'int'}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
get_task_response = {'tags': ['componentadmin/v2'], 'summary': 'Fetch status for specific task (INTERNAL)', 'description': '', 'operationId': 'getTaskResponse', 'produces': ['application/json'], 'parameters': [{'name': 'requestID', 'in': 'path', 'description': 'ID of the task to fetch', 'required': True, 'type': 'str'}, {'name': 'waitFor', 'in': 'query', 'description': 'Wait for completion of this task (milliseconds), default is 0 (no wait)', 'required': False, 'type': 'int', 'default': 0}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'requestID': {'type': 'str'}, 'state': {'type': 'str', 'enum': ['pending', 'executing', 'failed', 'finished', 'timeout']}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'exception': {'type': 'dict', 'properties': {'type': 'str', 'message': {'type': 'str', 'position': 0, 'description': 'The message of the exception'}}}, 'requestTimestamp': {'type': 'int'}, 'executingTimestamp': {'type': 'int'}, 'lastNotifiedTimestamp': {'type': 'int'}, 'completeTimestamp': {'type': 'int'}, 'response': {'type': 'object'}, 'host': {'type': 'dict', 'properties': {'name': {'type': 'string'}, 'id': {'type': 'int'}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
host_install_all_components = {'tags': ['development'], 'summary': 'Install all instances on specified host (DEV)', 'description': '', 'operationId': 'hostInstallAll', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'host', 'in': 'path', 'description': 'Host ID or name', 'required': True, 'type': 'str'}, {'in': 'body', 'name': 'body', 'description': 'Host install request', 'required': False, 'schema': {'type': 'object', 'description': 'Request to install all instances of the host'}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'allOf': [{'type': 'object'}, {'type': 'object', 'properties': {'installationTasks': {'type': 'array', 'position': 0, 'description': 'Set of tasks to install on specified host', 'uniqueItems': True, 'items': {'type': 'string', 'format': 'uuid'}}}}]}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
host_restart_all_components = {'tags': ['development'], 'summary': 'Stop specified instance (DEV)', 'description': '', 'operationId': 'hostRestartAll', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'host', 'in': 'path', 'description': 'Host ID or name', 'required': True, 'type': 'str'}, {'in': 'body', 'name': 'body', 'description': 'Host restart request', 'required': False, 'schema': {'type': 'object', 'properties': {'waitFor': {'type': 'int', 'position': 0, 'description': 'The max amount of millis to wait for a success or exception response (default 0)', 'maximum': 60000, 'default': 0}}, 'description': 'Request to restart all targets on the host'}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'requestID': {'type': 'str'}, 'state': {'type': 'str', 'enum': ['pending', 'executing', 'failed', 'finished', 'timeout']}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'exception': {'type': 'dict', 'properties': {'type': 'str', 'message': {'type': 'str', 'position': 0, 'description': 'The message of the exception'}}}, 'requestTimestamp': {'type': 'int'}, 'executingTimestamp': {'type': 'int'}, 'lastNotifiedTimestamp': {'type': 'int'}, 'completeTimestamp': {'type': 'int'}, 'response': {'allOf': [{'type': 'object'}, {'type': 'object'}]}, 'host': {'type': 'dict', 'properties': {'name': {'type': 'string'}, 'id': {'type': 'int'}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
install_instance = {'tags': ['development'], 'summary': 'Install specified instance (DEV)', 'description': '', 'operationId': 'instanceInstall', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'instance', 'in': 'path', 'description': 'ID of the instance', 'required': True, 'type': 'int', 'minimum': 1}, {'in': 'body', 'name': 'body', 'description': 'Instance install request', 'required': False, 'schema': {'type': 'object', 'properties': {'waitFor': {'type': 'int', 'position': 0, 'description': 'The max amount of millis to wait for a success or exception response (default 0)', 'maximum': 60000, 'default': 0}}, 'description': 'Request to invoke instance install'}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'requestID': {'type': 'str'}, 'state': {'type': 'str', 'enum': ['pending', 'executing', 'failed', 'finished', 'timeout']}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'exception': {'type': 'dict', 'properties': {'type': 'str', 'message': {'type': 'str', 'position': 0, 'description': 'The message of the exception'}}}, 'requestTimestamp': {'type': 'int'}, 'executingTimestamp': {'type': 'int'}, 'lastNotifiedTimestamp': {'type': 'int'}, 'completeTimestamp': {'type': 'int'}, 'response': {'allOf': [{'type': 'object'}, {'type': 'object'}]}, 'host': {'type': 'dict', 'properties': {'name': {'type': 'string'}, 'id': {'type': 'int'}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
list_host_persistent_components = {'tags': ['development'], 'summary': 'List persistent components (DEV)', 'description': '', 'operationId': 'listHostPersistentComponents', 'produces': ['application/json'], 'parameters': [{'name': 'host', 'in': 'path', 'description': 'Host ID or name', 'required': True, 'type': 'str'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'requestID': {'type': 'str'}, 'state': {'type': 'str', 'enum': ['pending', 'executing', 'failed', 'finished', 'timeout']}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'exception': {'type': 'dict', 'properties': {'type': 'str', 'message': {'type': 'str', 'position': 0, 'description': 'The message of the exception'}}}, 'requestTimestamp': {'type': 'int'}, 'executingTimestamp': {'type': 'int'}, 'lastNotifiedTimestamp': {'type': 'int'}, 'completeTimestamp': {'type': 'int'}, 'response': {'allOf': [{'type': 'object'}, {'type': 'dict', 'properties': {'persistentComponentRecords': {'type': 'list', 'position': 0, 'description': 'Set of listed persistent component records', 'uniqueItems': True, 'items': {'type': 'dict', 'properties': {'hostID': {'type': 'int', 'position': 0, 'description': 'The ID of the host of the persistent component'}, 'containerName': {'type': 'str', 'position': 0, 'description': 'The name of the container of the persistent component'}, 'componentName': {'type': 'str', 'position': 0, 'description': 'The name of the persistent component'}}}}}}]}, 'host': {'type': 'dict', 'properties': {'name': {'type': 'string'}, 'id': {'type': 'int'}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
list_task_response = {'tags': ['componentadmin/v2'], 'summary': 'List task status (INTERNAL)', 'description': '', 'operationId': 'listTaskResponse', 'produces': ['application/json'], 'parameters': [{'name': 'limit', 'in': 'query', 'description': 'Limit response to this number of results (0 means unlimited)', 'required': False, 'type': 'int', 'default': 25}, {'name': 'offset', 'in': 'query', 'description': 'Skip the first results in the response (default is 0)', 'required': False, 'type': 'int', 'default': 0}, {'name': 'state', 'in': 'query', 'description': 'Filter response by status', 'required': False, 'type': 'list', 'items': {'type': 'str', 'enum': ['pending', 'executing', 'failed', 'finished', 'timeout']}, 'collectionFormat': 'multi'}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'list', 'description': 'Contains an array of results', 'items': {'type': 'dict', 'properties': {'requestID': {'type': 'str'}, 'state': {'type': 'str', 'enum': ['pending', 'executing', 'failed', 'finished', 'timeout']}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'exception': {'type': 'dict', 'properties': {'type': 'str', 'message': {'type': 'str', 'position': 0, 'description': 'The message of the exception'}}}, 'requestTimestamp': {'type': 'int'}, 'executingTimestamp': {'type': 'int'}, 'lastNotifiedTimestamp': {'type': 'int'}, 'completeTimestamp': {'type': 'int'}, 'response': {'type': 'object'}, 'host': {'type': 'dict', 'properties': {'name': {'type': 'string'}, 'id': {'type': 'int'}}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '412': {'description': 'Validation error'}}}
restart_instance = {'tags': ['development'], 'summary': 'Restart specified instance (DEV)', 'description': '', 'operationId': 'instanceRestart', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'instance', 'in': 'path', 'description': 'ID of the instance', 'required': True, 'type': 'int', 'minimum': 1}, {'in': 'body', 'name': 'body', 'description': 'Instance restart request', 'required': False, 'schema': {'type': 'object', 'properties': {'waitFor': {'type': 'int', 'position': 0, 'description': 'The max amount of millis to wait for a success or exception response (default 0)', 'maximum': 60000, 'default': 0}}, 'description': 'Request to restart an instance'}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'requestID': {'type': 'str'}, 'state': {'type': 'str', 'enum': ['pending', 'executing', 'failed', 'finished', 'timeout']}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'exception': {'type': 'dict', 'properties': {'type': 'str', 'message': {'type': 'str', 'position': 0, 'description': 'The message of the exception'}}}, 'requestTimestamp': {'type': 'int'}, 'executingTimestamp': {'type': 'int'}, 'lastNotifiedTimestamp': {'type': 'int'}, 'completeTimestamp': {'type': 'int'}, 'response': {'allOf': [{'type': 'object'}, {'type': 'object'}]}, 'host': {'type': 'dict', 'properties': {'name': {'type': 'string'}, 'id': {'type': 'int'}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
start_instance = {'tags': ['development'], 'summary': 'Start specified instance (DEV)', 'description': '', 'operationId': 'instanceStart', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'instance', 'in': 'path', 'description': 'ID of the instance', 'required': True, 'type': 'int', 'minimum': 1}, {'in': 'body', 'name': 'body', 'description': 'Instance start request', 'required': False, 'schema': {'type': 'object', 'properties': {'waitFor': {'type': 'int', 'position': 0, 'description': 'The max amount of millis to wait for a success or exception response (default 0)', 'maximum': 60000, 'default': 0}}, 'description': 'Request to start an instance'}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'requestID': {'type': 'str'}, 'state': {'type': 'str', 'enum': ['pending', 'executing', 'failed', 'finished', 'timeout']}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'exception': {'type': 'dict', 'properties': {'type': 'str', 'message': {'type': 'str', 'position': 0, 'description': 'The message of the exception'}}}, 'requestTimestamp': {'type': 'int'}, 'executingTimestamp': {'type': 'int'}, 'lastNotifiedTimestamp': {'type': 'int'}, 'completeTimestamp': {'type': 'int'}, 'response': {'allOf': [{'type': 'object'}, {'type': 'object'}]}, 'host': {'type': 'dict', 'properties': {'name': {'type': 'string'}, 'id': {'type': 'int'}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
stop_instance = {'tags': ['development'], 'summary': 'Stop specified instance (DEV)', 'description': '', 'operationId': 'instanceStop', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'instance', 'in': 'path', 'description': 'ID of the instance', 'required': True, 'type': 'int', 'minimum': 1}, {'in': 'body', 'name': 'body', 'description': 'Instance stop request', 'required': False, 'schema': {'type': 'object', 'properties': {'waitFor': {'type': 'int', 'position': 0, 'description': 'The max amount of millis to wait for a success or exception response (default 0)', 'maximum': 60000, 'default': 0}}, 'description': 'Request to stop an instance'}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'requestID': {'type': 'str'}, 'state': {'type': 'str', 'enum': ['pending', 'executing', 'failed', 'finished', 'timeout']}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'exception': {'type': 'dict', 'properties': {'type': 'str', 'message': {'type': 'str', 'position': 0, 'description': 'The message of the exception'}}}, 'requestTimestamp': {'type': 'int'}, 'executingTimestamp': {'type': 'int'}, 'lastNotifiedTimestamp': {'type': 'int'}, 'completeTimestamp': {'type': 'int'}, 'response': {'allOf': [{'type': 'object'}, {'type': 'object'}]}, 'host': {'type': 'dict', 'properties': {'name': {'type': 'string'}, 'id': {'type': 'int'}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}
uninstall_instance = {'tags': ['development'], 'summary': 'Uninstall specified instance (DEV)', 'description': '', 'operationId': 'instanceUninstall', 'consumes': ['application/json'], 'produces': ['application/json'], 'parameters': [{'name': 'instance', 'in': 'path', 'description': 'ID of the instance', 'required': True, 'type': 'int', 'minimum': 1}, {'in': 'body', 'name': 'body', 'description': 'Instance uninstall request', 'required': False, 'schema': {'type': 'object', 'properties': {'waitFor': {'type': 'int', 'position': 0, 'description': 'The max amount of millis to wait for a success or exception response (default 0)', 'maximum': 60000, 'default': 0}}, 'description': 'Request to invoke instance uninstall'}}], 'responses': {'200': {'description': 'successful operation', 'schema': {'required': ['data'], 'properties': {'responseCode': {'type': 'int', 'description': 'Status code returned from API'}, 'limit': {'type': 'int', 'description': 'Maximum number of returned results'}, 'offset': {'type': 'int', 'description': 'Number of skipped results'}, 'count': {'type': 'int', 'description': 'Number of available results on server'}, 'size': {'type': 'int', 'description': 'Actual number of returned results'}, 'metaData': {'type': 'dict', 'description': 'Additional unstructured meta data associated with response'}, 'messages': {'type': 'list', 'description': 'Contains messages returned from the API, usually error messages', 'items': {'type': 'dict', 'properties': {'message': {'type': 'string'}, 'messageTemplate': {'type': 'string'}, 'type': 'str', 'field': {'type': 'string'}, 'parameter': {'type': 'object'}, 'timestamp': {'type': 'int'}, 'options': ['FIELD_ERROR', 'ACTION_ERROR', 'WARNING', 'NOTIFICATION', 'INFO']}}}, 'data': {'type': 'dict', 'properties': {'requestID': {'type': 'str'}, 'state': {'type': 'str', 'enum': ['pending', 'executing', 'failed', 'finished', 'timeout']}, 'customer': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the customer.'}, 'shortName': {'type': 'str', 'position': 0, 'description': 'Shortname of the customer.'}, 'domain': {'type': 'dict', 'properties': {'id': {'type': 'int', 'position': 0, 'description': 'ID of the response object.'}, 'name': {'type': 'str', 'position': 0, 'description': 'Name of the domain.'}}, 'description': 'SPI DomainInfo'}}, 'description': 'SPI CustomerInfo'}, 'exception': {'type': 'dict', 'properties': {'type': 'str', 'message': {'type': 'str', 'position': 0, 'description': 'The message of the exception'}}}, 'requestTimestamp': {'type': 'int'}, 'executingTimestamp': {'type': 'int'}, 'lastNotifiedTimestamp': {'type': 'int'}, 'completeTimestamp': {'type': 'int'}, 'response': {'allOf': [{'type': 'object'}, {'type': 'object'}]}, 'host': {'type': 'dict', 'properties': {'name': {'type': 'string'}, 'id': {'type': 'int'}}}}}}}}, '401': {'description': 'Authentication failed'}, '403': {'description': 'Access denied'}, '404': {'description': 'Object not found'}, '412': {'description': 'Validation error'}}}