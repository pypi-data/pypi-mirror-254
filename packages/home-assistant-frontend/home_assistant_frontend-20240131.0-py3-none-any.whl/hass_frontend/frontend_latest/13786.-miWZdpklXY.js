export const id=13786;export const ids=[13786];export const modules={13786:(t,e,i)=>{var a=i(17463),o=i(34541),s=i(47838),r=i(68144),n=i(79932);const l=t=>t.tileLayer("https://basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}"+(t.Browser.retina?"@2x.png":".png"),{attribution:'&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a>, &copy; <a href="https://carto.com/attributions">CARTO</a>',subdomains:"abcd",minZoom:0,maxZoom:20});var d=i(22311),c=i(91741),h=i(44281),u=(i(10983),i(47501)),p=i(47181);let m=(0,a.Z)(null,(function(t,e){return{F:class extends e{constructor(...e){super(...e),t(this)}},d:[{kind:"field",decorators:[(0,n.Cb)({attribute:"entity-id"})],key:"entityId",value:void 0},{kind:"field",decorators:[(0,n.Cb)({attribute:"entity-name"})],key:"entityName",value:void 0},{kind:"field",decorators:[(0,n.Cb)({attribute:"entity-picture"})],key:"entityPicture",value:void 0},{kind:"field",decorators:[(0,n.Cb)({attribute:"entity-color"})],key:"entityColor",value:void 0},{kind:"method",key:"render",value:function(){return r.dy` <div class="marker ${this.entityPicture?"picture":""}" style="${(0,u.V)({"border-color":this.entityColor})}" @click="${this._badgeTap}"> ${this.entityPicture?r.dy`<div class="entity-picture" style="${(0,u.V)({"background-image":`url(${this.entityPicture})`})}"></div>`:this.entityName} </div> `}},{kind:"method",key:"_badgeTap",value:function(t){t.stopPropagation(),this.entityId&&(0,p.B)(this,"hass-more-info",{entityId:this.entityId})}},{kind:"get",static:!0,key:"styles",value:function(){return r.iv`.marker{display:flex;justify-content:center;align-items:center;box-sizing:border-box;width:48px;height:48px;font-size:var(--ha-marker-font-size, 1.5em);border-radius:50%;border:1px solid var(--ha-marker-color,var(--primary-color));color:var(--primary-text-color);background-color:var(--card-background-color)}.marker.picture{overflow:hidden}.entity-picture{background-size:cover;height:100%;width:100%}`}}]}}),r.oi);customElements.define("ha-entity-marker",m);var f=i(71287);const y=t=>"string"==typeof t?t:t.entity_id;(0,a.Z)([(0,n.Mo)("ha-map")],(function(t,e){class a extends e{constructor(...e){super(...e),t(this)}}return{F:a,d:[{kind:"field",decorators:[(0,n.Cb)({attribute:!1})],key:"hass",value:void 0},{kind:"field",decorators:[(0,n.Cb)({attribute:!1})],key:"entities",value:void 0},{kind:"field",decorators:[(0,n.Cb)({attribute:!1})],key:"paths",value:void 0},{kind:"field",decorators:[(0,n.Cb)({attribute:!1})],key:"layers",value:void 0},{kind:"field",decorators:[(0,n.Cb)({type:Boolean})],key:"autoFit",value:()=>!1},{kind:"field",decorators:[(0,n.Cb)({type:Boolean})],key:"renderPassive",value:()=>!1},{kind:"field",decorators:[(0,n.Cb)({type:Boolean})],key:"interactiveZones",value:()=>!1},{kind:"field",decorators:[(0,n.Cb)({type:Boolean})],key:"fitZones",value:()=>!1},{kind:"field",decorators:[(0,n.Cb)({type:Boolean})],key:"darkMode",value:()=>!1},{kind:"field",decorators:[(0,n.Cb)({type:Number})],key:"zoom",value:()=>14},{kind:"field",decorators:[(0,n.SB)()],key:"_loaded",value:()=>!1},{kind:"field",key:"leafletMap",value:void 0},{kind:"field",key:"Leaflet",value:void 0},{kind:"field",key:"_resizeObserver",value:void 0},{kind:"field",key:"_mapItems",value:()=>[]},{kind:"field",key:"_mapFocusItems",value:()=>[]},{kind:"field",key:"_mapZones",value:()=>[]},{kind:"field",key:"_mapPaths",value:()=>[]},{kind:"method",key:"connectedCallback",value:function(){(0,o.Z)((0,s.Z)(a.prototype),"connectedCallback",this).call(this),this._loadMap(),this._attachObserver()}},{kind:"method",key:"disconnectedCallback",value:function(){(0,o.Z)((0,s.Z)(a.prototype),"disconnectedCallback",this).call(this),this.leafletMap&&(this.leafletMap.remove(),this.leafletMap=void 0,this.Leaflet=void 0),this._loaded=!1,this._resizeObserver&&this._resizeObserver.unobserve(this)}},{kind:"method",key:"update",value:function(t){var e,i;if((0,o.Z)((0,s.Z)(a.prototype),"update",this).call(this,t),!this._loaded)return;let r=!1;const n=t.get("hass");if(t.has("_loaded")||t.has("entities"))this._drawEntities(),r=!0;else if(this._loaded&&n&&this.entities)for(const t of this.entities)if(n.states[y(t)]!==this.hass.states[y(t)]){this._drawEntities(),r=!0;break}(t.has("_loaded")||t.has("paths"))&&this._drawPaths(),(t.has("_loaded")||t.has("layers"))&&(this._drawLayers(t.get("layers")),r=!0),(t.has("_loaded")||this.autoFit&&r)&&this.fitMap(),t.has("zoom")&&this.leafletMap.setZoom(this.zoom),(t.has("darkMode")||t.has("hass")&&(!n||(null===(e=n.themes)||void 0===e?void 0:e.darkMode)!==(null===(i=this.hass.themes)||void 0===i?void 0:i.darkMode)))&&this._updateMapStyle()}},{kind:"method",key:"_updateMapStyle",value:function(){var t;const e=this.darkMode||null!==(t=this.hass.themes.darkMode)&&void 0!==t&&t,i=this.darkMode,a=this.renderRoot.querySelector("#map");a.classList.toggle("dark",e),a.classList.toggle("forced-dark",i)}},{kind:"method",key:"_loadMap",value:async function(){let t=this.shadowRoot.getElementById("map");t||(t=document.createElement("div"),t.id="map",this.shadowRoot.append(t)),[this.leafletMap,this.Leaflet]=await(async t=>{if(!t.parentNode)throw new Error("Cannot setup Leaflet map on disconnected element");const e=(await i.e(70208).then(i.t.bind(i,70208,23))).default;e.Icon.Default.imagePath="/static/images/leaflet/images/";const a=e.map(t),o=document.createElement("link");return o.setAttribute("href","/static/images/leaflet/leaflet.css"),o.setAttribute("rel","stylesheet"),t.parentNode.appendChild(o),a.setView([52.3731339,4.8903147],13),[a,e,l(e).addTo(a)]})(t),this._updateMapStyle(),this._loaded=!0}},{kind:"method",key:"fitMap",value:function(t){var e,i,a;if(!this.leafletMap||!this.Leaflet||!this.hass)return;if(!(this._mapFocusItems.length||null!==(e=this.layers)&&void 0!==e&&e.length))return void this.leafletMap.setView(new this.Leaflet.LatLng(this.hass.config.latitude,this.hass.config.longitude),(null==t?void 0:t.zoom)||this.zoom);let o=this.Leaflet.latLngBounds(this._mapFocusItems?this._mapFocusItems.map((t=>t.getLatLng())):[]);var s;this.fitZones&&(null===(s=this._mapZones)||void 0===s||s.forEach((t=>{o.extend("getBounds"in t?t.getBounds():t.getLatLng())})));null===(i=this.layers)||void 0===i||i.forEach((t=>{o.extend("getBounds"in t?t.getBounds():t.getLatLng())})),o=o.pad(null!==(a=null==t?void 0:t.pad)&&void 0!==a?a:.5),this.leafletMap.fitBounds(o,{maxZoom:(null==t?void 0:t.zoom)||this.zoom})}},{kind:"method",key:"fitBounds",value:function(t,e){var i;if(!this.leafletMap||!this.Leaflet||!this.hass)return;const a=this.Leaflet.latLngBounds(t).pad(null!==(i=null==e?void 0:e.pad)&&void 0!==i?i:.5);this.leafletMap.fitBounds(a,{maxZoom:(null==e?void 0:e.zoom)||this.zoom})}},{kind:"method",key:"_drawLayers",value:function(t){if(t&&t.forEach((t=>t.remove())),!this.layers)return;const e=this.leafletMap;this.layers.forEach((t=>{e.addLayer(t)}))}},{kind:"method",key:"_drawPaths",value:function(){const t=this.hass,e=this.leafletMap,i=this.Leaflet;if(!t||!e||!i)return;if(this._mapPaths.length&&(this._mapPaths.forEach((t=>t.remove())),this._mapPaths=[]),!this.paths)return;const a=getComputedStyle(this).getPropertyValue("--dark-primary-color");this.paths.forEach((t=>{let o,s;t.gradualOpacity&&(o=t.gradualOpacity/(t.points.length-2),s=1-t.gradualOpacity);for(let e=0;e<t.points.length-1;e++){const r=t.gradualOpacity?s+e*o:void 0;this._mapPaths.push(i.circleMarker(t.points[e].point,{radius:f.T?8:3,color:t.color||a,opacity:r,fillOpacity:r,interactive:!0}).bindTooltip(t.points[e].tooltip,{direction:"top"})),this._mapPaths.push(i.polyline([t.points[e].point,t.points[e+1].point],{color:t.color||a,opacity:r,interactive:!1}))}const r=t.points.length-1;if(r>=0){const e=t.gradualOpacity?s+r*o:void 0;this._mapPaths.push(i.circleMarker(t.points[r].point,{radius:f.T?8:3,color:t.color||a,opacity:e,fillOpacity:e,interactive:!0}).bindTooltip(t.points[r].tooltip,{direction:"top"}))}this._mapPaths.forEach((t=>e.addLayer(t)))}))}},{kind:"method",key:"_drawEntities",value:function(){const t=this.hass,e=this.leafletMap,i=this.Leaflet;if(!t||!e||!i)return;if(this._mapItems.length&&(this._mapItems.forEach((t=>t.remove())),this._mapItems=[],this._mapFocusItems=[]),this._mapZones.length&&(this._mapZones.forEach((t=>t.remove())),this._mapZones=[]),!this.entities)return;const a=getComputedStyle(this),o=a.getPropertyValue("--accent-color"),s=a.getPropertyValue("--secondary-text-color"),r=a.getPropertyValue("--dark-primary-color"),n=this.darkMode||this.hass.themes.darkMode?"dark":"light";for(const e of this.entities){const a=t.states[y(e)];if(!a)continue;const l="string"!=typeof e?e.name:void 0,h=null!=l?l:(0,c.C)(a),{latitude:u,longitude:p,passive:m,icon:f,radius:v,entity_picture:k,gps_accuracy:g}=a.attributes;if(!u||!p)continue;if("zone"===(0,d.N)(a)){if(m&&!this.renderPassive)continue;let t="";if(f){const e=document.createElement("ha-icon");e.setAttribute("icon",f),t=e.outerHTML}else{const e=document.createElement("span");e.innerHTML=h,t=e.outerHTML}this._mapZones.push(i.marker([u,p],{icon:i.divIcon({html:t,iconSize:[24,24],className:n}),interactive:this.interactiveZones,title:h})),this._mapZones.push(i.circle([u,p],{interactive:!1,color:m?s:o,radius:v}));continue}const b="string"!=typeof e&&"state"===e.label_mode?this.hass.formatEntityState(a):null!=l?l:h.split(" ").map((t=>t[0])).join("").substr(0,3),_=i.marker([u,p],{icon:i.divIcon({html:`\n              <ha-entity-marker\n                entity-id="${y(e)}"\n                entity-name="${b}"\n                entity-picture="${k?this.hass.hassUrl(k):""}"\n                ${"string"!=typeof e?`entity-color="${e.color}"`:""}\n              ></ha-entity-marker>\n            `,iconSize:[48,48],className:""}),title:h});this._mapItems.push(_),"string"!=typeof e&&!1===e.focus||this._mapFocusItems.push(_),g&&this._mapItems.push(i.circle([u,p],{interactive:!1,color:r,radius:g}))}this._mapItems.forEach((t=>e.addLayer(t))),this._mapZones.forEach((t=>e.addLayer(t)))}},{kind:"method",key:"_attachObserver",value:async function(){this._resizeObserver||(await(0,h.j)(),this._resizeObserver=new ResizeObserver((()=>{var t;null===(t=this.leafletMap)||void 0===t||t.invalidateSize({debounceMoveend:!0})}))),this._resizeObserver.observe(this)}},{kind:"get",static:!0,key:"styles",value:function(){return r.iv`:host{display:block;height:300px}#map{height:100%}#map.dark{background:#090909}#map.forced-dark{--map-filter:invert(0.9) hue-rotate(170deg) brightness(1.5) contrast(1.2) saturate(0.3)}#map:active{cursor:grabbing;cursor:-moz-grabbing;cursor:-webkit-grabbing}.light{color:#000}.dark{color:#fff}.leaflet-tile-pane{filter:var(--map-filter)}.dark .leaflet-bar a{background-color:var(--card-background-color,#1c1c1c);color:#fff}.leaflet-marker-draggable{cursor:move!important}.leaflet-edit-resize{border-radius:50%;cursor:nesw-resize!important}.named-icon{display:flex;align-items:center;justify-content:center;flex-direction:column;text-align:center;color:var(--primary-text-color)}.leaflet-pane{z-index:0!important}.leaflet-bottom,.leaflet-control,.leaflet-top{z-index:1!important}.leaflet-tooltip{padding:8px;font-size:90%;background:rgba(80,80,80,.9)!important;color:#fff!important;border-radius:4px;box-shadow:none!important}`}}]}}),r.fl)}};
//# sourceMappingURL=13786.-miWZdpklXY.js.map