name: Create release
run-name: Create release linked to ${{ github.head_ref }}

on:
  pull_request:
    types:
      - closed
    paths:
      - "changelog.md"
      - "CHANGELOG.md"

jobs:
  release:
    if: startsWith(github.head_ref, 'version/') && github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      tag: ${{ steps.generate-release.outputs.tag }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      - id: generate-release
        name: Generate tag & release
        uses: LeMimit/foxy-project/actions/create-release@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
  build:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      - name: Install python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Set up pip cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('deps/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-
      - name: Install pipx
        run: |
          python3 -m pip install --user pipx
          python3 -m pipx ensurepath
      - name: Install Hatch
        run: pipx install hatch
      - name: Install Hatch
        run: hatch build
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-artifacts
          path: dist/*
          if-no-files-found: error

  publish:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write # IMPORTANT: this permission is mandatory for trusted publishing
    steps:
      - name: Download Python artifacts
        uses: actions/download-artifact@v4
        with:
          name: python-artifacts
          path: dist
      - name: Push Python artifacts to PyPI
        uses: pypa/gh-action-pypi-publish@v1.8.11
        with:
          skip-existing: true
