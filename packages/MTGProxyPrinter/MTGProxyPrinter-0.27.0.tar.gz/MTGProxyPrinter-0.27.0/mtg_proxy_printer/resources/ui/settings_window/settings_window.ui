<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>SettingsWindow</class>
 <widget class="QDialog" name="SettingsWindow">
  <property name="windowModality">
   <enum>Qt::ApplicationModal</enum>
  </property>
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>612</width>
    <height>734</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>Settings</string>
  </property>
  <layout class="QVBoxLayout" name="dialog_layout">
   <item>
    <widget class="QTabWidget" name="tab_widget">
     <property name="currentIndex">
      <number>0</number>
     </property>
     <widget class="QWidget" name="tab_general">
      <attribute name="title">
       <string>General</string>
      </attribute>
      <layout class="QGridLayout" name="gridLayout">
       <item row="1" column="0">
        <widget class="QLabel" name="preferred_language_label">
         <property name="text">
          <string>Preferred card language:</string>
         </property>
         <property name="buddy">
          <cstring>preferred_language_combo_box</cstring>
         </property>
        </widget>
       </item>
       <item row="1" column="1">
        <widget class="QComboBox" name="preferred_language_combo_box">
         <property name="sizePolicy">
          <sizepolicy hsizetype="Expanding" vsizetype="Fixed">
           <horstretch>0</horstretch>
           <verstretch>0</verstretch>
          </sizepolicy>
         </property>
         <property name="toolTip">
          <string>Language choices will default to the chosen language here.

Entries use the language codes as listed on Scryfall.</string>
         </property>
        </widget>
       </item>
       <item row="2" column="0" colspan="2">
        <widget class="QGroupBox" name="look_and_feel_settings_group_box">
         <property name="title">
          <string>Look &amp;&amp; Feel (Changing this requires an application restart)</string>
         </property>
         <layout class="QGridLayout" name="gridLayout_2">
          <item row="0" column="0">
           <widget class="QLabel" name="add_card_widget_style_label">
            <property name="text">
             <string>Main window layout</string>
            </property>
            <property name="buddy">
             <cstring>add_card_widget_style_combo_box</cstring>
            </property>
           </widget>
          </item>
          <item row="0" column="1">
           <widget class="QComboBox" name="add_card_widget_style_combo_box">
            <property name="sizePolicy">
             <sizepolicy hsizetype="Expanding" vsizetype="Fixed">
              <horstretch>0</horstretch>
              <verstretch>0</verstretch>
             </sizepolicy>
            </property>
            <property name="toolTip">
             <string>Horizontal adds a wide, horizontal search area above the currently edited page, and is best for taller screens, like 4:3 or 3:2.
Columnar organizes the main window content in four columns, and is best for (ultra-)wide screens.
Tabbed uses tabs to only show parts of the main window at a time. Best used with small screens in portrait mode (i.e. 9:16), otherwise not recommended.</string>
            </property>
           </widget>
          </item>
         </layout>
        </widget>
       </item>
       <item row="3" column="0" colspan="2">
        <widget class="QGroupBox" name="double_faced_cards_group_box">
         <property name="title">
          <string>Double-faced cards</string>
         </property>
         <layout class="QVBoxLayout" name="verticalLayout_5">
          <item>
           <widget class="QCheckBox" name="automatically_add_opposing_faces">
            <property name="toolTip">
             <string>When adding double-faced cards, automatically add the same number of copies of the other side.
Uses the appropriate, matching other card side.
Uncheck to disable this automatism.</string>
            </property>
            <property name="text">
             <string>Automatically add the other side of double-faced cards</string>
            </property>
           </widget>
          </item>
         </layout>
        </widget>
       </item>
       <item row="4" column="0" colspan="2">
        <widget class="QGroupBox" name="default_paths_group_box">
         <property name="toolTip">
          <string>These paths are selected by default when browsing the file system for files</string>
         </property>
         <property name="title">
          <string>Default save paths</string>
         </property>
         <layout class="QGridLayout" name="gridLayout_4">
          <item row="1" column="1">
           <widget class="QLineEdit" name="pdf_save_path">
            <property name="toolTip">
             <string>If set, use this as the default location for saving exported PDF documents.</string>
            </property>
            <property name="inputMethodHints">
             <set>Qt::ImhNoAutoUppercase</set>
            </property>
            <property name="placeholderText">
             <string>Path to a directory</string>
            </property>
            <property name="clearButtonEnabled">
             <bool>true</bool>
            </property>
           </widget>
          </item>
          <item row="0" column="1">
           <widget class="QLineEdit" name="document_save_path">
            <property name="toolTip">
             <string>If set, use this as the default location for saving documents.</string>
            </property>
            <property name="inputMethodHints">
             <set>Qt::ImhNoAutoUppercase</set>
            </property>
            <property name="placeholderText">
             <string>Path to a directory</string>
            </property>
            <property name="clearButtonEnabled">
             <bool>true</bool>
            </property>
           </widget>
          </item>
          <item row="1" column="2">
           <widget class="QPushButton" name="pdf_save_path_browse_button">
            <property name="toolTip">
             <string>Browse…</string>
            </property>
            <property name="text">
             <string/>
            </property>
            <property name="icon">
             <iconset theme="document-open"/>
            </property>
           </widget>
          </item>
          <item row="0" column="0">
           <widget class="QLabel" name="document_save_path_label">
            <property name="text">
             <string>Document save path</string>
            </property>
            <property name="buddy">
             <cstring>document_save_path</cstring>
            </property>
           </widget>
          </item>
          <item row="1" column="0">
           <widget class="QLabel" name="pdf_save_path_label">
            <property name="text">
             <string>PDF export path</string>
            </property>
            <property name="buddy">
             <cstring>pdf_save_path</cstring>
            </property>
           </widget>
          </item>
          <item row="0" column="2">
           <widget class="QPushButton" name="document_save_path_browse_button">
            <property name="toolTip">
             <string>Browse…</string>
            </property>
            <property name="text">
             <string/>
            </property>
            <property name="icon">
              <iconset theme="document-open"/>
            </property>
           </widget>
          </item>
         </layout>
        </widget>
       </item>
       <item row="5" column="0" colspan="2">
        <widget class="QGroupBox" name="update_check_group_box">
         <property name="toolTip">
          <string/>
         </property>
         <property name="title">
          <string>Automatic update checks</string>
         </property>
         <layout class="QVBoxLayout" name="verticalLayout_9">
          <item>
           <widget class="QLabel" name="update_check_label">
            <property name="text">
             <string>Update checks are performed at application start, if enabled.</string>
            </property>
           </widget>
          </item>
          <item>
           <widget class="QCheckBox" name="check_application_updates_enabled">
            <property name="toolTip">
             <string>If enabled, check for application updates, and notify if new updates are available for installation.</string>
            </property>
            <property name="text">
             <string>Check for application updates</string>
            </property>
            <property name="tristate">
             <bool>true</bool>
            </property>
           </widget>
          </item>
          <item>
           <widget class="QCheckBox" name="check_card_data_updates_enabled">
            <property name="toolTip">
             <string>If enabled, query the Scryfall API if new cards are available. If so, offer to update the local card data.</string>
            </property>
            <property name="text">
             <string>Check for new card data</string>
            </property>
            <property name="tristate">
             <bool>true</bool>
            </property>
           </widget>
          </item>
         </layout>
        </widget>
       </item>
       <item row="6" column="0" colspan="2">
        <spacer name="verticalSpacer">
         <property name="orientation">
          <enum>Qt::Vertical</enum>
         </property>
         <property name="sizeHint" stdset="0">
          <size>
           <width>20</width>
           <height>40</height>
          </size>
         </property>
        </spacer>
       </item>
      </layout>
     </widget>
     <widget class="QWidget" name="tab_decklist_import">
      <attribute name="title">
       <string>Deck list import</string>
      </attribute>
      <layout class="QGridLayout" name="gridLayout_3">
       <item row="3" column="1">
        <widget class="QLineEdit" name="deck_list_search_path">
         <property name="toolTip">
          <string>If set, use this as the default location for loading deck lists. Your webbrowser’s download directory is a good choice.</string>
         </property>
         <property name="inputMethodHints">
          <set>Qt::ImhNoAutoUppercase</set>
         </property>
         <property name="placeholderText">
          <string>Path to a directory</string>
         </property>
         <property name="clearButtonEnabled">
          <bool>true</bool>
         </property>
        </widget>
       </item>
       <item row="3" column="2">
        <widget class="QPushButton" name="deck_list_search_path_browse_button">
         <property name="toolTip">
          <string>Browse…</string>
         </property>
         <property name="text">
          <string/>
         </property>
         <property name="icon">
          <iconset theme="document-open"/>
         </property>
        </widget>
       </item>
       <item row="1" column="0" colspan="3">
        <widget class="QLabel" name="label">
         <property name="text">
          <string>These options control the deck list import function.</string>
         </property>
        </widget>
       </item>
       <item row="7" column="0" colspan="3">
        <spacer name="verticalSpacer_4">
         <property name="orientation">
          <enum>Qt::Vertical</enum>
         </property>
         <property name="sizeHint" stdset="0">
          <size>
           <width>20</width>
           <height>412</height>
          </size>
         </property>
        </spacer>
       </item>
       <item row="6" column="0" colspan="3">
        <widget class="QGroupBox" name="basic_land_removal_group_box">
         <property name="title">
          <string>Control the one-click basic land removal</string>
         </property>
         <layout class="QVBoxLayout" name="verticalLayout">
          <item>
           <widget class="QLabel" name="basic_land_removal_label">
            <property name="text">
             <string>These options control, if the automatic removal should also include Wastes or Snow-Covered basic lands.</string>
            </property>
            <property name="wordWrap">
             <bool>true</bool>
            </property>
           </widget>
          </item>
          <item>
           <widget class="QCheckBox" name="remove_basic_wastes_enable">
            <property name="whatsThis">
             <string>Include Wastes when removing basic lands.</string>
            </property>
            <property name="text">
             <string>Enable removal of Basic Wastes</string>
            </property>
           </widget>
          </item>
          <item>
           <widget class="QCheckBox" name="remove_snow_basics_enable">
            <property name="whatsThis">
             <string>Include Snow-Covered basic lands when removing basic lands.</string>
            </property>
            <property name="text">
             <string>Enable removal of Snow-Covered Basic lands</string>
            </property>
           </widget>
          </item>
         </layout>
        </widget>
       </item>
       <item row="3" column="0">
        <widget class="QLabel" name="deck_list_search_path_label">
         <property name="text">
          <string>Deck list search path</string>
         </property>
        </widget>
       </item>
       <item row="4" column="0" colspan="3">
        <widget class="QGroupBox" name="print_guessing_group_box">
         <property name="toolTip">
          <string>Not all deck list formats always contain complete data.
These options set the default behaviour when encountering ambiguous card</string>
         </property>
         <property name="title">
          <string>Control print guessing in ambiguous cases</string>
         </property>
         <property name="checked">
          <bool>false</bool>
         </property>
         <layout class="QGridLayout" name="gridLayout_6">
          <item row="2" column="0">
           <widget class="QCheckBox" name="print_guessing_prefer_already_downloaded">
            <property name="toolTip">
             <string>When guessing a printing, prefer printings with already downloaded images over other possible printings.</string>
            </property>
            <property name="text">
             <string>Prefer printings with already downloaded images</string>
            </property>
           </widget>
          </item>
          <item row="3" column="0">
           <widget class="QCheckBox" name="automatic_deck_list_translation_enable">
            <property name="toolTip">
             <string>Always enable automatic deck list translation when importing deck lists.
This avoids adding foreign language cards, if the deck list happens to contain some.</string>
            </property>
            <property name="text">
             <string>Enable translating imported deck lists by default</string>
            </property>
           </widget>
          </item>
          <item row="1" column="0">
           <widget class="QCheckBox" name="print_guessing_enable">
            <property name="toolTip">
             <string>Not all deck list formats always contain complete data to identify exact printings.
If enabled, choose an arbitrary printing, instead of failing to identify such cards.
With some deck list formats, this option is always enabled.</string>
            </property>
            <property name="text">
             <string>Enable print guessing by default</string>
            </property>
           </widget>
          </item>
         </layout>
        </widget>
       </item>
      </layout>
     </widget>
     <widget class="QWidget" name="tab_page_sizes">
      <attribute name="title">
       <string>Page size &amp;&amp; Printing</string>
      </attribute>
      <layout class="QGridLayout" name="tab_page_sizes_layout">
       <item row="3" column="0" colspan="2">
        <widget class="PageConfigWidget" name="page_configuration_group_box">
         <property name="title">
          <string/>
         </property>
        </widget>
       </item>
       <item row="4" column="0" colspan="2">
        <spacer name="verticalSpacer_3">
         <property name="orientation">
          <enum>Qt::Vertical</enum>
         </property>
         <property name="sizeHint" stdset="0">
          <size>
           <width>20</width>
           <height>40</height>
          </size>
         </property>
        </spacer>
       </item>
       <item row="0" column="0" colspan="2">
        <widget class="QGroupBox" name="pdf_connfiguration_group_box">
         <property name="title">
          <string>PDF options</string>
         </property>
         <layout class="QGridLayout" name="gridLayout_5">
          <item row="0" column="0">
           <widget class="QLabel" name="pdf_page_count_limit_label">
            <property name="toolTip">
             <string>Automatically split PDF documents, if they get longer than this many pages.
Set to zero to disable splitting.


When printing PDFs using a USB flash drive directly connected to the printer,
the printer may refuse to print documents exceeding some arbitrary size limit.
To work around this limitation, you can enable this option,
and limit the number of pages per PDF. If the document has more pages,
it will be exported into multiple PDF documents automatically.</string>
            </property>
            <property name="text">
             <string>Split PDF documents longer than</string>
            </property>
            <property name="buddy">
             <cstring>pdf_page_count_limit</cstring>
            </property>
           </widget>
          </item>
          <item row="0" column="1">
           <widget class="QSpinBox" name="pdf_page_count_limit">
            <property name="sizePolicy">
             <sizepolicy hsizetype="Expanding" vsizetype="Fixed">
              <horstretch>0</horstretch>
              <verstretch>0</verstretch>
             </sizepolicy>
            </property>
            <property name="toolTip">
             <string>Automatically split PDF documents, if they get longer than this many pages.
Set to zero to disable splitting.


When printing PDFs using a USB flash drive directly connected to the printer,
the printer may refuse to print documents exceeding some arbitrary size limit.
To work around this limitation, you can enable this option,
and limit the number of pages per PDF. If the document has more pages,
it will be exported into multiple PDF documents automatically.</string>
            </property>
            <property name="suffix">
             <string> pages</string>
            </property>
            <property name="maximum">
             <number>2000000000</number>
            </property>
           </widget>
          </item>
         </layout>
        </widget>
       </item>
       <item row="2" column="0" colspan="2">
        <widget class="QGroupBox" name="printer_configuration_group_box">
         <property name="title">
          <string>Printer options</string>
         </property>
         <layout class="QGridLayout" name="gridLayout_8">
          <item row="0" column="0">
           <widget class="QCheckBox" name="printer_use_borderless_printing">
            <property name="toolTip">
             <string>When enabled, instruct the printer to use borderless mode and let MTGProxyPrinter manage the printing margins.
Disable this, if your printer keeps scaling print-outs up or down.

When disabled, managing the page margins is delegated to the printer driver,
which should increase compatibility, at the expense of drawing shorter cut helper lines.</string>
            </property>
            <property name="text">
             <string>Configure printer for borderless printing</string>
            </property>
           </widget>
          </item>
         </layout>
        </widget>
       </item>
      </layout>
     </widget>
     <widget class="QWidget" name="tab_printing_filters">
      <attribute name="title">
       <string>Hide printings</string>
      </attribute>
      <layout class="QVBoxLayout" name="tab_card_data_download_layout">
       <item>
        <widget class="QLabel" name="card_filter_settings_header_label">
         <property name="text">
          <string>These options allow hiding unwanted cards and printings. Hidden printings are treated as though they don’t exist. They can’t be found in the card search and are automatically replaced in loaded documents or imported deck lists, if possible. If all printings of a card are hidden, it won’t be available at all.</string>
         </property>
         <property name="wordWrap">
          <bool>true</bool>
         </property>
        </widget>
       </item>
       <item>
        <widget class="GeneralPrintingFilterWidget" name="card_filter_general_settings"/>
       </item>
       <item>
        <widget class="FormatPrintingFilterWidget" name="card_filter_format_settings"/>
       </item>
       <item>
        <widget class="QLabel" name="set_filter_label">
         <property name="text">
          <string>Hide specific sets: Add set codes as listed on Scryfall, for example LEA or 2X2. Separate multiple entries with spaces or line breaks. All words not matching an exact set code are ignored.</string>
         </property>
         <property name="wordWrap">
          <bool>true</bool>
         </property>
        </widget>
       </item>
       <item>
        <widget class="QPlainTextEdit" name="set_filter_settings">
         <property name="toolTip">
          <string>Example:

LEA DDU TC13 J21</string>
         </property>
         <property name="placeholderText">
          <string>No sets currently hidden.</string>
         </property>
        </widget>
       </item>
      </layout>
     </widget>
     <widget class="QWidget" name="tab_debug">
      <attribute name="title">
       <string>Debug settings</string>
      </attribute>
      <layout class="QGridLayout" name="gridLayout_7">
       <item row="5" column="0">
        <widget class="QCheckBox" name="enable_write_log_file">
         <property name="text">
          <string>Enable writing a log file to disk</string>
         </property>
        </widget>
       </item>
       <item row="6" column="1">
        <widget class="QComboBox" name="log_level_combo_box">
         <property name="toolTip">
          <string>Only write events with the given severity level and higher to the log file.</string>
         </property>
        </widget>
       </item>
       <item row="7" column="1">
        <widget class="QPushButton" name="open_debug_log_location">
         <property name="text">
          <string>Open debug log directory</string>
         </property>
         <property name="icon">
          <iconset theme="document-open"/>
         </property>
        </widget>
       </item>
       <item row="10" column="0" colspan="2">
        <spacer name="verticalSpacer_5">
         <property name="orientation">
          <enum>Qt::Vertical</enum>
         </property>
         <property name="sizeHint" stdset="0">
          <size>
           <width>20</width>
           <height>40</height>
          </size>
         </property>
        </spacer>
       </item>
       <item row="6" column="0">
        <widget class="QLabel" name="log_level_label">
         <property name="text">
          <string>Event severity that gets logged to file:</string>
         </property>
         <property name="buddy">
          <cstring>log_level_combo_box</cstring>
         </property>
        </widget>
       </item>
       <item row="2" column="0" colspan="2">
        <widget class="QLabel" name="debug_settings_headerlabel">
         <property name="text">
          <string>Debug settings (Changing these require an application restart)</string>
         </property>
        </widget>
       </item>
       <item row="4" column="0" colspan="2">
        <widget class="QCheckBox" name="enable_cutelog_integration">
         <property name="toolTip">
          <string>Cutelog is a live log event viewer that can be used to monitor events in real-time.</string>
         </property>
         <property name="whatsThis">
          <string>&lt;html&gt;&lt;head/&gt;&lt;body&gt;&lt;p&gt;See &lt;a href=&quot;https://github.com/busimus/cutelog&quot;&gt;&lt;span style=&quot; text-decoration: underline; color:#2980b9;&quot;&gt;https://github.com/busimus/cutelog&lt;/span&gt;&lt;/a&gt; for details about Cutelog.&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string>
         </property>
         <property name="text">
          <string>Enable Cutelog integration</string>
         </property>
        </widget>
       </item>
       <item row="3" column="0" colspan="2">
        <widget class="Line" name="debug_settings_header_line">
         <property name="orientation">
          <enum>Qt::Horizontal</enum>
         </property>
        </widget>
       </item>
       <item row="9" column="1">
        <widget class="QPushButton" name="debug_import_card_data_from_file">
         <property name="text">
          <string>Import card data from file</string>
         </property>
         <property name="icon">
          <iconset theme="document-import"/>
         </property>
        </widget>
       </item>
       <item row="8" column="1">
        <widget class="QPushButton" name="debug_download_card_data_as_file">
         <property name="text">
          <string>Download card data as file</string>
         </property>
         <property name="icon">
          <iconset theme="edit-download"/>
         </property>
        </widget>
       </item>
      </layout>
     </widget>
    </widget>
   </item>
   <item>
    <widget class="QDialogButtonBox" name="button_box">
     <property name="standardButtons">
      <set>QDialogButtonBox::Cancel|QDialogButtonBox::Reset|QDialogButtonBox::RestoreDefaults|QDialogButtonBox::Save</set>
     </property>
    </widget>
   </item>
  </layout>
 </widget>
 <customwidgets>
  <customwidget>
   <class>PageConfigWidget</class>
   <extends>QGroupBox</extends>
   <header>mtg_proxy_printer.ui.page_config_widget</header>
   <container>1</container>
  </customwidget>
  <customwidget>
   <class>GeneralPrintingFilterWidget</class>
   <extends>QGroupBox</extends>
   <header>mtg_proxy_printer.ui.printing_filter_widgets</header>
   <container>1</container>
  </customwidget>
  <customwidget>
   <class>FormatPrintingFilterWidget</class>
   <extends>QGroupBox</extends>
   <header>mtg_proxy_printer.ui.printing_filter_widgets</header>
   <container>1</container>
  </customwidget>
 </customwidgets>
 <tabstops>
  <tabstop>add_card_widget_style_combo_box</tabstop>
  <tabstop>automatically_add_opposing_faces</tabstop>
  <tabstop>document_save_path</tabstop>
  <tabstop>document_save_path_browse_button</tabstop>
  <tabstop>pdf_save_path</tabstop>
  <tabstop>pdf_save_path_browse_button</tabstop>
  <tabstop>check_application_updates_enabled</tabstop>
  <tabstop>check_card_data_updates_enabled</tabstop>
  <tabstop>print_guessing_enable</tabstop>
  <tabstop>print_guessing_prefer_already_downloaded</tabstop>
  <tabstop>automatic_deck_list_translation_enable</tabstop>
 </tabstops>
 <resources/>
 <connections>
  <connection>
   <sender>button_box</sender>
   <signal>accepted()</signal>
   <receiver>SettingsWindow</receiver>
   <slot>accept()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>284</x>
     <y>643</y>
    </hint>
    <hint type="destinationlabel">
     <x>157</x>
     <y>274</y>
    </hint>
   </hints>
  </connection>
  <connection>
   <sender>button_box</sender>
   <signal>rejected()</signal>
   <receiver>SettingsWindow</receiver>
   <slot>reject()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>352</x>
     <y>643</y>
    </hint>
    <hint type="destinationlabel">
     <x>286</x>
     <y>274</y>
    </hint>
   </hints>
  </connection>
 </connections>
</ui>
