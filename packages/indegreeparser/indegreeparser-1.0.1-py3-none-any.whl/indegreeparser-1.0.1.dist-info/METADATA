Metadata-Version: 2.1
Name: indegreeparser
Version: 1.0.1
Summary: A modified resume parser built on the pyresparse library used for extracting information from resumes
Home-page: https://github.com/AhmedTElKodsh/IndegreeParser
Author: Ahmed ElKodsh
Author-email: ahmed_elkodsh@yahoo.com
License: GPL-3.0
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Libraries
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: attrs (>=19.1.0)
Requires-Dist: blis (>=0.2.4)
Requires-Dist: certifi (>=2019.6.16)
Requires-Dist: chardet (>=3.0.4)
Requires-Dist: cymem (>=2.0.2)
Requires-Dist: docx2txt (>=0.7)
Requires-Dist: idna (>=2.8)
Requires-Dist: jsonschema (>=3.0.1)
Requires-Dist: nltk (>=3.4.3)
Requires-Dist: numpy (>=1.16.4)
Requires-Dist: pandas (>=0.24.2)
Requires-Dist: pdfminer.six (>=20181108)
Requires-Dist: preshed (>=2.0.1)
Requires-Dist: pycryptodome (>=3.8.2)
Requires-Dist: pyrsistent (>=0.15.2)
Requires-Dist: python-dateutil (>=2.8.0)
Requires-Dist: pytz (>=2019.1)
Requires-Dist: requests (>=2.22.0)
Requires-Dist: six (>=1.12.0)
Requires-Dist: sortedcontainers (>=2.1.0)
Requires-Dist: spacy (>=2.1.4)
Requires-Dist: srsly (>=0.0.7)
Requires-Dist: thinc (>=7.0.4)
Requires-Dist: tqdm (>=4.32.2)
Requires-Dist: urllib3 (>=1.25.3)
Requires-Dist: wasabi (>=0.2.2)

# pyresparser

```
A modified pyresparse resume parser that extracts years of experience more accurately
```

Built with â‌¤ï¸ژ by  [Ahmed ElKodsh](https://github.com/AhmedTElKodsh)

---

# Features

- Extract name
- Extract email
- Extract mobile numbers
- Extract skills
- Extract total experience (more accurately)
- Extract college name
- Extract degree
- Extract designation
- Extract company names

# Installation

- You can install this package using

```bash
pip install indegreeparser
```

- For NLP operations we use spacy and nltk. Install them using below commands:

```bash
# spaCy
python -m spacy download en_core_web_sm

# nltk
python -m nltk.downloader words
python -m nltk.downloader stopwords
```

# Documentation

Official documentation is available at: https://www.omkarpathak.in/pyresparser/

# Supported File Formats

- PDF and DOCx files are supported on all Operating Systems
- If you want to extract DOC files you can install [textract](https://textract.readthedocs.io/en/stable/installation.html) for your OS (Linux, MacOS)
- Note: You just have to install textract (and nothing else) and doc files will get parsed easily

# Usage

- Import it in your Python project

```python
from indegreeparser import ResumeParser
data = ResumeParser('/path/to/resume/file').get_extracted_data()
```

# CLI

For running the resume extractor you can also use the `cli` provided

```bash
usage: pyresparser [-h] [-f FILE] [-d DIRECTORY] [-r REMOTEFILE]
                   [-re CUSTOM_REGEX] [-sf SKILLSFILE] [-e EXPORT_FORMAT]

optional arguments:
  -h, --help            show this help message and exit
  -f FILE, --file FILE  resume file to be extracted
  -d DIRECTORY, --directory DIRECTORY
                        directory containing all the resumes to be extracted
  -r REMOTEFILE, --remotefile REMOTEFILE
                        remote path for resume file to be extracted
  -re CUSTOM_REGEX, --custom-regex CUSTOM_REGEX
                        custom regex for parsing mobile numbers
  -sf SKILLSFILE, --skillsfile SKILLSFILE
                        custom skills CSV file against which skills are
                        searched for
  -e EXPORT_FORMAT, --export-format EXPORT_FORMAT
                        the information export format (json)
```

# Notes:

- If you are running the app on windows, then you can only extract .docs and .pdf files

# Result

The module would return a list of dictionary objects with result as follows:

```
[
  {
    'college_name': ['Marathwada Mitra Mandalâ€™s College of Engineering'],
    'company_names': None,
    'degree': ['B.E. IN COMPUTER ENGINEERING'],
    'designation': ['Manager',
                    'TECHNICAL CONTENT WRITER',
                    'DATA ENGINEER'],
    'email': 'omkarpathak27@gmail.com',
    'mobile_number': '8087996634',
    'name': 'Omkar Pathak',
    'no_of_pages': 3,
    'skills': ['Operating systems',
              'Linux',
              'Github',
              'Testing',
              'Content',
              'Automation',
              'Python',
              'Css',
              'Website',
              'Django',
              'Opencv',
              'Programming',
              'C',
              ...],
    'total_experience': 1.83
  }
]
```

