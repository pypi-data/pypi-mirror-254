# This is an example of the parameter file to be used
# to validate config data.
#
# Each parameter is listed by its main name as parent key.
# A list of alternative names can be listed using the key 'names'.
# If a config entry with one of the names listed are found (case insensitive),
# a validated config entry is set with the main name.
#
# The length of the entry must be given by the key 'len'.
# Lists with undefined length can be set by len: null.
#
# The 'unit' has to be a list of the same len as the entry.
# No units can be set by null or by not adding the 'unit' key.
#
# Config entries will be checked whether they are given
# with equivalents units or not. If so, the entry will
# be converted to the proper unit and only its value
# will be returned.
#
# A default value can be given by the key 'default'.
# Parameters without default key will raise error when missing.
#
# Dict can be given similarly to lists, with the proper len.
#
zenith_angle:
  len: 1
  unit: !astropy.units.Unit {unit: deg}
  default: 20.0
  names: ['zenith', 'theta']
azimuth_angle:
  len: 1
  unit: !astropy.units.Unit {unit: deg}
  default: null # No default is given for the sake of the test
  names: ['azimuth', 'phi']
off_axis_angle: # Parameter with undefined length
  len: null
  unit: !astropy.units.Unit {unit: deg}
  names: ['offaxis', 'offset']
source_distance:
  len: 1
  unit: !astropy.units.Unit {unit: km}
  default: 10
cscat: # Parameter with len > 1 and multiple units.
  len: 3
  unit: [null, !astropy.units.Unit {unit: m}, !astropy.units.Unit {unit: m}]
  names: ['scat']
validated_name:
  len: 1
  unit: null
  names: ['test_name']
dict_par:
  len: 2
  unit: [null, !astropy.units.Unit {unit: cm}]
  default:
    blah: 1
    bleh: !astropy.units.Quantity
      unit: !astropy.units.Unit {unit: cm}
      value: 2
