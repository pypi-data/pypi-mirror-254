[build-system]
requires = ["setuptools >= 61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "bio-parser"
dynamic = ["dependencies", "optional-dependencies"]
version = "0.3.0"
authors = [
    { name = "Oliver Tüselmann", email = "oliver.tueselmann@tu-dortmund.de" },
    { name = "David Villanova Aparisi", email = "davilap@inf.upv.es" },
    { name = "Yoann Schneider", email = "yschneider@teklia.com" },
    { name = "Solène Tarride", email = "starride@teklia.com" },
]
maintainers = [
    { name = "Yoann Schneider", email = "yschneider@teklia.com" },
    { name = "Solène Tarride", email = "starride@teklia.com" },
]
requires-python = ">=3.10"
readme = { file = "README.md", content-type = "text/markdown" }
license = { file = "LICENSE" }
keywords = ["NER", "python"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: MIT License",
    # Specify the Python versions you support here.
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    # Topics
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Text Processing :: Linguistic",
]

[project.urls]
Homepage = "https://gitlab.teklia.com/ner/metrics/bio-parser"
Documentation = "https://ner.pages.teklia.com/metrics/bio-parser"
Repository = "https://gitlab.teklia.com/ner/metrics/bio-parser"
"Bug Tracker" = "https://gitlab.teklia.com/ner/metrics/bio-parser/issues"

[project.scripts]
bio-parser = "bio_parser.cli:main"

[tool.setuptools.dynamic]
dependencies = { file = ["requirements.txt"] }
optional-dependencies = { docs = { file = ["doc-requirements.txt"] }}

[tool.ruff]
exclude = [".git", "__pycache__"]
ignore = [
    "E501",
    # On top of the Google convention, disable `D417`, which requires
    # documentation for every function parameter.
    "D417",
    # May cause some conflicts
    "COM812",
    # Missing docstring in __init__ and other magic methods
    "D105", "D107",
]
select = [
    # pycodestyle
    "E",
    "W",
    # Pyflakes
    "F",
    # Flake8 Debugger
    "T1",
    # Isort
    "I",
    # Pathlib usage
    "PTH",
    # Pyupgrade
    "UP",
    # Pydocstyle
    "D",
    # Pandas-vet
    "PD",
    # Flake8-print
    "T20",
    # Flake8-comprehension
    "C4",
    # Flake8-builtins
    "A",
    # flake8-commas
    "COM",
    # flake8-import-conventions
    "ICN",
    # flake8-pytest-style
    "PT",
    # flake8-raise
    "RSE",
    # flake8-quotes
    "Q",
    # flake8-unused-arguments
    "ARG",
]

[tool.ruff.lint.pydocstyle]
# Use Google-style docstrings.
convention = "google"

[tool.ruff.per-file-ignores]
# Ignore pydocstyles for setup.py
"setup.py" = ["D"]
"__init__.py" = ["D"]
"cli.py" = ["D"]
