[project]
name = "flardl"
version = "0.0.8.2"
description = "Adaptive Elastic Multi-Site Downloading"
authors = [
    { name = "Joel Berendzen", email = "joel@generisbio.com" },
]
dependencies = [
    "anyio>=4.0.0",
    "attrs>=23.1.0",
    "httpx[http2]>=0.25.1",
    "tqdm>=4.66.1",
    "trio>=0.23.1",
    "psutil>=5.9.6",
    "uvloop>=0.19.0; platform_system!='Windows'",
]
requires-python = ">=3.9,<3.13"
readme = "README.md"
homepage = "https://github.com/hydrationdynamics/flardl"
repository = "https://github.com/hydrationdynamics/flardl"
documentation = "https://flardl.readthedocs.io"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP",
]
keywords = [
    "downloading",
    "asynchronous",
    "multidispatching",
    "queueing",
    "adaptive",
    "elastic",
    "adaptilastic",
    "federated",
    "high-performance",
]

[project.license]
text = "BSD-3-Clause"

[project.optional-dependencies]
analysis = [
    "typer>=0.9.0",
    "scipy>=1.11.4",
    "seaborn>=0.13.1",
]

[tool.coverage.paths]
source = [
    "src",
    "*/site-packages",
]
tests = [
    "tests",
    "*/tests",
]

[tool.coverage.report]
show_missing = true

[tool.coverage.run]
source = [
    "flardl",
]
concurrency = [
    "multiprocessing",
]
sigterm = true
parallel = true
relative_files = true

[tool.mypy]
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true

[tool.pdm.dev-dependencies]
tests = [
    "pygments>=2.16.1",
    "hypothesis>=6.88.3",
    "numpy>=1.26.1",
    "pandas>=2.1.3",
    "pandas-stubs>=2.1.1.230928",
    "pytest-trio>=0.8.0",
    "pytest-datadir-mgr>=1.3.4",
    "coverage[toml]>=7.4.0",
    "mypy>=1.8.0",
    "typeguard>=4.1.5",
]
docs = [
    "furo>=2023.9.10",
    "linkify-it-py>=2.0.2",
    "numpy>=1.26.1",
    "sphinx>=7.2.6",
    "sphinx-autobuild>=2021.3.14",
    "sphinx-click>=5.0.1",
    "myst-parser>=2.0.0",
]
safety = [
    "safety>=2.3.5",
]
pre-commit = [
    "pre-commit>=3.5.0",
    "pre-commit-hooks>=4.5.0",
    "ruff>=0.1.5",
]
xdoctest = [
    "xdoctest[colors]>=1.1.2",
]
coverage = [
    "coverage>=7.4.0",
]

[tool.pytest.ini_options]
addopts = [
    "-x",
]

[tool.ruff]
src = [
    "src",
    "tests",
]
line-length = 88
target-version = "py39"

[tool.ruff.lint]
select = [
    "A",
    "ARG",
    "B",
    "B9",
    "BLE",
    "C",
    "C4",
    "D",
    "DTZ",
    "E",
    "F",
    "I",
    "N",
    "PIE",
    "PT",
    "PTH",
    "Q",
    "RET",
    "RUF",
    "S",
    "SIM",
    "SLF",
    "T10",
    "TCH",
    "UP",
    "W",
]

[tool.ruff.lint.isort]
force-single-line = true
lines-after-imports = 2

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
    "F401",
]
"tests/*" = [
    "D104",
    "D205",
    "D212",
    "D415",
    "D205",
    "D104",
    "S101",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"
