# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ANTsWasmPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkANTSRegistrationPython
else:
    import _itkANTSRegistrationPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkANTSRegistrationPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkANTSRegistrationPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkPointPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkTransformBasePython
import itk.itkOptimizerParametersPython
import itk.itkArrayPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkArray2DPython
import itk.itkDiffusionTensor3DPython
import itk.itkVariableLengthVectorPython
import itk.itkCompositeTransformPython
import itk.itkMultiTransformPython
import itk.itkImagePython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython

def itkANTSRegistrationID2ID2_New():
    return itkANTSRegistrationID2ID2.New()

class itkANTSRegistrationID2ID2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkANTSRegistrationID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkANTSRegistrationPython.itkANTSRegistrationID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID2ID2_Clone)
    SetFixedImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID2ID2_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID2ID2_GetFixedImage)
    SetMovingImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID2ID2_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID2ID2_GetMovingImage)
    GetWarpedMovingImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID2ID2_GetWarpedMovingImage)
    GetWarpedFixedImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID2ID2_GetWarpedFixedImage)
    SetFixedMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID2ID2_SetFixedMask)
    GetFixedMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID2ID2_GetFixedMask)
    SetMovingMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID2ID2_SetMovingMask)
    GetMovingMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID2ID2_GetMovingMask)
    SetTypeOfTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID2ID2_SetTypeOfTransform)
    GetTypeOfTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID2ID2_GetTypeOfTransform)
    SetAffineMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID2ID2_SetAffineMetric)
    GetAffineMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID2ID2_GetAffineMetric)
    SetSynMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID2ID2_SetSynMetric)
    GetSynMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID2ID2_GetSynMetric)
    SetInitialTransformInput = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID2ID2_SetInitialTransformInput)
    SetInitialTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID2ID2_SetInitialTransform)
    GetInitialTransformInput = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID2ID2_GetInitialTransformInput)
    GetInitialTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID2ID2_GetInitialTransform)
    GetForwardTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID2ID2_GetForwardTransform)
    GetInverseTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID2ID2_GetInverseTransform)
    SetGradientStep = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID2ID2_SetGradientStep)
    GetGradientStep = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID2ID2_GetGradientStep)
    SetFlowSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID2ID2_SetFlowSigma)
    GetFlowSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID2ID2_GetFlowSigma)
    SetTotalSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID2ID2_SetTotalSigma)
    GetTotalSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID2ID2_GetTotalSigma)
    SetSamplingRate = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID2ID2_SetSamplingRate)
    GetSamplingRate = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID2ID2_GetSamplingRate)
    SetNumberOfBins = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID2ID2_SetNumberOfBins)
    GetNumberOfBins = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID2ID2_GetNumberOfBins)
    SetRandomSeed = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID2ID2_SetRandomSeed)
    GetRandomSeed = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID2ID2_GetRandomSeed)
    SetSmoothingInPhysicalUnits = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID2ID2_SetSmoothingInPhysicalUnits)
    GetSmoothingInPhysicalUnits = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID2ID2_GetSmoothingInPhysicalUnits)
    GetSynIterations = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID2ID2_GetSynIterations)
    GetAffineIterations = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID2ID2_GetAffineIterations)
    GetShrinkFactors = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID2ID2_GetShrinkFactors)
    GetSmoothingSigmas = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID2ID2_GetSmoothingSigmas)
    GetOutput = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID2ID2_GetOutput)
    __swig_destroy__ = _itkANTSRegistrationPython.delete_itkANTSRegistrationID2ID2
    cast = _swig_new_static_method(_itkANTSRegistrationPython.itkANTSRegistrationID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkANTSRegistrationID2ID2

        Create a new object of the class itkANTSRegistrationID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkANTSRegistrationID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkANTSRegistrationID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkANTSRegistrationID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkANTSRegistrationID2ID2 in _itkANTSRegistrationPython:
_itkANTSRegistrationPython.itkANTSRegistrationID2ID2_swigregister(itkANTSRegistrationID2ID2)
itkANTSRegistrationID2ID2___New_orig__ = _itkANTSRegistrationPython.itkANTSRegistrationID2ID2___New_orig__
itkANTSRegistrationID2ID2_cast = _itkANTSRegistrationPython.itkANTSRegistrationID2ID2_cast


def itkANTSRegistrationID3ID3_New():
    return itkANTSRegistrationID3ID3.New()

class itkANTSRegistrationID3ID3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkANTSRegistrationID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkANTSRegistrationPython.itkANTSRegistrationID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID3ID3_Clone)
    SetFixedImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID3ID3_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID3ID3_GetFixedImage)
    SetMovingImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID3ID3_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID3ID3_GetMovingImage)
    GetWarpedMovingImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID3ID3_GetWarpedMovingImage)
    GetWarpedFixedImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID3ID3_GetWarpedFixedImage)
    SetFixedMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID3ID3_SetFixedMask)
    GetFixedMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID3ID3_GetFixedMask)
    SetMovingMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID3ID3_SetMovingMask)
    GetMovingMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID3ID3_GetMovingMask)
    SetTypeOfTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID3ID3_SetTypeOfTransform)
    GetTypeOfTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID3ID3_GetTypeOfTransform)
    SetAffineMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID3ID3_SetAffineMetric)
    GetAffineMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID3ID3_GetAffineMetric)
    SetSynMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID3ID3_SetSynMetric)
    GetSynMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID3ID3_GetSynMetric)
    SetInitialTransformInput = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID3ID3_SetInitialTransformInput)
    SetInitialTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID3ID3_SetInitialTransform)
    GetInitialTransformInput = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID3ID3_GetInitialTransformInput)
    GetInitialTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID3ID3_GetInitialTransform)
    GetForwardTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID3ID3_GetForwardTransform)
    GetInverseTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID3ID3_GetInverseTransform)
    SetGradientStep = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID3ID3_SetGradientStep)
    GetGradientStep = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID3ID3_GetGradientStep)
    SetFlowSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID3ID3_SetFlowSigma)
    GetFlowSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID3ID3_GetFlowSigma)
    SetTotalSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID3ID3_SetTotalSigma)
    GetTotalSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID3ID3_GetTotalSigma)
    SetSamplingRate = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID3ID3_SetSamplingRate)
    GetSamplingRate = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID3ID3_GetSamplingRate)
    SetNumberOfBins = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID3ID3_SetNumberOfBins)
    GetNumberOfBins = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID3ID3_GetNumberOfBins)
    SetRandomSeed = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID3ID3_SetRandomSeed)
    GetRandomSeed = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID3ID3_GetRandomSeed)
    SetSmoothingInPhysicalUnits = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID3ID3_SetSmoothingInPhysicalUnits)
    GetSmoothingInPhysicalUnits = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID3ID3_GetSmoothingInPhysicalUnits)
    GetSynIterations = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID3ID3_GetSynIterations)
    GetAffineIterations = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID3ID3_GetAffineIterations)
    GetShrinkFactors = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID3ID3_GetShrinkFactors)
    GetSmoothingSigmas = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID3ID3_GetSmoothingSigmas)
    GetOutput = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID3ID3_GetOutput)
    __swig_destroy__ = _itkANTSRegistrationPython.delete_itkANTSRegistrationID3ID3
    cast = _swig_new_static_method(_itkANTSRegistrationPython.itkANTSRegistrationID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkANTSRegistrationID3ID3

        Create a new object of the class itkANTSRegistrationID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkANTSRegistrationID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkANTSRegistrationID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkANTSRegistrationID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkANTSRegistrationID3ID3 in _itkANTSRegistrationPython:
_itkANTSRegistrationPython.itkANTSRegistrationID3ID3_swigregister(itkANTSRegistrationID3ID3)
itkANTSRegistrationID3ID3___New_orig__ = _itkANTSRegistrationPython.itkANTSRegistrationID3ID3___New_orig__
itkANTSRegistrationID3ID3_cast = _itkANTSRegistrationPython.itkANTSRegistrationID3ID3_cast


def itkANTSRegistrationID4ID4_New():
    return itkANTSRegistrationID4ID4.New()

class itkANTSRegistrationID4ID4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkANTSRegistrationID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkANTSRegistrationPython.itkANTSRegistrationID4ID4___New_orig__)
    Clone = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID4ID4_Clone)
    SetFixedImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID4ID4_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID4ID4_GetFixedImage)
    SetMovingImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID4ID4_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID4ID4_GetMovingImage)
    GetWarpedMovingImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID4ID4_GetWarpedMovingImage)
    GetWarpedFixedImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID4ID4_GetWarpedFixedImage)
    SetFixedMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID4ID4_SetFixedMask)
    GetFixedMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID4ID4_GetFixedMask)
    SetMovingMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID4ID4_SetMovingMask)
    GetMovingMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID4ID4_GetMovingMask)
    SetTypeOfTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID4ID4_SetTypeOfTransform)
    GetTypeOfTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID4ID4_GetTypeOfTransform)
    SetAffineMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID4ID4_SetAffineMetric)
    GetAffineMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID4ID4_GetAffineMetric)
    SetSynMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID4ID4_SetSynMetric)
    GetSynMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID4ID4_GetSynMetric)
    SetInitialTransformInput = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID4ID4_SetInitialTransformInput)
    SetInitialTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID4ID4_SetInitialTransform)
    GetInitialTransformInput = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID4ID4_GetInitialTransformInput)
    GetInitialTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID4ID4_GetInitialTransform)
    GetForwardTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID4ID4_GetForwardTransform)
    GetInverseTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID4ID4_GetInverseTransform)
    SetGradientStep = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID4ID4_SetGradientStep)
    GetGradientStep = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID4ID4_GetGradientStep)
    SetFlowSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID4ID4_SetFlowSigma)
    GetFlowSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID4ID4_GetFlowSigma)
    SetTotalSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID4ID4_SetTotalSigma)
    GetTotalSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID4ID4_GetTotalSigma)
    SetSamplingRate = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID4ID4_SetSamplingRate)
    GetSamplingRate = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID4ID4_GetSamplingRate)
    SetNumberOfBins = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID4ID4_SetNumberOfBins)
    GetNumberOfBins = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID4ID4_GetNumberOfBins)
    SetRandomSeed = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID4ID4_SetRandomSeed)
    GetRandomSeed = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID4ID4_GetRandomSeed)
    SetSmoothingInPhysicalUnits = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID4ID4_SetSmoothingInPhysicalUnits)
    GetSmoothingInPhysicalUnits = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID4ID4_GetSmoothingInPhysicalUnits)
    GetSynIterations = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID4ID4_GetSynIterations)
    GetAffineIterations = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID4ID4_GetAffineIterations)
    GetShrinkFactors = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID4ID4_GetShrinkFactors)
    GetSmoothingSigmas = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID4ID4_GetSmoothingSigmas)
    GetOutput = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationID4ID4_GetOutput)
    __swig_destroy__ = _itkANTSRegistrationPython.delete_itkANTSRegistrationID4ID4
    cast = _swig_new_static_method(_itkANTSRegistrationPython.itkANTSRegistrationID4ID4_cast)

    def New(*args, **kargs):
        """New() -> itkANTSRegistrationID4ID4

        Create a new object of the class itkANTSRegistrationID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkANTSRegistrationID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkANTSRegistrationID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkANTSRegistrationID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkANTSRegistrationID4ID4 in _itkANTSRegistrationPython:
_itkANTSRegistrationPython.itkANTSRegistrationID4ID4_swigregister(itkANTSRegistrationID4ID4)
itkANTSRegistrationID4ID4___New_orig__ = _itkANTSRegistrationPython.itkANTSRegistrationID4ID4___New_orig__
itkANTSRegistrationID4ID4_cast = _itkANTSRegistrationPython.itkANTSRegistrationID4ID4_cast


def itkANTSRegistrationIF2IF2_New():
    return itkANTSRegistrationIF2IF2.New()

class itkANTSRegistrationIF2IF2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkANTSRegistrationIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkANTSRegistrationPython.itkANTSRegistrationIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF2IF2_Clone)
    SetFixedImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF2IF2_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF2IF2_GetFixedImage)
    SetMovingImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF2IF2_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF2IF2_GetMovingImage)
    GetWarpedMovingImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF2IF2_GetWarpedMovingImage)
    GetWarpedFixedImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF2IF2_GetWarpedFixedImage)
    SetFixedMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF2IF2_SetFixedMask)
    GetFixedMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF2IF2_GetFixedMask)
    SetMovingMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF2IF2_SetMovingMask)
    GetMovingMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF2IF2_GetMovingMask)
    SetTypeOfTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF2IF2_SetTypeOfTransform)
    GetTypeOfTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF2IF2_GetTypeOfTransform)
    SetAffineMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF2IF2_SetAffineMetric)
    GetAffineMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF2IF2_GetAffineMetric)
    SetSynMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF2IF2_SetSynMetric)
    GetSynMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF2IF2_GetSynMetric)
    SetInitialTransformInput = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF2IF2_SetInitialTransformInput)
    SetInitialTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF2IF2_SetInitialTransform)
    GetInitialTransformInput = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF2IF2_GetInitialTransformInput)
    GetInitialTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF2IF2_GetInitialTransform)
    GetForwardTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF2IF2_GetForwardTransform)
    GetInverseTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF2IF2_GetInverseTransform)
    SetGradientStep = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF2IF2_SetGradientStep)
    GetGradientStep = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF2IF2_GetGradientStep)
    SetFlowSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF2IF2_SetFlowSigma)
    GetFlowSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF2IF2_GetFlowSigma)
    SetTotalSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF2IF2_SetTotalSigma)
    GetTotalSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF2IF2_GetTotalSigma)
    SetSamplingRate = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF2IF2_SetSamplingRate)
    GetSamplingRate = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF2IF2_GetSamplingRate)
    SetNumberOfBins = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF2IF2_SetNumberOfBins)
    GetNumberOfBins = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF2IF2_GetNumberOfBins)
    SetRandomSeed = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF2IF2_SetRandomSeed)
    GetRandomSeed = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF2IF2_GetRandomSeed)
    SetSmoothingInPhysicalUnits = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF2IF2_SetSmoothingInPhysicalUnits)
    GetSmoothingInPhysicalUnits = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF2IF2_GetSmoothingInPhysicalUnits)
    GetSynIterations = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF2IF2_GetSynIterations)
    GetAffineIterations = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF2IF2_GetAffineIterations)
    GetShrinkFactors = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF2IF2_GetShrinkFactors)
    GetSmoothingSigmas = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF2IF2_GetSmoothingSigmas)
    GetOutput = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF2IF2_GetOutput)
    __swig_destroy__ = _itkANTSRegistrationPython.delete_itkANTSRegistrationIF2IF2
    cast = _swig_new_static_method(_itkANTSRegistrationPython.itkANTSRegistrationIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkANTSRegistrationIF2IF2

        Create a new object of the class itkANTSRegistrationIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkANTSRegistrationIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkANTSRegistrationIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkANTSRegistrationIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkANTSRegistrationIF2IF2 in _itkANTSRegistrationPython:
_itkANTSRegistrationPython.itkANTSRegistrationIF2IF2_swigregister(itkANTSRegistrationIF2IF2)
itkANTSRegistrationIF2IF2___New_orig__ = _itkANTSRegistrationPython.itkANTSRegistrationIF2IF2___New_orig__
itkANTSRegistrationIF2IF2_cast = _itkANTSRegistrationPython.itkANTSRegistrationIF2IF2_cast


def itkANTSRegistrationIF3IF3_New():
    return itkANTSRegistrationIF3IF3.New()

class itkANTSRegistrationIF3IF3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkANTSRegistrationIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkANTSRegistrationPython.itkANTSRegistrationIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF3IF3_Clone)
    SetFixedImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF3IF3_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF3IF3_GetFixedImage)
    SetMovingImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF3IF3_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF3IF3_GetMovingImage)
    GetWarpedMovingImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF3IF3_GetWarpedMovingImage)
    GetWarpedFixedImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF3IF3_GetWarpedFixedImage)
    SetFixedMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF3IF3_SetFixedMask)
    GetFixedMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF3IF3_GetFixedMask)
    SetMovingMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF3IF3_SetMovingMask)
    GetMovingMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF3IF3_GetMovingMask)
    SetTypeOfTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF3IF3_SetTypeOfTransform)
    GetTypeOfTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF3IF3_GetTypeOfTransform)
    SetAffineMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF3IF3_SetAffineMetric)
    GetAffineMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF3IF3_GetAffineMetric)
    SetSynMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF3IF3_SetSynMetric)
    GetSynMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF3IF3_GetSynMetric)
    SetInitialTransformInput = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF3IF3_SetInitialTransformInput)
    SetInitialTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF3IF3_SetInitialTransform)
    GetInitialTransformInput = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF3IF3_GetInitialTransformInput)
    GetInitialTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF3IF3_GetInitialTransform)
    GetForwardTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF3IF3_GetForwardTransform)
    GetInverseTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF3IF3_GetInverseTransform)
    SetGradientStep = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF3IF3_SetGradientStep)
    GetGradientStep = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF3IF3_GetGradientStep)
    SetFlowSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF3IF3_SetFlowSigma)
    GetFlowSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF3IF3_GetFlowSigma)
    SetTotalSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF3IF3_SetTotalSigma)
    GetTotalSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF3IF3_GetTotalSigma)
    SetSamplingRate = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF3IF3_SetSamplingRate)
    GetSamplingRate = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF3IF3_GetSamplingRate)
    SetNumberOfBins = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF3IF3_SetNumberOfBins)
    GetNumberOfBins = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF3IF3_GetNumberOfBins)
    SetRandomSeed = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF3IF3_SetRandomSeed)
    GetRandomSeed = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF3IF3_GetRandomSeed)
    SetSmoothingInPhysicalUnits = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF3IF3_SetSmoothingInPhysicalUnits)
    GetSmoothingInPhysicalUnits = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF3IF3_GetSmoothingInPhysicalUnits)
    GetSynIterations = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF3IF3_GetSynIterations)
    GetAffineIterations = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF3IF3_GetAffineIterations)
    GetShrinkFactors = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF3IF3_GetShrinkFactors)
    GetSmoothingSigmas = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF3IF3_GetSmoothingSigmas)
    GetOutput = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF3IF3_GetOutput)
    __swig_destroy__ = _itkANTSRegistrationPython.delete_itkANTSRegistrationIF3IF3
    cast = _swig_new_static_method(_itkANTSRegistrationPython.itkANTSRegistrationIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkANTSRegistrationIF3IF3

        Create a new object of the class itkANTSRegistrationIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkANTSRegistrationIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkANTSRegistrationIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkANTSRegistrationIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkANTSRegistrationIF3IF3 in _itkANTSRegistrationPython:
_itkANTSRegistrationPython.itkANTSRegistrationIF3IF3_swigregister(itkANTSRegistrationIF3IF3)
itkANTSRegistrationIF3IF3___New_orig__ = _itkANTSRegistrationPython.itkANTSRegistrationIF3IF3___New_orig__
itkANTSRegistrationIF3IF3_cast = _itkANTSRegistrationPython.itkANTSRegistrationIF3IF3_cast


def itkANTSRegistrationIF4IF4_New():
    return itkANTSRegistrationIF4IF4.New()

class itkANTSRegistrationIF4IF4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkANTSRegistrationIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkANTSRegistrationPython.itkANTSRegistrationIF4IF4___New_orig__)
    Clone = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF4IF4_Clone)
    SetFixedImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF4IF4_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF4IF4_GetFixedImage)
    SetMovingImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF4IF4_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF4IF4_GetMovingImage)
    GetWarpedMovingImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF4IF4_GetWarpedMovingImage)
    GetWarpedFixedImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF4IF4_GetWarpedFixedImage)
    SetFixedMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF4IF4_SetFixedMask)
    GetFixedMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF4IF4_GetFixedMask)
    SetMovingMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF4IF4_SetMovingMask)
    GetMovingMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF4IF4_GetMovingMask)
    SetTypeOfTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF4IF4_SetTypeOfTransform)
    GetTypeOfTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF4IF4_GetTypeOfTransform)
    SetAffineMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF4IF4_SetAffineMetric)
    GetAffineMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF4IF4_GetAffineMetric)
    SetSynMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF4IF4_SetSynMetric)
    GetSynMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF4IF4_GetSynMetric)
    SetInitialTransformInput = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF4IF4_SetInitialTransformInput)
    SetInitialTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF4IF4_SetInitialTransform)
    GetInitialTransformInput = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF4IF4_GetInitialTransformInput)
    GetInitialTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF4IF4_GetInitialTransform)
    GetForwardTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF4IF4_GetForwardTransform)
    GetInverseTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF4IF4_GetInverseTransform)
    SetGradientStep = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF4IF4_SetGradientStep)
    GetGradientStep = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF4IF4_GetGradientStep)
    SetFlowSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF4IF4_SetFlowSigma)
    GetFlowSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF4IF4_GetFlowSigma)
    SetTotalSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF4IF4_SetTotalSigma)
    GetTotalSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF4IF4_GetTotalSigma)
    SetSamplingRate = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF4IF4_SetSamplingRate)
    GetSamplingRate = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF4IF4_GetSamplingRate)
    SetNumberOfBins = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF4IF4_SetNumberOfBins)
    GetNumberOfBins = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF4IF4_GetNumberOfBins)
    SetRandomSeed = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF4IF4_SetRandomSeed)
    GetRandomSeed = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF4IF4_GetRandomSeed)
    SetSmoothingInPhysicalUnits = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF4IF4_SetSmoothingInPhysicalUnits)
    GetSmoothingInPhysicalUnits = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF4IF4_GetSmoothingInPhysicalUnits)
    GetSynIterations = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF4IF4_GetSynIterations)
    GetAffineIterations = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF4IF4_GetAffineIterations)
    GetShrinkFactors = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF4IF4_GetShrinkFactors)
    GetSmoothingSigmas = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF4IF4_GetSmoothingSigmas)
    GetOutput = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIF4IF4_GetOutput)
    __swig_destroy__ = _itkANTSRegistrationPython.delete_itkANTSRegistrationIF4IF4
    cast = _swig_new_static_method(_itkANTSRegistrationPython.itkANTSRegistrationIF4IF4_cast)

    def New(*args, **kargs):
        """New() -> itkANTSRegistrationIF4IF4

        Create a new object of the class itkANTSRegistrationIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkANTSRegistrationIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkANTSRegistrationIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkANTSRegistrationIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkANTSRegistrationIF4IF4 in _itkANTSRegistrationPython:
_itkANTSRegistrationPython.itkANTSRegistrationIF4IF4_swigregister(itkANTSRegistrationIF4IF4)
itkANTSRegistrationIF4IF4___New_orig__ = _itkANTSRegistrationPython.itkANTSRegistrationIF4IF4___New_orig__
itkANTSRegistrationIF4IF4_cast = _itkANTSRegistrationPython.itkANTSRegistrationIF4IF4_cast


def itkANTSRegistrationISS2ISS2_New():
    return itkANTSRegistrationISS2ISS2.New()

class itkANTSRegistrationISS2ISS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkANTSRegistrationISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkANTSRegistrationPython.itkANTSRegistrationISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS2ISS2_Clone)
    SetFixedImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS2ISS2_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS2ISS2_GetFixedImage)
    SetMovingImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS2ISS2_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS2ISS2_GetMovingImage)
    GetWarpedMovingImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS2ISS2_GetWarpedMovingImage)
    GetWarpedFixedImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS2ISS2_GetWarpedFixedImage)
    SetFixedMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS2ISS2_SetFixedMask)
    GetFixedMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS2ISS2_GetFixedMask)
    SetMovingMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS2ISS2_SetMovingMask)
    GetMovingMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS2ISS2_GetMovingMask)
    SetTypeOfTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS2ISS2_SetTypeOfTransform)
    GetTypeOfTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS2ISS2_GetTypeOfTransform)
    SetAffineMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS2ISS2_SetAffineMetric)
    GetAffineMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS2ISS2_GetAffineMetric)
    SetSynMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS2ISS2_SetSynMetric)
    GetSynMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS2ISS2_GetSynMetric)
    SetInitialTransformInput = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS2ISS2_SetInitialTransformInput)
    SetInitialTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS2ISS2_SetInitialTransform)
    GetInitialTransformInput = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS2ISS2_GetInitialTransformInput)
    GetInitialTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS2ISS2_GetInitialTransform)
    GetForwardTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS2ISS2_GetForwardTransform)
    GetInverseTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS2ISS2_GetInverseTransform)
    SetGradientStep = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS2ISS2_SetGradientStep)
    GetGradientStep = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS2ISS2_GetGradientStep)
    SetFlowSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS2ISS2_SetFlowSigma)
    GetFlowSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS2ISS2_GetFlowSigma)
    SetTotalSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS2ISS2_SetTotalSigma)
    GetTotalSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS2ISS2_GetTotalSigma)
    SetSamplingRate = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS2ISS2_SetSamplingRate)
    GetSamplingRate = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS2ISS2_GetSamplingRate)
    SetNumberOfBins = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS2ISS2_SetNumberOfBins)
    GetNumberOfBins = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS2ISS2_GetNumberOfBins)
    SetRandomSeed = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS2ISS2_SetRandomSeed)
    GetRandomSeed = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS2ISS2_GetRandomSeed)
    SetSmoothingInPhysicalUnits = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS2ISS2_SetSmoothingInPhysicalUnits)
    GetSmoothingInPhysicalUnits = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS2ISS2_GetSmoothingInPhysicalUnits)
    GetSynIterations = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS2ISS2_GetSynIterations)
    GetAffineIterations = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS2ISS2_GetAffineIterations)
    GetShrinkFactors = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS2ISS2_GetShrinkFactors)
    GetSmoothingSigmas = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS2ISS2_GetSmoothingSigmas)
    GetOutput = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS2ISS2_GetOutput)
    __swig_destroy__ = _itkANTSRegistrationPython.delete_itkANTSRegistrationISS2ISS2
    cast = _swig_new_static_method(_itkANTSRegistrationPython.itkANTSRegistrationISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkANTSRegistrationISS2ISS2

        Create a new object of the class itkANTSRegistrationISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkANTSRegistrationISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkANTSRegistrationISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkANTSRegistrationISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkANTSRegistrationISS2ISS2 in _itkANTSRegistrationPython:
_itkANTSRegistrationPython.itkANTSRegistrationISS2ISS2_swigregister(itkANTSRegistrationISS2ISS2)
itkANTSRegistrationISS2ISS2___New_orig__ = _itkANTSRegistrationPython.itkANTSRegistrationISS2ISS2___New_orig__
itkANTSRegistrationISS2ISS2_cast = _itkANTSRegistrationPython.itkANTSRegistrationISS2ISS2_cast


def itkANTSRegistrationISS3ISS3_New():
    return itkANTSRegistrationISS3ISS3.New()

class itkANTSRegistrationISS3ISS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkANTSRegistrationISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkANTSRegistrationPython.itkANTSRegistrationISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS3ISS3_Clone)
    SetFixedImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS3ISS3_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS3ISS3_GetFixedImage)
    SetMovingImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS3ISS3_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS3ISS3_GetMovingImage)
    GetWarpedMovingImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS3ISS3_GetWarpedMovingImage)
    GetWarpedFixedImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS3ISS3_GetWarpedFixedImage)
    SetFixedMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS3ISS3_SetFixedMask)
    GetFixedMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS3ISS3_GetFixedMask)
    SetMovingMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS3ISS3_SetMovingMask)
    GetMovingMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS3ISS3_GetMovingMask)
    SetTypeOfTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS3ISS3_SetTypeOfTransform)
    GetTypeOfTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS3ISS3_GetTypeOfTransform)
    SetAffineMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS3ISS3_SetAffineMetric)
    GetAffineMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS3ISS3_GetAffineMetric)
    SetSynMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS3ISS3_SetSynMetric)
    GetSynMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS3ISS3_GetSynMetric)
    SetInitialTransformInput = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS3ISS3_SetInitialTransformInput)
    SetInitialTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS3ISS3_SetInitialTransform)
    GetInitialTransformInput = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS3ISS3_GetInitialTransformInput)
    GetInitialTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS3ISS3_GetInitialTransform)
    GetForwardTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS3ISS3_GetForwardTransform)
    GetInverseTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS3ISS3_GetInverseTransform)
    SetGradientStep = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS3ISS3_SetGradientStep)
    GetGradientStep = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS3ISS3_GetGradientStep)
    SetFlowSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS3ISS3_SetFlowSigma)
    GetFlowSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS3ISS3_GetFlowSigma)
    SetTotalSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS3ISS3_SetTotalSigma)
    GetTotalSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS3ISS3_GetTotalSigma)
    SetSamplingRate = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS3ISS3_SetSamplingRate)
    GetSamplingRate = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS3ISS3_GetSamplingRate)
    SetNumberOfBins = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS3ISS3_SetNumberOfBins)
    GetNumberOfBins = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS3ISS3_GetNumberOfBins)
    SetRandomSeed = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS3ISS3_SetRandomSeed)
    GetRandomSeed = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS3ISS3_GetRandomSeed)
    SetSmoothingInPhysicalUnits = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS3ISS3_SetSmoothingInPhysicalUnits)
    GetSmoothingInPhysicalUnits = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS3ISS3_GetSmoothingInPhysicalUnits)
    GetSynIterations = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS3ISS3_GetSynIterations)
    GetAffineIterations = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS3ISS3_GetAffineIterations)
    GetShrinkFactors = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS3ISS3_GetShrinkFactors)
    GetSmoothingSigmas = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS3ISS3_GetSmoothingSigmas)
    GetOutput = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS3ISS3_GetOutput)
    __swig_destroy__ = _itkANTSRegistrationPython.delete_itkANTSRegistrationISS3ISS3
    cast = _swig_new_static_method(_itkANTSRegistrationPython.itkANTSRegistrationISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkANTSRegistrationISS3ISS3

        Create a new object of the class itkANTSRegistrationISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkANTSRegistrationISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkANTSRegistrationISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkANTSRegistrationISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkANTSRegistrationISS3ISS3 in _itkANTSRegistrationPython:
_itkANTSRegistrationPython.itkANTSRegistrationISS3ISS3_swigregister(itkANTSRegistrationISS3ISS3)
itkANTSRegistrationISS3ISS3___New_orig__ = _itkANTSRegistrationPython.itkANTSRegistrationISS3ISS3___New_orig__
itkANTSRegistrationISS3ISS3_cast = _itkANTSRegistrationPython.itkANTSRegistrationISS3ISS3_cast


def itkANTSRegistrationISS4ISS4_New():
    return itkANTSRegistrationISS4ISS4.New()

class itkANTSRegistrationISS4ISS4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkANTSRegistrationISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkANTSRegistrationPython.itkANTSRegistrationISS4ISS4___New_orig__)
    Clone = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS4ISS4_Clone)
    SetFixedImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS4ISS4_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS4ISS4_GetFixedImage)
    SetMovingImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS4ISS4_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS4ISS4_GetMovingImage)
    GetWarpedMovingImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS4ISS4_GetWarpedMovingImage)
    GetWarpedFixedImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS4ISS4_GetWarpedFixedImage)
    SetFixedMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS4ISS4_SetFixedMask)
    GetFixedMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS4ISS4_GetFixedMask)
    SetMovingMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS4ISS4_SetMovingMask)
    GetMovingMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS4ISS4_GetMovingMask)
    SetTypeOfTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS4ISS4_SetTypeOfTransform)
    GetTypeOfTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS4ISS4_GetTypeOfTransform)
    SetAffineMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS4ISS4_SetAffineMetric)
    GetAffineMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS4ISS4_GetAffineMetric)
    SetSynMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS4ISS4_SetSynMetric)
    GetSynMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS4ISS4_GetSynMetric)
    SetInitialTransformInput = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS4ISS4_SetInitialTransformInput)
    SetInitialTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS4ISS4_SetInitialTransform)
    GetInitialTransformInput = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS4ISS4_GetInitialTransformInput)
    GetInitialTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS4ISS4_GetInitialTransform)
    GetForwardTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS4ISS4_GetForwardTransform)
    GetInverseTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS4ISS4_GetInverseTransform)
    SetGradientStep = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS4ISS4_SetGradientStep)
    GetGradientStep = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS4ISS4_GetGradientStep)
    SetFlowSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS4ISS4_SetFlowSigma)
    GetFlowSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS4ISS4_GetFlowSigma)
    SetTotalSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS4ISS4_SetTotalSigma)
    GetTotalSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS4ISS4_GetTotalSigma)
    SetSamplingRate = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS4ISS4_SetSamplingRate)
    GetSamplingRate = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS4ISS4_GetSamplingRate)
    SetNumberOfBins = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS4ISS4_SetNumberOfBins)
    GetNumberOfBins = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS4ISS4_GetNumberOfBins)
    SetRandomSeed = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS4ISS4_SetRandomSeed)
    GetRandomSeed = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS4ISS4_GetRandomSeed)
    SetSmoothingInPhysicalUnits = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS4ISS4_SetSmoothingInPhysicalUnits)
    GetSmoothingInPhysicalUnits = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS4ISS4_GetSmoothingInPhysicalUnits)
    GetSynIterations = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS4ISS4_GetSynIterations)
    GetAffineIterations = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS4ISS4_GetAffineIterations)
    GetShrinkFactors = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS4ISS4_GetShrinkFactors)
    GetSmoothingSigmas = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS4ISS4_GetSmoothingSigmas)
    GetOutput = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationISS4ISS4_GetOutput)
    __swig_destroy__ = _itkANTSRegistrationPython.delete_itkANTSRegistrationISS4ISS4
    cast = _swig_new_static_method(_itkANTSRegistrationPython.itkANTSRegistrationISS4ISS4_cast)

    def New(*args, **kargs):
        """New() -> itkANTSRegistrationISS4ISS4

        Create a new object of the class itkANTSRegistrationISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkANTSRegistrationISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkANTSRegistrationISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkANTSRegistrationISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkANTSRegistrationISS4ISS4 in _itkANTSRegistrationPython:
_itkANTSRegistrationPython.itkANTSRegistrationISS4ISS4_swigregister(itkANTSRegistrationISS4ISS4)
itkANTSRegistrationISS4ISS4___New_orig__ = _itkANTSRegistrationPython.itkANTSRegistrationISS4ISS4___New_orig__
itkANTSRegistrationISS4ISS4_cast = _itkANTSRegistrationPython.itkANTSRegistrationISS4ISS4_cast


def itkANTSRegistrationIUC2IUC2_New():
    return itkANTSRegistrationIUC2IUC2.New()

class itkANTSRegistrationIUC2IUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkANTSRegistrationIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC2IUC2_Clone)
    SetFixedImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC2IUC2_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC2IUC2_GetFixedImage)
    SetMovingImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC2IUC2_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC2IUC2_GetMovingImage)
    GetWarpedMovingImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC2IUC2_GetWarpedMovingImage)
    GetWarpedFixedImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC2IUC2_GetWarpedFixedImage)
    SetFixedMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC2IUC2_SetFixedMask)
    GetFixedMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC2IUC2_GetFixedMask)
    SetMovingMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC2IUC2_SetMovingMask)
    GetMovingMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC2IUC2_GetMovingMask)
    SetTypeOfTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC2IUC2_SetTypeOfTransform)
    GetTypeOfTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC2IUC2_GetTypeOfTransform)
    SetAffineMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC2IUC2_SetAffineMetric)
    GetAffineMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC2IUC2_GetAffineMetric)
    SetSynMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC2IUC2_SetSynMetric)
    GetSynMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC2IUC2_GetSynMetric)
    SetInitialTransformInput = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC2IUC2_SetInitialTransformInput)
    SetInitialTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC2IUC2_SetInitialTransform)
    GetInitialTransformInput = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC2IUC2_GetInitialTransformInput)
    GetInitialTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC2IUC2_GetInitialTransform)
    GetForwardTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC2IUC2_GetForwardTransform)
    GetInverseTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC2IUC2_GetInverseTransform)
    SetGradientStep = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC2IUC2_SetGradientStep)
    GetGradientStep = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC2IUC2_GetGradientStep)
    SetFlowSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC2IUC2_SetFlowSigma)
    GetFlowSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC2IUC2_GetFlowSigma)
    SetTotalSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC2IUC2_SetTotalSigma)
    GetTotalSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC2IUC2_GetTotalSigma)
    SetSamplingRate = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC2IUC2_SetSamplingRate)
    GetSamplingRate = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC2IUC2_GetSamplingRate)
    SetNumberOfBins = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC2IUC2_SetNumberOfBins)
    GetNumberOfBins = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC2IUC2_GetNumberOfBins)
    SetRandomSeed = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC2IUC2_SetRandomSeed)
    GetRandomSeed = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC2IUC2_GetRandomSeed)
    SetSmoothingInPhysicalUnits = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC2IUC2_SetSmoothingInPhysicalUnits)
    GetSmoothingInPhysicalUnits = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC2IUC2_GetSmoothingInPhysicalUnits)
    GetSynIterations = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC2IUC2_GetSynIterations)
    GetAffineIterations = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC2IUC2_GetAffineIterations)
    GetShrinkFactors = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC2IUC2_GetShrinkFactors)
    GetSmoothingSigmas = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC2IUC2_GetSmoothingSigmas)
    GetOutput = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC2IUC2_GetOutput)
    __swig_destroy__ = _itkANTSRegistrationPython.delete_itkANTSRegistrationIUC2IUC2
    cast = _swig_new_static_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkANTSRegistrationIUC2IUC2

        Create a new object of the class itkANTSRegistrationIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkANTSRegistrationIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkANTSRegistrationIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkANTSRegistrationIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkANTSRegistrationIUC2IUC2 in _itkANTSRegistrationPython:
_itkANTSRegistrationPython.itkANTSRegistrationIUC2IUC2_swigregister(itkANTSRegistrationIUC2IUC2)
itkANTSRegistrationIUC2IUC2___New_orig__ = _itkANTSRegistrationPython.itkANTSRegistrationIUC2IUC2___New_orig__
itkANTSRegistrationIUC2IUC2_cast = _itkANTSRegistrationPython.itkANTSRegistrationIUC2IUC2_cast


def itkANTSRegistrationIUC3IUC3_New():
    return itkANTSRegistrationIUC3IUC3.New()

class itkANTSRegistrationIUC3IUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkANTSRegistrationIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC3IUC3_Clone)
    SetFixedImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC3IUC3_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC3IUC3_GetFixedImage)
    SetMovingImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC3IUC3_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC3IUC3_GetMovingImage)
    GetWarpedMovingImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC3IUC3_GetWarpedMovingImage)
    GetWarpedFixedImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC3IUC3_GetWarpedFixedImage)
    SetFixedMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC3IUC3_SetFixedMask)
    GetFixedMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC3IUC3_GetFixedMask)
    SetMovingMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC3IUC3_SetMovingMask)
    GetMovingMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC3IUC3_GetMovingMask)
    SetTypeOfTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC3IUC3_SetTypeOfTransform)
    GetTypeOfTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC3IUC3_GetTypeOfTransform)
    SetAffineMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC3IUC3_SetAffineMetric)
    GetAffineMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC3IUC3_GetAffineMetric)
    SetSynMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC3IUC3_SetSynMetric)
    GetSynMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC3IUC3_GetSynMetric)
    SetInitialTransformInput = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC3IUC3_SetInitialTransformInput)
    SetInitialTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC3IUC3_SetInitialTransform)
    GetInitialTransformInput = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC3IUC3_GetInitialTransformInput)
    GetInitialTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC3IUC3_GetInitialTransform)
    GetForwardTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC3IUC3_GetForwardTransform)
    GetInverseTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC3IUC3_GetInverseTransform)
    SetGradientStep = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC3IUC3_SetGradientStep)
    GetGradientStep = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC3IUC3_GetGradientStep)
    SetFlowSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC3IUC3_SetFlowSigma)
    GetFlowSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC3IUC3_GetFlowSigma)
    SetTotalSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC3IUC3_SetTotalSigma)
    GetTotalSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC3IUC3_GetTotalSigma)
    SetSamplingRate = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC3IUC3_SetSamplingRate)
    GetSamplingRate = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC3IUC3_GetSamplingRate)
    SetNumberOfBins = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC3IUC3_SetNumberOfBins)
    GetNumberOfBins = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC3IUC3_GetNumberOfBins)
    SetRandomSeed = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC3IUC3_SetRandomSeed)
    GetRandomSeed = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC3IUC3_GetRandomSeed)
    SetSmoothingInPhysicalUnits = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC3IUC3_SetSmoothingInPhysicalUnits)
    GetSmoothingInPhysicalUnits = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC3IUC3_GetSmoothingInPhysicalUnits)
    GetSynIterations = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC3IUC3_GetSynIterations)
    GetAffineIterations = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC3IUC3_GetAffineIterations)
    GetShrinkFactors = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC3IUC3_GetShrinkFactors)
    GetSmoothingSigmas = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC3IUC3_GetSmoothingSigmas)
    GetOutput = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC3IUC3_GetOutput)
    __swig_destroy__ = _itkANTSRegistrationPython.delete_itkANTSRegistrationIUC3IUC3
    cast = _swig_new_static_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkANTSRegistrationIUC3IUC3

        Create a new object of the class itkANTSRegistrationIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkANTSRegistrationIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkANTSRegistrationIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkANTSRegistrationIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkANTSRegistrationIUC3IUC3 in _itkANTSRegistrationPython:
_itkANTSRegistrationPython.itkANTSRegistrationIUC3IUC3_swigregister(itkANTSRegistrationIUC3IUC3)
itkANTSRegistrationIUC3IUC3___New_orig__ = _itkANTSRegistrationPython.itkANTSRegistrationIUC3IUC3___New_orig__
itkANTSRegistrationIUC3IUC3_cast = _itkANTSRegistrationPython.itkANTSRegistrationIUC3IUC3_cast


def itkANTSRegistrationIUC4IUC4_New():
    return itkANTSRegistrationIUC4IUC4.New()

class itkANTSRegistrationIUC4IUC4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkANTSRegistrationIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC4IUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC4IUC4_Clone)
    SetFixedImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC4IUC4_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC4IUC4_GetFixedImage)
    SetMovingImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC4IUC4_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC4IUC4_GetMovingImage)
    GetWarpedMovingImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC4IUC4_GetWarpedMovingImage)
    GetWarpedFixedImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC4IUC4_GetWarpedFixedImage)
    SetFixedMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC4IUC4_SetFixedMask)
    GetFixedMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC4IUC4_GetFixedMask)
    SetMovingMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC4IUC4_SetMovingMask)
    GetMovingMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC4IUC4_GetMovingMask)
    SetTypeOfTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC4IUC4_SetTypeOfTransform)
    GetTypeOfTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC4IUC4_GetTypeOfTransform)
    SetAffineMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC4IUC4_SetAffineMetric)
    GetAffineMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC4IUC4_GetAffineMetric)
    SetSynMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC4IUC4_SetSynMetric)
    GetSynMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC4IUC4_GetSynMetric)
    SetInitialTransformInput = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC4IUC4_SetInitialTransformInput)
    SetInitialTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC4IUC4_SetInitialTransform)
    GetInitialTransformInput = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC4IUC4_GetInitialTransformInput)
    GetInitialTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC4IUC4_GetInitialTransform)
    GetForwardTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC4IUC4_GetForwardTransform)
    GetInverseTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC4IUC4_GetInverseTransform)
    SetGradientStep = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC4IUC4_SetGradientStep)
    GetGradientStep = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC4IUC4_GetGradientStep)
    SetFlowSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC4IUC4_SetFlowSigma)
    GetFlowSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC4IUC4_GetFlowSigma)
    SetTotalSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC4IUC4_SetTotalSigma)
    GetTotalSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC4IUC4_GetTotalSigma)
    SetSamplingRate = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC4IUC4_SetSamplingRate)
    GetSamplingRate = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC4IUC4_GetSamplingRate)
    SetNumberOfBins = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC4IUC4_SetNumberOfBins)
    GetNumberOfBins = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC4IUC4_GetNumberOfBins)
    SetRandomSeed = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC4IUC4_SetRandomSeed)
    GetRandomSeed = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC4IUC4_GetRandomSeed)
    SetSmoothingInPhysicalUnits = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC4IUC4_SetSmoothingInPhysicalUnits)
    GetSmoothingInPhysicalUnits = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC4IUC4_GetSmoothingInPhysicalUnits)
    GetSynIterations = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC4IUC4_GetSynIterations)
    GetAffineIterations = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC4IUC4_GetAffineIterations)
    GetShrinkFactors = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC4IUC4_GetShrinkFactors)
    GetSmoothingSigmas = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC4IUC4_GetSmoothingSigmas)
    GetOutput = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC4IUC4_GetOutput)
    __swig_destroy__ = _itkANTSRegistrationPython.delete_itkANTSRegistrationIUC4IUC4
    cast = _swig_new_static_method(_itkANTSRegistrationPython.itkANTSRegistrationIUC4IUC4_cast)

    def New(*args, **kargs):
        """New() -> itkANTSRegistrationIUC4IUC4

        Create a new object of the class itkANTSRegistrationIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkANTSRegistrationIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkANTSRegistrationIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkANTSRegistrationIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkANTSRegistrationIUC4IUC4 in _itkANTSRegistrationPython:
_itkANTSRegistrationPython.itkANTSRegistrationIUC4IUC4_swigregister(itkANTSRegistrationIUC4IUC4)
itkANTSRegistrationIUC4IUC4___New_orig__ = _itkANTSRegistrationPython.itkANTSRegistrationIUC4IUC4___New_orig__
itkANTSRegistrationIUC4IUC4_cast = _itkANTSRegistrationPython.itkANTSRegistrationIUC4IUC4_cast


def itkANTSRegistrationIUS2IUS2_New():
    return itkANTSRegistrationIUS2IUS2.New()

class itkANTSRegistrationIUS2IUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkANTSRegistrationIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS2IUS2_Clone)
    SetFixedImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS2IUS2_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS2IUS2_GetFixedImage)
    SetMovingImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS2IUS2_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS2IUS2_GetMovingImage)
    GetWarpedMovingImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS2IUS2_GetWarpedMovingImage)
    GetWarpedFixedImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS2IUS2_GetWarpedFixedImage)
    SetFixedMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS2IUS2_SetFixedMask)
    GetFixedMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS2IUS2_GetFixedMask)
    SetMovingMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS2IUS2_SetMovingMask)
    GetMovingMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS2IUS2_GetMovingMask)
    SetTypeOfTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS2IUS2_SetTypeOfTransform)
    GetTypeOfTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS2IUS2_GetTypeOfTransform)
    SetAffineMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS2IUS2_SetAffineMetric)
    GetAffineMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS2IUS2_GetAffineMetric)
    SetSynMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS2IUS2_SetSynMetric)
    GetSynMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS2IUS2_GetSynMetric)
    SetInitialTransformInput = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS2IUS2_SetInitialTransformInput)
    SetInitialTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS2IUS2_SetInitialTransform)
    GetInitialTransformInput = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS2IUS2_GetInitialTransformInput)
    GetInitialTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS2IUS2_GetInitialTransform)
    GetForwardTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS2IUS2_GetForwardTransform)
    GetInverseTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS2IUS2_GetInverseTransform)
    SetGradientStep = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS2IUS2_SetGradientStep)
    GetGradientStep = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS2IUS2_GetGradientStep)
    SetFlowSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS2IUS2_SetFlowSigma)
    GetFlowSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS2IUS2_GetFlowSigma)
    SetTotalSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS2IUS2_SetTotalSigma)
    GetTotalSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS2IUS2_GetTotalSigma)
    SetSamplingRate = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS2IUS2_SetSamplingRate)
    GetSamplingRate = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS2IUS2_GetSamplingRate)
    SetNumberOfBins = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS2IUS2_SetNumberOfBins)
    GetNumberOfBins = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS2IUS2_GetNumberOfBins)
    SetRandomSeed = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS2IUS2_SetRandomSeed)
    GetRandomSeed = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS2IUS2_GetRandomSeed)
    SetSmoothingInPhysicalUnits = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS2IUS2_SetSmoothingInPhysicalUnits)
    GetSmoothingInPhysicalUnits = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS2IUS2_GetSmoothingInPhysicalUnits)
    GetSynIterations = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS2IUS2_GetSynIterations)
    GetAffineIterations = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS2IUS2_GetAffineIterations)
    GetShrinkFactors = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS2IUS2_GetShrinkFactors)
    GetSmoothingSigmas = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS2IUS2_GetSmoothingSigmas)
    GetOutput = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS2IUS2_GetOutput)
    __swig_destroy__ = _itkANTSRegistrationPython.delete_itkANTSRegistrationIUS2IUS2
    cast = _swig_new_static_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkANTSRegistrationIUS2IUS2

        Create a new object of the class itkANTSRegistrationIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkANTSRegistrationIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkANTSRegistrationIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkANTSRegistrationIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkANTSRegistrationIUS2IUS2 in _itkANTSRegistrationPython:
_itkANTSRegistrationPython.itkANTSRegistrationIUS2IUS2_swigregister(itkANTSRegistrationIUS2IUS2)
itkANTSRegistrationIUS2IUS2___New_orig__ = _itkANTSRegistrationPython.itkANTSRegistrationIUS2IUS2___New_orig__
itkANTSRegistrationIUS2IUS2_cast = _itkANTSRegistrationPython.itkANTSRegistrationIUS2IUS2_cast


def itkANTSRegistrationIUS3IUS3_New():
    return itkANTSRegistrationIUS3IUS3.New()

class itkANTSRegistrationIUS3IUS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkANTSRegistrationIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS3IUS3_Clone)
    SetFixedImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS3IUS3_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS3IUS3_GetFixedImage)
    SetMovingImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS3IUS3_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS3IUS3_GetMovingImage)
    GetWarpedMovingImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS3IUS3_GetWarpedMovingImage)
    GetWarpedFixedImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS3IUS3_GetWarpedFixedImage)
    SetFixedMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS3IUS3_SetFixedMask)
    GetFixedMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS3IUS3_GetFixedMask)
    SetMovingMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS3IUS3_SetMovingMask)
    GetMovingMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS3IUS3_GetMovingMask)
    SetTypeOfTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS3IUS3_SetTypeOfTransform)
    GetTypeOfTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS3IUS3_GetTypeOfTransform)
    SetAffineMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS3IUS3_SetAffineMetric)
    GetAffineMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS3IUS3_GetAffineMetric)
    SetSynMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS3IUS3_SetSynMetric)
    GetSynMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS3IUS3_GetSynMetric)
    SetInitialTransformInput = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS3IUS3_SetInitialTransformInput)
    SetInitialTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS3IUS3_SetInitialTransform)
    GetInitialTransformInput = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS3IUS3_GetInitialTransformInput)
    GetInitialTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS3IUS3_GetInitialTransform)
    GetForwardTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS3IUS3_GetForwardTransform)
    GetInverseTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS3IUS3_GetInverseTransform)
    SetGradientStep = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS3IUS3_SetGradientStep)
    GetGradientStep = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS3IUS3_GetGradientStep)
    SetFlowSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS3IUS3_SetFlowSigma)
    GetFlowSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS3IUS3_GetFlowSigma)
    SetTotalSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS3IUS3_SetTotalSigma)
    GetTotalSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS3IUS3_GetTotalSigma)
    SetSamplingRate = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS3IUS3_SetSamplingRate)
    GetSamplingRate = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS3IUS3_GetSamplingRate)
    SetNumberOfBins = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS3IUS3_SetNumberOfBins)
    GetNumberOfBins = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS3IUS3_GetNumberOfBins)
    SetRandomSeed = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS3IUS3_SetRandomSeed)
    GetRandomSeed = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS3IUS3_GetRandomSeed)
    SetSmoothingInPhysicalUnits = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS3IUS3_SetSmoothingInPhysicalUnits)
    GetSmoothingInPhysicalUnits = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS3IUS3_GetSmoothingInPhysicalUnits)
    GetSynIterations = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS3IUS3_GetSynIterations)
    GetAffineIterations = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS3IUS3_GetAffineIterations)
    GetShrinkFactors = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS3IUS3_GetShrinkFactors)
    GetSmoothingSigmas = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS3IUS3_GetSmoothingSigmas)
    GetOutput = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS3IUS3_GetOutput)
    __swig_destroy__ = _itkANTSRegistrationPython.delete_itkANTSRegistrationIUS3IUS3
    cast = _swig_new_static_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkANTSRegistrationIUS3IUS3

        Create a new object of the class itkANTSRegistrationIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkANTSRegistrationIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkANTSRegistrationIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkANTSRegistrationIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkANTSRegistrationIUS3IUS3 in _itkANTSRegistrationPython:
_itkANTSRegistrationPython.itkANTSRegistrationIUS3IUS3_swigregister(itkANTSRegistrationIUS3IUS3)
itkANTSRegistrationIUS3IUS3___New_orig__ = _itkANTSRegistrationPython.itkANTSRegistrationIUS3IUS3___New_orig__
itkANTSRegistrationIUS3IUS3_cast = _itkANTSRegistrationPython.itkANTSRegistrationIUS3IUS3_cast


def itkANTSRegistrationIUS4IUS4_New():
    return itkANTSRegistrationIUS4IUS4.New()

class itkANTSRegistrationIUS4IUS4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkANTSRegistrationIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS4IUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS4IUS4_Clone)
    SetFixedImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS4IUS4_SetFixedImage)
    GetFixedImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS4IUS4_GetFixedImage)
    SetMovingImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS4IUS4_SetMovingImage)
    GetMovingImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS4IUS4_GetMovingImage)
    GetWarpedMovingImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS4IUS4_GetWarpedMovingImage)
    GetWarpedFixedImage = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS4IUS4_GetWarpedFixedImage)
    SetFixedMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS4IUS4_SetFixedMask)
    GetFixedMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS4IUS4_GetFixedMask)
    SetMovingMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS4IUS4_SetMovingMask)
    GetMovingMask = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS4IUS4_GetMovingMask)
    SetTypeOfTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS4IUS4_SetTypeOfTransform)
    GetTypeOfTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS4IUS4_GetTypeOfTransform)
    SetAffineMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS4IUS4_SetAffineMetric)
    GetAffineMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS4IUS4_GetAffineMetric)
    SetSynMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS4IUS4_SetSynMetric)
    GetSynMetric = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS4IUS4_GetSynMetric)
    SetInitialTransformInput = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS4IUS4_SetInitialTransformInput)
    SetInitialTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS4IUS4_SetInitialTransform)
    GetInitialTransformInput = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS4IUS4_GetInitialTransformInput)
    GetInitialTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS4IUS4_GetInitialTransform)
    GetForwardTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS4IUS4_GetForwardTransform)
    GetInverseTransform = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS4IUS4_GetInverseTransform)
    SetGradientStep = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS4IUS4_SetGradientStep)
    GetGradientStep = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS4IUS4_GetGradientStep)
    SetFlowSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS4IUS4_SetFlowSigma)
    GetFlowSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS4IUS4_GetFlowSigma)
    SetTotalSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS4IUS4_SetTotalSigma)
    GetTotalSigma = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS4IUS4_GetTotalSigma)
    SetSamplingRate = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS4IUS4_SetSamplingRate)
    GetSamplingRate = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS4IUS4_GetSamplingRate)
    SetNumberOfBins = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS4IUS4_SetNumberOfBins)
    GetNumberOfBins = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS4IUS4_GetNumberOfBins)
    SetRandomSeed = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS4IUS4_SetRandomSeed)
    GetRandomSeed = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS4IUS4_GetRandomSeed)
    SetSmoothingInPhysicalUnits = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS4IUS4_SetSmoothingInPhysicalUnits)
    GetSmoothingInPhysicalUnits = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS4IUS4_GetSmoothingInPhysicalUnits)
    GetSynIterations = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS4IUS4_GetSynIterations)
    GetAffineIterations = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS4IUS4_GetAffineIterations)
    GetShrinkFactors = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS4IUS4_GetShrinkFactors)
    GetSmoothingSigmas = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS4IUS4_GetSmoothingSigmas)
    GetOutput = _swig_new_instance_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS4IUS4_GetOutput)
    __swig_destroy__ = _itkANTSRegistrationPython.delete_itkANTSRegistrationIUS4IUS4
    cast = _swig_new_static_method(_itkANTSRegistrationPython.itkANTSRegistrationIUS4IUS4_cast)

    def New(*args, **kargs):
        """New() -> itkANTSRegistrationIUS4IUS4

        Create a new object of the class itkANTSRegistrationIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkANTSRegistrationIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkANTSRegistrationIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkANTSRegistrationIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkANTSRegistrationIUS4IUS4 in _itkANTSRegistrationPython:
_itkANTSRegistrationPython.itkANTSRegistrationIUS4IUS4_swigregister(itkANTSRegistrationIUS4IUS4)
itkANTSRegistrationIUS4IUS4___New_orig__ = _itkANTSRegistrationPython.itkANTSRegistrationIUS4IUS4___New_orig__
itkANTSRegistrationIUS4IUS4_cast = _itkANTSRegistrationPython.itkANTSRegistrationIUS4IUS4_cast


from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def ants_registration(*args,  fixed_image: itkt.Image=..., moving_image: itkt.Image=..., fixed_mask: itkt.Image=..., moving_mask: itkt.Image=..., type_of_transform: str=..., affine_metric: str=..., syn_metric: str=..., initial_transform_input=..., initial_transform: itkt.Transform=..., gradient_step: float=..., flow_sigma: float=..., total_sigma: float=..., sampling_rate: float=..., number_of_bins: int=..., random_seed: int=..., smoothing_in_physical_units: bool=...,**kwargs):
    """Functional interface for ANTSRegistration"""
    import itk

    kwarg_typehints = { 'fixed_image':fixed_image,'moving_image':moving_image,'fixed_mask':fixed_mask,'moving_mask':moving_mask,'type_of_transform':type_of_transform,'affine_metric':affine_metric,'syn_metric':syn_metric,'initial_transform_input':initial_transform_input,'initial_transform':initial_transform,'gradient_step':gradient_step,'flow_sigma':flow_sigma,'total_sigma':total_sigma,'sampling_rate':sampling_rate,'number_of_bins':number_of_bins,'random_seed':random_seed,'smoothing_in_physical_units':smoothing_in_physical_units }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)

    instance = itk.ANTSRegistration.New(*args, **kwargs)
    return instance.__internal_call__()

def ants_registration_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ANTsWasm.ANTSRegistration
    ants_registration.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    ants_registration.__doc__ = filter_object.__doc__




