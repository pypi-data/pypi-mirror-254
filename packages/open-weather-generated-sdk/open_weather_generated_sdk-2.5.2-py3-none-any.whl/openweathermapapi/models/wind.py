# -*- coding: utf-8 -*-

"""
openweathermapapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from openweathermapapi.api_helper import APIHelper


class Wind(object):

    """Implementation of the 'Wind' model.

    TODO: type model description here.

    Attributes:
        speed (float): Wind speed. Unit Default: meter/sec, Metric: meter/sec,
            Imperial: miles/hour.
        deg (int): Wind direction, degrees (meteorological)

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "speed": 'speed',
        "deg": 'deg'
    }

    _optionals = [
        'speed',
        'deg',
    ]

    def __init__(self,
                 speed=APIHelper.SKIP,
                 deg=APIHelper.SKIP):
        """Constructor for the Wind class"""

        # Initialize members of the class
        if speed is not APIHelper.SKIP:
            self.speed = speed 
        if deg is not APIHelper.SKIP:
            self.deg = deg 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        speed = dictionary.get("speed") if dictionary.get("speed") else APIHelper.SKIP
        deg = dictionary.get("deg") if dictionary.get("deg") else APIHelper.SKIP
        # Return an object of this model
        return cls(speed,
                   deg)
