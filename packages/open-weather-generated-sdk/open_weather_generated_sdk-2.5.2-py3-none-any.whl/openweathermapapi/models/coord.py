# -*- coding: utf-8 -*-

"""
openweathermapapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from openweathermapapi.api_helper import APIHelper


class Coord(object):

    """Implementation of the 'Coord' model.

    TODO: type model description here.

    Attributes:
        lon (float): City geo location, longitude
        lat (float): City geo location, latitude

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "lon": 'lon',
        "lat": 'lat'
    }

    _optionals = [
        'lon',
        'lat',
    ]

    def __init__(self,
                 lon=APIHelper.SKIP,
                 lat=APIHelper.SKIP):
        """Constructor for the Coord class"""

        # Initialize members of the class
        if lon is not APIHelper.SKIP:
            self.lon = lon 
        if lat is not APIHelper.SKIP:
            self.lat = lat 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        lon = dictionary.get("lon") if dictionary.get("lon") else APIHelper.SKIP
        lat = dictionary.get("lat") if dictionary.get("lat") else APIHelper.SKIP
        # Return an object of this model
        return cls(lon,
                   lat)
