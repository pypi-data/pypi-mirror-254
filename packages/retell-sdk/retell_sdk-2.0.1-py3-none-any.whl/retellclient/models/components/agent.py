"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from retellclient import utils
from typing import Dict, List, Optional, Literal, Union

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Agent:
    agent_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('agent_id') }})
    r"""Unique id of agent."""
    llm_websocket_url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('llm_websocket_url') }})
    r"""The URL we will establish LLM websocket for getting response, usually your server."""
    voice_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('voice_id') }})
    r"""Unique voice id used for the agent. """
    last_modification_timestamp: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('last_modification_timestamp') }})
    r"""Last modified timestamp of the agent. """
    agent_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('agent_name'), 'exclude': lambda f: f is None }})
    r"""Name of agent."""

