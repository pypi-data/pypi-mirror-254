[metadata]
name = monai-generative
author = MONAI Consortium
author_email = monai.contact@gmail.com
url = https://monai.io/
description = MONAI Generative Models makes it easy to train, evaluate, and deploy generative models and related applications
long_description = file:README.md
long_description_content_type = text/markdown; charset=UTF-8
platforms = OS Independent
license = Apache License 2.0
license_files = 
	LICENSE
project_urls = 
	Documentation=https://docs.monai.io/
	Bug Tracker=https://github.com/Project-MONAI/GenerativeModels/issues
	Source Code=https://github.com/Project-MONAI/GenerativeModels
classifiers = 
	Intended Audience :: Developers
	Intended Audience :: Education
	Intended Audience :: Science/Research
	Intended Audience :: Healthcare Industry
	Programming Language :: C++
	Programming Language :: Python :: 3
	Programming Language :: Python :: 3.8
	Programming Language :: Python :: 3.9
	Programming Language :: Python :: 3.10
	Topic :: Scientific/Engineering
	Topic :: Scientific/Engineering :: Artificial Intelligence
	Topic :: Scientific/Engineering :: Medical Science Apps.
	Topic :: Scientific/Engineering :: Information Analysis
	Topic :: Software Development
	Topic :: Software Development :: Libraries
	Typing :: Typed

[options]
python_requires = >= 3.8
setup_requires = 
	torch
	ninja
install_requires = 
	monai>=1.2.0rc1
	torch>=1.9
	numpy>=1.20

[flake8]
select = B,C,E,F,N,P,T4,W,B9
max_line_length = 120
ignore = 
	E203
	E501
	E741
	W503
	W504
	C408
	N812
	B023
	B905
	B028
	B907
	B908
per_file_ignores = __init__.py: F401, __main__.py: F401
exclude = *.pyi,.git,.eggs,generative/_version.py,versioneer.py,venv,.venv,_version.py,tutorials/

[isort]
known_first_party = generative
profile = black
line_length = 120
skip = .git, .eggs, venv, .venv, versioneer.py, _version.py, conf.py, monai/__init__.py, tutorials/, generative/networks/layers/
skip_glob = *.pyi
add_imports = from __future__ import annotations
append_only = true

[mypy]
ignore_missing_imports = True
no_implicit_optional = True
warn_redundant_casts = True
warn_unused_ignores = False
warn_return_any = True
strict_equality = True
show_column_numbers = True
show_error_codes = True
pretty = False
warn_unused_configs = True
strict_concatenate = True
exclude = venv/

[coverage:run]
concurrency = multiprocessing
source = .
data_file = .coverage/.coverage
omit = setup.py

[coverage:report]
exclude_lines = 
	pragma: no cover
	if TYPE_CHECKING:
	raise NotImplementedError
	if __name__ == .__main__.:
show_missing = True
skip_covered = True

[coverage:xml]
output = coverage.xml

[egg_info]
tag_build = 
tag_date = 0

