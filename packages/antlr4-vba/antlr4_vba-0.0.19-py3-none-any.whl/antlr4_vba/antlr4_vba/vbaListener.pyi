from antlr4 import *
from vbaParser import vbaParser as vbaParser

class vbaListener(ParseTreeListener):
    def enterStartRule(self, ctx: vbaParser.StartRuleContext): ...
    def exitStartRule(self, ctx: vbaParser.StartRuleContext): ...
    def enterModule(self, ctx: vbaParser.ModuleContext): ...
    def exitModule(self, ctx: vbaParser.ModuleContext): ...
    def enterModuleHeader(self, ctx: vbaParser.ModuleHeaderContext): ...
    def exitModuleHeader(self, ctx: vbaParser.ModuleHeaderContext): ...
    def enterModuleConfig(self, ctx: vbaParser.ModuleConfigContext): ...
    def exitModuleConfig(self, ctx: vbaParser.ModuleConfigContext): ...
    def enterModuleConfigElement(self, ctx: vbaParser.ModuleConfigElementContext): ...
    def exitModuleConfigElement(self, ctx: vbaParser.ModuleConfigElementContext): ...
    def enterModuleAttributes(self, ctx: vbaParser.ModuleAttributesContext): ...
    def exitModuleAttributes(self, ctx: vbaParser.ModuleAttributesContext): ...
    def enterModuleDeclarations(self, ctx: vbaParser.ModuleDeclarationsContext): ...
    def exitModuleDeclarations(self, ctx: vbaParser.ModuleDeclarationsContext): ...
    def enterOptionBaseStmt(self, ctx: vbaParser.OptionBaseStmtContext): ...
    def exitOptionBaseStmt(self, ctx: vbaParser.OptionBaseStmtContext): ...
    def enterOptionCompareStmt(self, ctx: vbaParser.OptionCompareStmtContext): ...
    def exitOptionCompareStmt(self, ctx: vbaParser.OptionCompareStmtContext): ...
    def enterOptionExplicitStmt(self, ctx: vbaParser.OptionExplicitStmtContext): ...
    def exitOptionExplicitStmt(self, ctx: vbaParser.OptionExplicitStmtContext): ...
    def enterOptionPrivateModuleStmt(self, ctx: vbaParser.OptionPrivateModuleStmtContext): ...
    def exitOptionPrivateModuleStmt(self, ctx: vbaParser.OptionPrivateModuleStmtContext): ...
    def enterModuleDeclarationsElement(self, ctx: vbaParser.ModuleDeclarationsElementContext): ...
    def exitModuleDeclarationsElement(self, ctx: vbaParser.ModuleDeclarationsElementContext): ...
    def enterMacroStmt(self, ctx: vbaParser.MacroStmtContext): ...
    def exitMacroStmt(self, ctx: vbaParser.MacroStmtContext): ...
    def enterModuleBody(self, ctx: vbaParser.ModuleBodyContext): ...
    def exitModuleBody(self, ctx: vbaParser.ModuleBodyContext): ...
    def enterModuleBodyElement(self, ctx: vbaParser.ModuleBodyElementContext): ...
    def exitModuleBodyElement(self, ctx: vbaParser.ModuleBodyElementContext): ...
    def enterAttributeStmt(self, ctx: vbaParser.AttributeStmtContext): ...
    def exitAttributeStmt(self, ctx: vbaParser.AttributeStmtContext): ...
    def enterBlock(self, ctx: vbaParser.BlockContext): ...
    def exitBlock(self, ctx: vbaParser.BlockContext): ...
    def enterBlockStmt(self, ctx: vbaParser.BlockStmtContext): ...
    def exitBlockStmt(self, ctx: vbaParser.BlockStmtContext): ...
    def enterAppactivateStmt(self, ctx: vbaParser.AppactivateStmtContext): ...
    def exitAppactivateStmt(self, ctx: vbaParser.AppactivateStmtContext): ...
    def enterBeepStmt(self, ctx: vbaParser.BeepStmtContext): ...
    def exitBeepStmt(self, ctx: vbaParser.BeepStmtContext): ...
    def enterChdirStmt(self, ctx: vbaParser.ChdirStmtContext): ...
    def exitChdirStmt(self, ctx: vbaParser.ChdirStmtContext): ...
    def enterChdriveStmt(self, ctx: vbaParser.ChdriveStmtContext): ...
    def exitChdriveStmt(self, ctx: vbaParser.ChdriveStmtContext): ...
    def enterCloseStmt(self, ctx: vbaParser.CloseStmtContext): ...
    def exitCloseStmt(self, ctx: vbaParser.CloseStmtContext): ...
    def enterConstStmt(self, ctx: vbaParser.ConstStmtContext): ...
    def exitConstStmt(self, ctx: vbaParser.ConstStmtContext): ...
    def enterConstSubStmt(self, ctx: vbaParser.ConstSubStmtContext): ...
    def exitConstSubStmt(self, ctx: vbaParser.ConstSubStmtContext): ...
    def enterDateStmt(self, ctx: vbaParser.DateStmtContext): ...
    def exitDateStmt(self, ctx: vbaParser.DateStmtContext): ...
    def enterDeclareStmt(self, ctx: vbaParser.DeclareStmtContext): ...
    def exitDeclareStmt(self, ctx: vbaParser.DeclareStmtContext): ...
    def enterDeftypeStmt(self, ctx: vbaParser.DeftypeStmtContext): ...
    def exitDeftypeStmt(self, ctx: vbaParser.DeftypeStmtContext): ...
    def enterDeleteSettingStmt(self, ctx: vbaParser.DeleteSettingStmtContext): ...
    def exitDeleteSettingStmt(self, ctx: vbaParser.DeleteSettingStmtContext): ...
    def enterDoLoopStmt(self, ctx: vbaParser.DoLoopStmtContext): ...
    def exitDoLoopStmt(self, ctx: vbaParser.DoLoopStmtContext): ...
    def enterEndStmt(self, ctx: vbaParser.EndStmtContext): ...
    def exitEndStmt(self, ctx: vbaParser.EndStmtContext): ...
    def enterEnumerationStmt(self, ctx: vbaParser.EnumerationStmtContext): ...
    def exitEnumerationStmt(self, ctx: vbaParser.EnumerationStmtContext): ...
    def enterEnumerationStmt_Constant(self, ctx: vbaParser.EnumerationStmt_ConstantContext): ...
    def exitEnumerationStmt_Constant(self, ctx: vbaParser.EnumerationStmt_ConstantContext): ...
    def enterEraseStmt(self, ctx: vbaParser.EraseStmtContext): ...
    def exitEraseStmt(self, ctx: vbaParser.EraseStmtContext): ...
    def enterErrorStmt(self, ctx: vbaParser.ErrorStmtContext): ...
    def exitErrorStmt(self, ctx: vbaParser.ErrorStmtContext): ...
    def enterEventStmt(self, ctx: vbaParser.EventStmtContext): ...
    def exitEventStmt(self, ctx: vbaParser.EventStmtContext): ...
    def enterExitStmt(self, ctx: vbaParser.ExitStmtContext): ...
    def exitExitStmt(self, ctx: vbaParser.ExitStmtContext): ...
    def enterFilecopyStmt(self, ctx: vbaParser.FilecopyStmtContext): ...
    def exitFilecopyStmt(self, ctx: vbaParser.FilecopyStmtContext): ...
    def enterForEachStmt(self, ctx: vbaParser.ForEachStmtContext): ...
    def exitForEachStmt(self, ctx: vbaParser.ForEachStmtContext): ...
    def enterForNextStmt(self, ctx: vbaParser.ForNextStmtContext): ...
    def exitForNextStmt(self, ctx: vbaParser.ForNextStmtContext): ...
    def enterFunctionStmt(self, ctx: vbaParser.FunctionStmtContext): ...
    def exitFunctionStmt(self, ctx: vbaParser.FunctionStmtContext): ...
    def enterGetStmt(self, ctx: vbaParser.GetStmtContext): ...
    def exitGetStmt(self, ctx: vbaParser.GetStmtContext): ...
    def enterGoSubStmt(self, ctx: vbaParser.GoSubStmtContext): ...
    def exitGoSubStmt(self, ctx: vbaParser.GoSubStmtContext): ...
    def enterGoToStmt(self, ctx: vbaParser.GoToStmtContext): ...
    def exitGoToStmt(self, ctx: vbaParser.GoToStmtContext): ...
    def enterInlineIfThenElse(self, ctx: vbaParser.InlineIfThenElseContext): ...
    def exitInlineIfThenElse(self, ctx: vbaParser.InlineIfThenElseContext): ...
    def enterBlockIfThenElse(self, ctx: vbaParser.BlockIfThenElseContext): ...
    def exitBlockIfThenElse(self, ctx: vbaParser.BlockIfThenElseContext): ...
    def enterIfBlockStmt(self, ctx: vbaParser.IfBlockStmtContext): ...
    def exitIfBlockStmt(self, ctx: vbaParser.IfBlockStmtContext): ...
    def enterIfConditionStmt(self, ctx: vbaParser.IfConditionStmtContext): ...
    def exitIfConditionStmt(self, ctx: vbaParser.IfConditionStmtContext): ...
    def enterIfElseIfBlockStmt(self, ctx: vbaParser.IfElseIfBlockStmtContext): ...
    def exitIfElseIfBlockStmt(self, ctx: vbaParser.IfElseIfBlockStmtContext): ...
    def enterIfElseBlockStmt(self, ctx: vbaParser.IfElseBlockStmtContext): ...
    def exitIfElseBlockStmt(self, ctx: vbaParser.IfElseBlockStmtContext): ...
    def enterImplementsStmt(self, ctx: vbaParser.ImplementsStmtContext): ...
    def exitImplementsStmt(self, ctx: vbaParser.ImplementsStmtContext): ...
    def enterInputStmt(self, ctx: vbaParser.InputStmtContext): ...
    def exitInputStmt(self, ctx: vbaParser.InputStmtContext): ...
    def enterKillStmt(self, ctx: vbaParser.KillStmtContext): ...
    def exitKillStmt(self, ctx: vbaParser.KillStmtContext): ...
    def enterLetStmt(self, ctx: vbaParser.LetStmtContext): ...
    def exitLetStmt(self, ctx: vbaParser.LetStmtContext): ...
    def enterLineInputStmt(self, ctx: vbaParser.LineInputStmtContext): ...
    def exitLineInputStmt(self, ctx: vbaParser.LineInputStmtContext): ...
    def enterLineNumber(self, ctx: vbaParser.LineNumberContext): ...
    def exitLineNumber(self, ctx: vbaParser.LineNumberContext): ...
    def enterLoadStmt(self, ctx: vbaParser.LoadStmtContext): ...
    def exitLoadStmt(self, ctx: vbaParser.LoadStmtContext): ...
    def enterLockStmt(self, ctx: vbaParser.LockStmtContext): ...
    def exitLockStmt(self, ctx: vbaParser.LockStmtContext): ...
    def enterLsetStmt(self, ctx: vbaParser.LsetStmtContext): ...
    def exitLsetStmt(self, ctx: vbaParser.LsetStmtContext): ...
    def enterMacroConstStmt(self, ctx: vbaParser.MacroConstStmtContext): ...
    def exitMacroConstStmt(self, ctx: vbaParser.MacroConstStmtContext): ...
    def enterMacroIfThenElseStmt(self, ctx: vbaParser.MacroIfThenElseStmtContext): ...
    def exitMacroIfThenElseStmt(self, ctx: vbaParser.MacroIfThenElseStmtContext): ...
    def enterMacroIfBlockStmt(self, ctx: vbaParser.MacroIfBlockStmtContext): ...
    def exitMacroIfBlockStmt(self, ctx: vbaParser.MacroIfBlockStmtContext): ...
    def enterMacroElseIfBlockStmt(self, ctx: vbaParser.MacroElseIfBlockStmtContext): ...
    def exitMacroElseIfBlockStmt(self, ctx: vbaParser.MacroElseIfBlockStmtContext): ...
    def enterMacroElseBlockStmt(self, ctx: vbaParser.MacroElseBlockStmtContext): ...
    def exitMacroElseBlockStmt(self, ctx: vbaParser.MacroElseBlockStmtContext): ...
    def enterMidStmt(self, ctx: vbaParser.MidStmtContext): ...
    def exitMidStmt(self, ctx: vbaParser.MidStmtContext): ...
    def enterMkdirStmt(self, ctx: vbaParser.MkdirStmtContext): ...
    def exitMkdirStmt(self, ctx: vbaParser.MkdirStmtContext): ...
    def enterNameStmt(self, ctx: vbaParser.NameStmtContext): ...
    def exitNameStmt(self, ctx: vbaParser.NameStmtContext): ...
    def enterOnErrorStmt(self, ctx: vbaParser.OnErrorStmtContext): ...
    def exitOnErrorStmt(self, ctx: vbaParser.OnErrorStmtContext): ...
    def enterOnGoToStmt(self, ctx: vbaParser.OnGoToStmtContext): ...
    def exitOnGoToStmt(self, ctx: vbaParser.OnGoToStmtContext): ...
    def enterOnGoSubStmt(self, ctx: vbaParser.OnGoSubStmtContext): ...
    def exitOnGoSubStmt(self, ctx: vbaParser.OnGoSubStmtContext): ...
    def enterOpenStmt(self, ctx: vbaParser.OpenStmtContext): ...
    def exitOpenStmt(self, ctx: vbaParser.OpenStmtContext): ...
    def enterOutputList(self, ctx: vbaParser.OutputListContext): ...
    def exitOutputList(self, ctx: vbaParser.OutputListContext): ...
    def enterOutputList_Expression(self, ctx: vbaParser.OutputList_ExpressionContext): ...
    def exitOutputList_Expression(self, ctx: vbaParser.OutputList_ExpressionContext): ...
    def enterPrintStmt(self, ctx: vbaParser.PrintStmtContext): ...
    def exitPrintStmt(self, ctx: vbaParser.PrintStmtContext): ...
    def enterPropertyGetStmt(self, ctx: vbaParser.PropertyGetStmtContext): ...
    def exitPropertyGetStmt(self, ctx: vbaParser.PropertyGetStmtContext): ...
    def enterPropertySetStmt(self, ctx: vbaParser.PropertySetStmtContext): ...
    def exitPropertySetStmt(self, ctx: vbaParser.PropertySetStmtContext): ...
    def enterPropertyLetStmt(self, ctx: vbaParser.PropertyLetStmtContext): ...
    def exitPropertyLetStmt(self, ctx: vbaParser.PropertyLetStmtContext): ...
    def enterPutStmt(self, ctx: vbaParser.PutStmtContext): ...
    def exitPutStmt(self, ctx: vbaParser.PutStmtContext): ...
    def enterRaiseEventStmt(self, ctx: vbaParser.RaiseEventStmtContext): ...
    def exitRaiseEventStmt(self, ctx: vbaParser.RaiseEventStmtContext): ...
    def enterRandomizeStmt(self, ctx: vbaParser.RandomizeStmtContext): ...
    def exitRandomizeStmt(self, ctx: vbaParser.RandomizeStmtContext): ...
    def enterRedimStmt(self, ctx: vbaParser.RedimStmtContext): ...
    def exitRedimStmt(self, ctx: vbaParser.RedimStmtContext): ...
    def enterRedimSubStmt(self, ctx: vbaParser.RedimSubStmtContext): ...
    def exitRedimSubStmt(self, ctx: vbaParser.RedimSubStmtContext): ...
    def enterResetStmt(self, ctx: vbaParser.ResetStmtContext): ...
    def exitResetStmt(self, ctx: vbaParser.ResetStmtContext): ...
    def enterResumeStmt(self, ctx: vbaParser.ResumeStmtContext): ...
    def exitResumeStmt(self, ctx: vbaParser.ResumeStmtContext): ...
    def enterReturnStmt(self, ctx: vbaParser.ReturnStmtContext): ...
    def exitReturnStmt(self, ctx: vbaParser.ReturnStmtContext): ...
    def enterRmdirStmt(self, ctx: vbaParser.RmdirStmtContext): ...
    def exitRmdirStmt(self, ctx: vbaParser.RmdirStmtContext): ...
    def enterRsetStmt(self, ctx: vbaParser.RsetStmtContext): ...
    def exitRsetStmt(self, ctx: vbaParser.RsetStmtContext): ...
    def enterSavepictureStmt(self, ctx: vbaParser.SavepictureStmtContext): ...
    def exitSavepictureStmt(self, ctx: vbaParser.SavepictureStmtContext): ...
    def enterSaveSettingStmt(self, ctx: vbaParser.SaveSettingStmtContext): ...
    def exitSaveSettingStmt(self, ctx: vbaParser.SaveSettingStmtContext): ...
    def enterSeekStmt(self, ctx: vbaParser.SeekStmtContext): ...
    def exitSeekStmt(self, ctx: vbaParser.SeekStmtContext): ...
    def enterSelectCaseStmt(self, ctx: vbaParser.SelectCaseStmtContext): ...
    def exitSelectCaseStmt(self, ctx: vbaParser.SelectCaseStmtContext): ...
    def enterCaseCondIs(self, ctx: vbaParser.CaseCondIsContext): ...
    def exitCaseCondIs(self, ctx: vbaParser.CaseCondIsContext): ...
    def enterCaseCondTo(self, ctx: vbaParser.CaseCondToContext): ...
    def exitCaseCondTo(self, ctx: vbaParser.CaseCondToContext): ...
    def enterCaseCondValue(self, ctx: vbaParser.CaseCondValueContext): ...
    def exitCaseCondValue(self, ctx: vbaParser.CaseCondValueContext): ...
    def enterSC_Case(self, ctx: vbaParser.SC_CaseContext): ...
    def exitSC_Case(self, ctx: vbaParser.SC_CaseContext): ...
    def enterCaseCondElse(self, ctx: vbaParser.CaseCondElseContext): ...
    def exitCaseCondElse(self, ctx: vbaParser.CaseCondElseContext): ...
    def enterCaseCondSelection(self, ctx: vbaParser.CaseCondSelectionContext): ...
    def exitCaseCondSelection(self, ctx: vbaParser.CaseCondSelectionContext): ...
    def enterSendkeysStmt(self, ctx: vbaParser.SendkeysStmtContext): ...
    def exitSendkeysStmt(self, ctx: vbaParser.SendkeysStmtContext): ...
    def enterSetattrStmt(self, ctx: vbaParser.SetattrStmtContext): ...
    def exitSetattrStmt(self, ctx: vbaParser.SetattrStmtContext): ...
    def enterSetStmt(self, ctx: vbaParser.SetStmtContext): ...
    def exitSetStmt(self, ctx: vbaParser.SetStmtContext): ...
    def enterStopStmt(self, ctx: vbaParser.StopStmtContext): ...
    def exitStopStmt(self, ctx: vbaParser.StopStmtContext): ...
    def enterSubStmt(self, ctx: vbaParser.SubStmtContext): ...
    def exitSubStmt(self, ctx: vbaParser.SubStmtContext): ...
    def enterTimeStmt(self, ctx: vbaParser.TimeStmtContext): ...
    def exitTimeStmt(self, ctx: vbaParser.TimeStmtContext): ...
    def enterTypeStmt(self, ctx: vbaParser.TypeStmtContext): ...
    def exitTypeStmt(self, ctx: vbaParser.TypeStmtContext): ...
    def enterTypeStmt_Element(self, ctx: vbaParser.TypeStmt_ElementContext): ...
    def exitTypeStmt_Element(self, ctx: vbaParser.TypeStmt_ElementContext): ...
    def enterTypeOfStmt(self, ctx: vbaParser.TypeOfStmtContext): ...
    def exitTypeOfStmt(self, ctx: vbaParser.TypeOfStmtContext): ...
    def enterUnloadStmt(self, ctx: vbaParser.UnloadStmtContext): ...
    def exitUnloadStmt(self, ctx: vbaParser.UnloadStmtContext): ...
    def enterUnlockStmt(self, ctx: vbaParser.UnlockStmtContext): ...
    def exitUnlockStmt(self, ctx: vbaParser.UnlockStmtContext): ...
    def enterExpression(self, ctx: vbaParser.ExpressionContext): ...
    def exitExpression(self, ctx: vbaParser.ExpressionContext): ...
    def enterNewExpress(self, ctx: vbaParser.NewExpressContext): ...
    def exitNewExpress(self, ctx: vbaParser.NewExpressContext): ...
    def enterNotOperatorExpression(self, ctx: vbaParser.NotOperatorExpressionContext): ...
    def exitNotOperatorExpression(self, ctx: vbaParser.NotOperatorExpressionContext): ...
    def enterParenthesizedExpression(self, ctx: vbaParser.ParenthesizedExpressionContext): ...
    def exitParenthesizedExpression(self, ctx: vbaParser.ParenthesizedExpressionContext): ...
    def enterUnaryMinusExpression(self, ctx: vbaParser.UnaryMinusExpressionContext): ...
    def exitUnaryMinusExpression(self, ctx: vbaParser.UnaryMinusExpressionContext): ...
    def enterVariableStmt(self, ctx: vbaParser.VariableStmtContext): ...
    def exitVariableStmt(self, ctx: vbaParser.VariableStmtContext): ...
    def enterVariableListStmt(self, ctx: vbaParser.VariableListStmtContext): ...
    def exitVariableListStmt(self, ctx: vbaParser.VariableListStmtContext): ...
    def enterVariableSubStmt(self, ctx: vbaParser.VariableSubStmtContext): ...
    def exitVariableSubStmt(self, ctx: vbaParser.VariableSubStmtContext): ...
    def enterWhileWendStmt(self, ctx: vbaParser.WhileWendStmtContext): ...
    def exitWhileWendStmt(self, ctx: vbaParser.WhileWendStmtContext): ...
    def enterWidthStmt(self, ctx: vbaParser.WidthStmtContext): ...
    def exitWidthStmt(self, ctx: vbaParser.WidthStmtContext): ...
    def enterWithStmt(self, ctx: vbaParser.WithStmtContext): ...
    def exitWithStmt(self, ctx: vbaParser.WithStmtContext): ...
    def enterWriteStmt(self, ctx: vbaParser.WriteStmtContext): ...
    def exitWriteStmt(self, ctx: vbaParser.WriteStmtContext): ...
    def enterFileNumber(self, ctx: vbaParser.FileNumberContext): ...
    def exitFileNumber(self, ctx: vbaParser.FileNumberContext): ...
    def enterExplicitCallStmt(self, ctx: vbaParser.ExplicitCallStmtContext): ...
    def exitExplicitCallStmt(self, ctx: vbaParser.ExplicitCallStmtContext): ...
    def enterECS_ProcedureCall(self, ctx: vbaParser.ECS_ProcedureCallContext): ...
    def exitECS_ProcedureCall(self, ctx: vbaParser.ECS_ProcedureCallContext): ...
    def enterECS_MemberProcedureCall(self, ctx: vbaParser.ECS_MemberProcedureCallContext): ...
    def exitECS_MemberProcedureCall(self, ctx: vbaParser.ECS_MemberProcedureCallContext): ...
    def enterImplicitCallStmt_InBlock(self, ctx: vbaParser.ImplicitCallStmt_InBlockContext): ...
    def exitImplicitCallStmt_InBlock(self, ctx: vbaParser.ImplicitCallStmt_InBlockContext): ...
    def enterICS_B_MemberProcedureCall(self, ctx: vbaParser.ICS_B_MemberProcedureCallContext): ...
    def exitICS_B_MemberProcedureCall(self, ctx: vbaParser.ICS_B_MemberProcedureCallContext): ...
    def enterICS_B_ProcedureCall(self, ctx: vbaParser.ICS_B_ProcedureCallContext): ...
    def exitICS_B_ProcedureCall(self, ctx: vbaParser.ICS_B_ProcedureCallContext): ...
    def enterImplicitCallStmt_InStmt(self, ctx: vbaParser.ImplicitCallStmt_InStmtContext): ...
    def exitImplicitCallStmt_InStmt(self, ctx: vbaParser.ImplicitCallStmt_InStmtContext): ...
    def enterICS_S_VariableOrProcedureCall(self, ctx: vbaParser.ICS_S_VariableOrProcedureCallContext): ...
    def exitICS_S_VariableOrProcedureCall(self, ctx: vbaParser.ICS_S_VariableOrProcedureCallContext): ...
    def enterICS_S_ProcedureOrArrayCall(self, ctx: vbaParser.ICS_S_ProcedureOrArrayCallContext): ...
    def exitICS_S_ProcedureOrArrayCall(self, ctx: vbaParser.ICS_S_ProcedureOrArrayCallContext): ...
    def enterICS_S_MembersCall(self, ctx: vbaParser.ICS_S_MembersCallContext): ...
    def exitICS_S_MembersCall(self, ctx: vbaParser.ICS_S_MembersCallContext): ...
    def enterICS_S_MemberCall(self, ctx: vbaParser.ICS_S_MemberCallContext): ...
    def exitICS_S_MemberCall(self, ctx: vbaParser.ICS_S_MemberCallContext): ...
    def enterICS_S_DictionaryCall(self, ctx: vbaParser.ICS_S_DictionaryCallContext): ...
    def exitICS_S_DictionaryCall(self, ctx: vbaParser.ICS_S_DictionaryCallContext): ...
    def enterArgsCall(self, ctx: vbaParser.ArgsCallContext): ...
    def exitArgsCall(self, ctx: vbaParser.ArgsCallContext): ...
    def enterArgCall(self, ctx: vbaParser.ArgCallContext): ...
    def exitArgCall(self, ctx: vbaParser.ArgCallContext): ...
    def enterDictionaryCallStmt(self, ctx: vbaParser.DictionaryCallStmtContext): ...
    def exitDictionaryCallStmt(self, ctx: vbaParser.DictionaryCallStmtContext): ...
    def enterArgList(self, ctx: vbaParser.ArgListContext): ...
    def exitArgList(self, ctx: vbaParser.ArgListContext): ...
    def enterArg(self, ctx: vbaParser.ArgContext): ...
    def exitArg(self, ctx: vbaParser.ArgContext): ...
    def enterArgDefaultValue(self, ctx: vbaParser.ArgDefaultValueContext): ...
    def exitArgDefaultValue(self, ctx: vbaParser.ArgDefaultValueContext): ...
    def enterSubscripts(self, ctx: vbaParser.SubscriptsContext): ...
    def exitSubscripts(self, ctx: vbaParser.SubscriptsContext): ...
    def enterSubscript_(self, ctx: vbaParser.Subscript_Context): ...
    def exitSubscript_(self, ctx: vbaParser.Subscript_Context): ...
    def enterAmbiguousIdentifier(self, ctx: vbaParser.AmbiguousIdentifierContext): ...
    def exitAmbiguousIdentifier(self, ctx: vbaParser.AmbiguousIdentifierContext): ...
    def enterAsTypeClause(self, ctx: vbaParser.AsTypeClauseContext): ...
    def exitAsTypeClause(self, ctx: vbaParser.AsTypeClauseContext): ...
    def enterBaseType(self, ctx: vbaParser.BaseTypeContext): ...
    def exitBaseType(self, ctx: vbaParser.BaseTypeContext): ...
    def enterCertainIdentifier(self, ctx: vbaParser.CertainIdentifierContext): ...
    def exitCertainIdentifier(self, ctx: vbaParser.CertainIdentifierContext): ...
    def enterComparisonOperator(self, ctx: vbaParser.ComparisonOperatorContext): ...
    def exitComparisonOperator(self, ctx: vbaParser.ComparisonOperatorContext): ...
    def enterComplexType(self, ctx: vbaParser.ComplexTypeContext): ...
    def exitComplexType(self, ctx: vbaParser.ComplexTypeContext): ...
    def enterFieldLength(self, ctx: vbaParser.FieldLengthContext): ...
    def exitFieldLength(self, ctx: vbaParser.FieldLengthContext): ...
    def enterLetterrange(self, ctx: vbaParser.LetterrangeContext): ...
    def exitLetterrange(self, ctx: vbaParser.LetterrangeContext): ...
    def enterLineLabel(self, ctx: vbaParser.LineLabelContext): ...
    def exitLineLabel(self, ctx: vbaParser.LineLabelContext): ...
    def enterLiteral(self, ctx: vbaParser.LiteralContext): ...
    def exitLiteral(self, ctx: vbaParser.LiteralContext): ...
    def enterType_(self, ctx: vbaParser.Type_Context): ...
    def exitType_(self, ctx: vbaParser.Type_Context): ...
    def enterTypeHint(self, ctx: vbaParser.TypeHintContext): ...
    def exitTypeHint(self, ctx: vbaParser.TypeHintContext): ...
    def enterVisibility(self, ctx: vbaParser.VisibilityContext): ...
    def exitVisibility(self, ctx: vbaParser.VisibilityContext): ...
    def enterAmbiguousKeyword(self, ctx: vbaParser.AmbiguousKeywordContext): ...
    def exitAmbiguousKeyword(self, ctx: vbaParser.AmbiguousKeywordContext): ...
    def enterRemComment(self, ctx: vbaParser.RemCommentContext): ...
    def exitRemComment(self, ctx: vbaParser.RemCommentContext): ...
    def enterComment(self, ctx: vbaParser.CommentContext): ...
    def exitComment(self, ctx: vbaParser.CommentContext): ...
    def enterEndOfLine(self, ctx: vbaParser.EndOfLineContext): ...
    def exitEndOfLine(self, ctx: vbaParser.EndOfLineContext): ...
    def enterEndOfStatement(self, ctx: vbaParser.EndOfStatementContext): ...
    def exitEndOfStatement(self, ctx: vbaParser.EndOfStatementContext): ...
    def enterWsc(self, ctx: vbaParser.WscContext): ...
    def exitWsc(self, ctx: vbaParser.WscContext): ...
