import openinference.semconv.trace as oinf
import opentelemetry.semconv.trace as otel

# Root level columns
SPAN_TRACE_ID_COL_NAME = "context.trace_id"
SPAN_SPAN_ID_COL_NAME = "context.span_id"
SPAN_PARENT_SPAN_ID_COL_NAME = "parent_id"
SPAN_NAME_COL_NAME = "name"
SPAN_START_TIME_COL_NAME = "start_time"
SPAN_END_TIME_COL_NAME = "end_time"
# Status columns
SPAN_STATUS_CODE_COL_NAME = "status_code"
SPAN_STATUS_MESSAGE_COL_NAME = "status_message"
# Events columns
SPAN_EVENTS_COL_NAME = "events"
SPAN_EVENT_NAME_KEY = "name"
SPAN_EVENT_TIME_KEY = "timestamp"
SPAN_EVENT_ATTRIBUTES_KEY = "attributes"
# Attributes
ROOT_LEVEL_SPAN_KIND_COL_NAME = "span_kind"
SPAN_KIND_COL_NAME = f"attributes.{oinf.SpanAttributes.OPENINFERENCE_SPAN_KIND}"
# Attributes Exception columns
SPAN_ATTRIBUTES_EXCEPTION_TYPE_COL_NAME = f"attributes.{otel.SpanAttributes.EXCEPTION_TYPE}"
SPAN_ATTRIBUTES_EXCEPTION_MESSAGE_COL_NAME = f"attributes.{otel.SpanAttributes.EXCEPTION_MESSAGE}"
SPAN_ATTRIBUTES_EXCEPTION_ESCAPED_COL_NAME = f"attributes.{otel.SpanAttributes.EXCEPTION_ESCAPED}"
SPAN_ATTRIBUTES_EXCEPTION_STACKTRACE_COL_NAME = (
    f"attributes.{otel.SpanAttributes.EXCEPTION_STACKTRACE}"
)
# Attributes Input columns
SPAN_ATTRIBUTES_INPUT_VALUE_COL_NAME = f"attributes.{oinf.SpanAttributes.INPUT_VALUE}"
SPAN_ATTRIBUTES_INPUT_MIME_TYPE_COL_NAME = f"attributes.{oinf.SpanAttributes.INPUT_MIME_TYPE}"
# Attributes Output columns
SPAN_ATTRIBUTES_OUTPUT_VALUE_COL_NAME = f"attributes.{oinf.SpanAttributes.OUTPUT_VALUE}"
SPAN_ATTRIBUTES_OUTPUT_MIME_TYPE_COL_NAME = f"attributes.{oinf.SpanAttributes.OUTPUT_MIME_TYPE}"
# Attributes Embedding columns
SPAN_ATTRIBUTES_EMBEDDING_MODEL_NAME_COL_NAME = (
    f"attributes.{oinf.SpanAttributes.EMBEDDING_MODEL_NAME}"
)
SPAN_ATTRIBUTES_EMBEDDING_EMBEDDINGS_COL_NAME = (
    f"attributes.{oinf.SpanAttributes.EMBEDDING_EMBEDDINGS}"
)
# Embedddings Keys
SPAN_ATTRIBUTES_EMBEDDING_VECTOR_KEY = f"{oinf.EmbeddingAttributes.EMBEDDING_VECTOR}"
SPAN_ATTRIBUTES_EMBEDDING_TEXT_KEY = f"{oinf.EmbeddingAttributes.EMBEDDING_TEXT}"
# Attributes LLM columns
SPAN_ATTRIBUTES_LLM_MODEL_NAME_COL_NAME = f"attributes.{oinf.SpanAttributes.LLM_MODEL_NAME}"
SPAN_ATTRIBUTES_LLM_INPUT_MESSAGES_COL_NAME = f"attributes.{oinf.SpanAttributes.LLM_INPUT_MESSAGES}"
SPAN_ATTRIBUTES_LLM_OUTPUT_MESSAGES_COL_NAME = (
    f"attributes.{oinf.SpanAttributes.LLM_OUTPUT_MESSAGES}"
)
SPAN_ATTRIBUTES_LLM_INVOCATION_PARAMETERS_COL_NAME = (
    f"attributes.{oinf.SpanAttributes.LLM_INVOCATION_PARAMETERS}"
)
SPAN_ATTRIBUTES_LLM_PROMPT_TEMPLATE_TEMPLATE_COL_NAME = (
    f"attributes.{oinf.SpanAttributes.LLM_PROMPT_TEMPLATE}"
)
SPAN_ATTRIBUTES_LLM_PROMPT_TEMPLATE_VARIABLES_COL_NAME = (
    f"attributes.{oinf.SpanAttributes.LLM_PROMPT_TEMPLATE_VARIABLES}"
)
SPAN_ATTRIBUTES_LLM_PROMPT_TEMPLATE_VERSION_COL_NAME = (
    f"attributes.{oinf.SpanAttributes.LLM_PROMPT_TEMPLATE_VERSION}"
)
SPAN_ATTRIBUTES_LLM_PROMPT_TOKEN_COUNT_COL_NAME = (
    f"attributes.{oinf.SpanAttributes.LLM_TOKEN_COUNT_PROMPT}"
)
SPAN_ATTRIBUTES_LLM_COMPLETION_TOKEN_COUNT_COL_NAME = (
    f"attributes.{oinf.SpanAttributes.LLM_TOKEN_COUNT_COMPLETION}"
)
SPAN_ATTRIBUTES_LLM_TOTAL_TOKEN_COUNT_COL_NAME = (
    f"attributes.{oinf.SpanAttributes.LLM_TOKEN_COUNT_TOTAL}"
)
# Attributes Message Keys
SPAN_ATTRIBUTES_MESSAGE_NAME_KEY = f"{oinf.MessageAttributes.MESSAGE_NAME}"
SPAN_ATTRIBUTES_MESSAGE_ROLE_KEY = f"{oinf.MessageAttributes.MESSAGE_ROLE}"
SPAN_ATTRIBUTES_MESSAGE_CONTENT_KEY = f"{oinf.MessageAttributes.MESSAGE_CONTENT}"
SPAN_ATTRIBUTES_MESSAGE_TOOL_CALLS_KEY = f"{oinf.MessageAttributes.MESSAGE_TOOL_CALLS}"
SPAN_ATTRIBUTES_MESSAGE_TOOL_CALLS_FUNCTION_NAME_KEY = (
    f"{oinf.ToolCallAttributes.TOOL_CALL_FUNCTION_NAME}"
)
SPAN_ATTRIBUTES_MESSAGE_TOOL_CALLS_FUNCTION_ARGUMENTS_KEY = (
    f"{oinf.ToolCallAttributes.TOOL_CALL_FUNCTION_ARGUMENTS_JSON}"
)
# Attributes Tool columns
SPAN_ATTRIBUTES_TOOL_NAME_COL_NAME = f"{oinf.SpanAttributes.TOOL_NAME}"
SPAN_ATTRIBUTES_TOOL_DESCRIPTION_COL_NAME = f"{oinf.SpanAttributes.TOOL_DESCRIPTION}"
SPAN_ATTRIBUTES_TOOL_PARAMETERS_COL_NAME = f"{oinf.SpanAttributes.TOOL_PARAMETERS}"
# Attributes Retrieval columns
SPAN_ATTRIBUTES_RETRIEVAL_DOCUMENTS_COL_NAME = (
    f"attributes.{oinf.SpanAttributes.RETRIEVAL_DOCUMENTS}"
)
# Document Object Keys
SPAN_ATTRIBUTES_DOCUMENT_ID_KEY = f"{oinf.DocumentAttributes.DOCUMENT_ID}"
SPAN_ATTRIBUTES_DOCUMENT_SCORE_KEY = f"{oinf.DocumentAttributes.DOCUMENT_SCORE}"
SPAN_ATTRIBUTES_DOCUMENT_CONTENT_KEY = f"{oinf.DocumentAttributes.DOCUMENT_CONTENT}"
SPAN_ATTRIBUTES_DOCUMENT_METADATA_KEY = f"{oinf.DocumentAttributes.DOCUMENT_METADATA}"
# Attributes Reranker columns
SPAN_ATTRIBUTES_RERANKER_INPUT_DOCUMENTS_COL_NAME = (
    f"attributes.{oinf.RerankerAttributes.RERANKER_INPUT_DOCUMENTS}"
)
SPAN_ATTRIBUTES_RERANKER_OUTPUT_DOCUMENTS_COL_NAME = (
    f"attributes.{oinf.RerankerAttributes.RERANKER_OUTPUT_DOCUMENTS}"
)
SPAN_ATTRIBUTES_RERANKER_QUERY_COL_NAME = f"attributes.{oinf.RerankerAttributes.RERANKER_QUERY}"
SPAN_ATTRIBUTES_RERANKER_MODEL_NAME_COL_NAME = (
    f"attributes.{oinf.RerankerAttributes.RERANKER_MODEL_NAME}"
)
SPAN_ATTRIBUTES_RERANKER_TOP_K_COL_NAME = f"attributes.{oinf.RerankerAttributes.RERANKER_TOP_K}"

# TODO(Kiko): Add a test that checks no dupes in following lists
SPAN_OPENINFERENCE_COLUMN_NAMES = [
    SPAN_TRACE_ID_COL_NAME,
    SPAN_SPAN_ID_COL_NAME,
    SPAN_PARENT_SPAN_ID_COL_NAME,
    ROOT_LEVEL_SPAN_KIND_COL_NAME,
    SPAN_KIND_COL_NAME,
    SPAN_NAME_COL_NAME,
    SPAN_START_TIME_COL_NAME,
    SPAN_END_TIME_COL_NAME,
    SPAN_STATUS_CODE_COL_NAME,
    SPAN_STATUS_MESSAGE_COL_NAME,
    SPAN_EVENTS_COL_NAME,
    SPAN_ATTRIBUTES_EXCEPTION_TYPE_COL_NAME,
    SPAN_ATTRIBUTES_EXCEPTION_MESSAGE_COL_NAME,
    SPAN_ATTRIBUTES_EXCEPTION_ESCAPED_COL_NAME,
    SPAN_ATTRIBUTES_EXCEPTION_STACKTRACE_COL_NAME,
    SPAN_ATTRIBUTES_INPUT_VALUE_COL_NAME,
    SPAN_ATTRIBUTES_INPUT_MIME_TYPE_COL_NAME,
    SPAN_ATTRIBUTES_OUTPUT_VALUE_COL_NAME,
    SPAN_ATTRIBUTES_OUTPUT_MIME_TYPE_COL_NAME,
    SPAN_ATTRIBUTES_EMBEDDING_MODEL_NAME_COL_NAME,
    SPAN_ATTRIBUTES_EMBEDDING_EMBEDDINGS_COL_NAME,
    SPAN_ATTRIBUTES_LLM_INVOCATION_PARAMETERS_COL_NAME,
    SPAN_ATTRIBUTES_LLM_INPUT_MESSAGES_COL_NAME,
    SPAN_ATTRIBUTES_LLM_OUTPUT_MESSAGES_COL_NAME,
    SPAN_ATTRIBUTES_LLM_MODEL_NAME_COL_NAME,
    SPAN_ATTRIBUTES_LLM_PROMPT_TEMPLATE_TEMPLATE_COL_NAME,
    SPAN_ATTRIBUTES_LLM_PROMPT_TEMPLATE_VARIABLES_COL_NAME,
    SPAN_ATTRIBUTES_LLM_PROMPT_TEMPLATE_VERSION_COL_NAME,
    SPAN_ATTRIBUTES_LLM_PROMPT_TOKEN_COUNT_COL_NAME,
    SPAN_ATTRIBUTES_LLM_COMPLETION_TOKEN_COUNT_COL_NAME,
    SPAN_ATTRIBUTES_LLM_TOTAL_TOKEN_COUNT_COL_NAME,
    SPAN_ATTRIBUTES_TOOL_NAME_COL_NAME,
    SPAN_ATTRIBUTES_TOOL_DESCRIPTION_COL_NAME,
    SPAN_ATTRIBUTES_TOOL_PARAMETERS_COL_NAME,
    SPAN_ATTRIBUTES_RETRIEVAL_DOCUMENTS_COL_NAME,
    SPAN_ATTRIBUTES_RERANKER_INPUT_DOCUMENTS_COL_NAME,
    SPAN_ATTRIBUTES_RERANKER_OUTPUT_DOCUMENTS_COL_NAME,
    SPAN_ATTRIBUTES_RERANKER_QUERY_COL_NAME,
    SPAN_ATTRIBUTES_RERANKER_MODEL_NAME_COL_NAME,
    SPAN_ATTRIBUTES_RERANKER_TOP_K_COL_NAME,
]
# The following are helper lists to validate data types in the columns of the dataframe
# Any column missing from the lists below will be assumed to contain and rejected otherwise

# Minimal column set, these cannot be missing in the dataframe
SPAN_OPENINFERENCE_REQUIRED_COLS = [
    SPAN_TRACE_ID_COL_NAME,
    SPAN_SPAN_ID_COL_NAME,
    SPAN_NAME_COL_NAME,
]

# Columns with list of dictionaries in them
SPAN_OPENINFERENCE_LIST_OF_DICT_COLS = [
    SPAN_ATTRIBUTES_EMBEDDING_EMBEDDINGS_COL_NAME,
    SPAN_ATTRIBUTES_LLM_INPUT_MESSAGES_COL_NAME,
    SPAN_ATTRIBUTES_LLM_OUTPUT_MESSAGES_COL_NAME,
    SPAN_ATTRIBUTES_RETRIEVAL_DOCUMENTS_COL_NAME,
    SPAN_ATTRIBUTES_RERANKER_INPUT_DOCUMENTS_COL_NAME,
    SPAN_ATTRIBUTES_RERANKER_OUTPUT_DOCUMENTS_COL_NAME,
    SPAN_EVENTS_COL_NAME,
]
# Columns with dictionaries in them
SPAN_OPENINFERENCE_DICT_COLS = [
    SPAN_ATTRIBUTES_LLM_PROMPT_TEMPLATE_VARIABLES_COL_NAME,
]
# Columns with JSON strings in them
SPAN_OPENINFERENCE_JSON_STR_COLS = [
    SPAN_ATTRIBUTES_TOOL_PARAMETERS_COL_NAME,
]
# Columns with numbers in them
SPAN_OPENINFERENCE_NUM_COLS = [
    SPAN_ATTRIBUTES_LLM_PROMPT_TOKEN_COUNT_COL_NAME,
    SPAN_ATTRIBUTES_LLM_COMPLETION_TOKEN_COUNT_COL_NAME,
    SPAN_ATTRIBUTES_LLM_TOTAL_TOKEN_COUNT_COL_NAME,
    SPAN_ATTRIBUTES_RERANKER_TOP_K_COL_NAME,
]
# Columns with booleans in them
SPAN_OPENINFERENCE_BOOL_COLS = [
    SPAN_ATTRIBUTES_EXCEPTION_ESCAPED_COL_NAME,
]
# Columns with times in them in many different format
SPAN_OPENINFERENCE_TIME_COLS = [
    SPAN_START_TIME_COL_NAME,
    SPAN_END_TIME_COL_NAME,
]
