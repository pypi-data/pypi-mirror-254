"use strict";(self.webpackChunk_atoti_jupyterlab_extension=self.webpackChunk_atoti_jupyterlab_extension||[]).push([[4957,8516],{94957:(e,s,n)=>{n.r(s),n.d(s,{anonymousUsername:()=>r,checkUser:()=>c,defaultServerKey:()=>t,roleAdmin:()=>a,roleUser:()=>o,syncDataModel:()=>i,version:()=>l});const t="default",a="ROLE_ADMIN",o="ROLE_USER",r="anonymousUser",c=({username:e,userRoles:s})=>{if(!(e!==r||s.includes(o)&&s.includes(a)))throw new Error(`Anonymous user should have roles ${o} and ${a} but had roles: ${s}.`)};var u=n(40831);const i=e=>{const s=`${e.url.replace(/^http/,"ws")}/atoti/discovery`;let n;const t=t=>{"connected"===t?(n=new WebSocket(s),n.addEventListener("message",(({data:s})=>{const n=JSON.parse(s),t=(0,u.M)(n);e.__UNSAFE_setDataModel__(t)}))):"disconnected"===t&&n&&(n.close(),n=void 0)};return t(e.connectionStatus),e.addConnectionStatusListener(t),()=>{e.removeConnectionStatusListener(t),n&&n.close()}},l="0.8.9"},40831:(e,s,n)=>{n.d(s,{M:()=>a});var t=n(77026);const a=e=>{const s=e.catalogs.map((e=>{const s=e.cubes.map((e=>(e=>{const s=e.dimensions.map((e=>{const s=e.hierarchies.map((e=>{const s=(0,t.keyBy)(e.levels.map(((e,s)=>({...e,index:s}))),"name");return{...e,levels:s}})),n=(0,t.keyBy)(s,"name");return{...e,hierarchies:n}})),{measures:n,kpis:a,sets:o,contextValues:r,measureGroups:c}=e;return{...e,dimensions:(0,t.keyBy)(s,"name"),measures:(0,t.keyBy)(n,"name"),kpis:(0,t.keyBy)(a,"name"),sets:(0,t.keyBy)(o,"name"),contextValues:(0,t.keyBy)(r,"name"),measureGroups:(0,t.keyBy)(c,"name")}})(e)));return{...e,cubes:(0,t.keyBy)(s,"name")}})),{contextValues:n}=e;return{catalogs:(0,t.keyBy)(s,"name"),contextValues:(0,t.keyBy)(n,"name")}}}}]);