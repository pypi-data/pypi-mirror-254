[tool.poetry]
name = "julep"
version = "0.1.2"
description = "Julep is a platform for creating agents with long-term memory"
authors = ["Julep Developers <developers@julep.ai>"]
license = "ISC"
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.8,<3.13"
httpx = "^0.26.0"
pydantic = "^2.5.3"
environs = "^10.3.0"
beartype = "^0.16.4"
openai = "^1.11.0"


[tool.poetry.group.dev.dependencies]
pytype = "^2024.1.5"
black = "^23.12.1"
ward = "^0.68.0b0"
ruff = "^0.1.13"
poethepoet = "^0.24.4"
ipython = "<8.13"
pyright = "^1.1.348"
handsdown = "^2.1.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poe.tasks]
format = "black ."
lint = "ruff **/*.py --fix --unsafe-fixes"
typecheck = "pytype --config=pytype.toml julep"
check = [
    "format",
    "lint",
    "typecheck",
]
start_prism.shell = "prism mock ./tests/mock_openapi.yaml -p 8080 -v fatal 1> /dev/null &"
kill_prism.shell = "kill $(pgrep -f 'prism .*')"
test = [
    "check",
    "start_prism",
    { cmd = "echo 'Waiting for prism to start up'" },
    { cmd = "sleep 1" },
    { cmd = "ward" },
    "kill_prism",
]
doc = "handsdown julep --exclude julep/api/core --exclude julep/api/types --exclude julep/api/environment.py --exclude julep/env.py --exclude julep/managers/base.py --exclude julep/managers/types.py --exclude julep/managers/utils.py --cleanup -n 'Julep Python SDK' --toc-depth 2 -o ../../gitbook/python-sdk-docs"

[[tool.pydoc-markdown.loaders]]
type = "python"
search_path = [ "./" ]

[tool.pydoc-markdown.renderer]
type = "markdown"
insert_header_anchors = false
classdef_with_decorators = false
signature_with_decorators = false
format_code = false
descriptive_class_title = false
classdef_code_block = false
signature_in_header = true
signature_code_block = false
docstrings_as_blockquote = false
